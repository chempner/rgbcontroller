

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 28 09:56:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F16Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.32
    23                           ; Generated 02/02/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F16Q40 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _PMD5	set	104
    58  0000                     _PMD4	set	103
    59  0000                     _PMD3	set	102
    60  0000                     _PMD2	set	101
    61  0000                     _PMD1	set	100
    62  0000                     _PMD0	set	99
    63  0000                     _ACTCON	set	172
    64  0000                     _OSCTUNE	set	176
    65  0000                     _OSCFRQ	set	177
    66  0000                     _OSCEN	set	179
    67  0000                     _OSCCON3	set	175
    68  0000                     _OSCCON1	set	173
    69  0000                     _ADCON1bits	set	1012
    70  0000                     _ADERRL	set	989
    71  0000                     _ADERRH	set	990
    72  0000                     _ADPREVL	set	1000
    73  0000                     _ADPREVH	set	1001
    74  0000                     _ADFLTRL	set	993
    75  0000                     _ADFLTRH	set	994
    76  0000                     _ADSTATbits	set	1015
    77  0000                     _ADACCL	set	995
    78  0000                     _ADACCH	set	996
    79  0000                     _ADCON2bits	set	1013
    80  0000                     _ADCNT	set	998
    81  0000                     _ADCON3bits	set	1014
    82  0000                     _ADRESL	set	1002
    83  0000                     _ADRESH	set	1003
    84  0000                     _ADCON0bits	set	1011
    85  0000                     _ADCON0	set	1011
    86  0000                     _ADCLK	set	1018
    87  0000                     _ADACT	set	1017
    88  0000                     _ADREF	set	1016
    89  0000                     _ADSTAT	set	1015
    90  0000                     _ADCON3	set	1014
    91  0000                     _ADCON2	set	1013
    92  0000                     _ADCON1	set	1012
    93  0000                     _ADPREH	set	1010
    94  0000                     _ADPREL	set	1009
    95  0000                     _ADCAP	set	1008
    96  0000                     _ADACQH	set	1007
    97  0000                     _ADACQL	set	1006
    98  0000                     _ADPCH	set	1004
    99  0000                     _ADRPT	set	999
   100  0000                     _ADACCU	set	997
   101  0000                     _ADSTPTH	set	992
   102  0000                     _ADSTPTL	set	991
   103  0000                     _ADUTHH	set	988
   104  0000                     _ADUTHL	set	987
   105  0000                     _ADLTHH	set	986
   106  0000                     _ADLTHL	set	985
   107  0000                     _INLVLC	set	1044
   108  0000                     _INLVLB	set	1036
   109  0000                     _INLVLA	set	1028
   110  0000                     _SLRCONC	set	1043
   111  0000                     _SLRCONB	set	1035
   112  0000                     _SLRCONA	set	1027
   113  0000                     _ODCONC	set	1042
   114  0000                     _ODCONB	set	1034
   115  0000                     _ODCONA	set	1026
   116  0000                     _WPUC	set	1041
   117  0000                     _WPUA	set	1025
   118  0000                     _WPUB	set	1033
   119  0000                     _ANSELA	set	1024
   120  0000                     _ANSELB	set	1032
   121  0000                     _ANSELC	set	1040
   122  0000                     _LATBbits	set	1215
   123  0000                     _TRISC	set	1224
   124  0000                     _TRISB	set	1223
   125  0000                     _TRISA	set	1222
   126  0000                     _LATC	set	1216
   127  0000                     _LATB	set	1215
   128  0000                     _LATA	set	1214
   129                           
   130                           ; #config settings
   131                           
   132                           	psect	cinit
   133  00FCEC                     __pcinit:
   134                           	callstack 0
   135  00FCEC                     start_initialization:
   136                           	callstack 0
   137  00FCEC                     __initialization:
   138                           	callstack 0
   139  00FCEC                     end_of_initialization:
   140                           	callstack 0
   141  00FCEC                     __end_of__initialization:
   142                           	callstack 0
   143  00FCEC  0100               	movlb	0
   144  00FCEE  EF7C  F07F         	goto	_main	;jump to C main() function
   145                           
   146                           	psect	cstackCOMRAM
   147  000501                     __pcstackCOMRAM:
   148                           	callstack 0
   149  000501                     ws_send_byte@K:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x0
   153  000501                     	ds	1
   154  000502                     c_WS2812B_Write@G:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0x1
   158  000502                     	ds	1
   159  000503                     c_WS2812B_Write@B:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x2
   163  000503                     	ds	1
   164  000504                     c_WS2812B_Write@W:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x3
   168  000504                     	ds	1
   169  000505                     c_WS2812B_Write@R:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x4
   173  000505                     	ds	1
   174  000506                     ??_main:
   175                           
   176                           ; 1 bytes @ 0x5
   177  000506                     	ds	1
   178                           
   179 ;;
   180 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   181 ;;
   182 ;; *************** function _main *****************
   183 ;; Defined at:
   184 ;;		line 11 in file "main.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;  white           1    0        unsigned char 
   189 ;;  blue            1    0        unsigned char 
   190 ;;  green           1    0        unsigned char 
   191 ;;  red             1    0        unsigned char 
   192 ;; Return value:  Size  Location     Type
   193 ;;                  1    wreg      void 
   194 ;; Registers used:
   195 ;;		wreg, status,2, cstack
   196 ;; Tracked objects:
   197 ;;		On entry : 0/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   204 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   205 ;;Total ram usage:        1 bytes
   206 ;; Hardware stack levels required when called: 3
   207 ;; This function calls:
   208 ;;		_SYSTEM_Initialize
   209 ;;		_c_WS2812B_Write
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           	psect	text0
   216  00FEF8                     __ptext0:
   217                           	callstack 0
   218  00FEF8                     _main:
   219                           	callstack 125
   220  00FEF8                     
   221                           ;main.c: 14:     SYSTEM_Initialize();
   222  00FEF8  EC79  F07E         	call	_SYSTEM_Initialize	;wreg free
   223  00FEFC                     
   224                           ;main.c: 28:     c_WS2812B_Write(150,105,150,150);
   225  00FEFC  0E69               	movlw	105
   226  00FEFE  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   227  00FF00  0E96               	movlw	150
   228  00FF02  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   229  00FF04  0E96               	movlw	150
   230  00FF06  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   231  00FF08  0E96               	movlw	150
   232  00FF0A  EC9E  F07E         	call	_c_WS2812B_Write
   233  00FF0E                     
   234                           ;main.c: 29:     c_WS2812B_Write(150,105,150,150);
   235  00FF0E  0E69               	movlw	105
   236  00FF10  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   237  00FF12  0E96               	movlw	150
   238  00FF14  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   239  00FF16  0E96               	movlw	150
   240  00FF18  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   241  00FF1A  0E96               	movlw	150
   242  00FF1C  EC9E  F07E         	call	_c_WS2812B_Write
   243  00FF20                     
   244                           ;main.c: 30:     c_WS2812B_Write(150,105,150,150);
   245  00FF20  0E69               	movlw	105
   246  00FF22  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   247  00FF24  0E96               	movlw	150
   248  00FF26  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   249  00FF28  0E96               	movlw	150
   250  00FF2A  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   251  00FF2C  0E96               	movlw	150
   252  00FF2E  EC9E  F07E         	call	_c_WS2812B_Write
   253  00FF32                     
   254                           ;main.c: 31:     c_WS2812B_Write(150,105,150,150);
   255  00FF32  0E69               	movlw	105
   256  00FF34  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   257  00FF36  0E96               	movlw	150
   258  00FF38  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   259  00FF3A  0E96               	movlw	150
   260  00FF3C  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   261  00FF3E  0E96               	movlw	150
   262  00FF40  EC9E  F07E         	call	_c_WS2812B_Write
   263  00FF44                     
   264                           ;main.c: 32:     c_WS2812B_Write(150,105,150,150);
   265  00FF44  0E69               	movlw	105
   266  00FF46  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   267  00FF48  0E96               	movlw	150
   268  00FF4A  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   269  00FF4C  0E96               	movlw	150
   270  00FF4E  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   271  00FF50  0E96               	movlw	150
   272  00FF52  EC9E  F07E         	call	_c_WS2812B_Write
   273  00FF56                     
   274                           ;main.c: 33:     c_WS2812B_Write(150,105,150,150);
   275  00FF56  0E69               	movlw	105
   276  00FF58  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   277  00FF5A  0E96               	movlw	150
   278  00FF5C  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   279  00FF5E  0E96               	movlw	150
   280  00FF60  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   281  00FF62  0E96               	movlw	150
   282  00FF64  EC9E  F07E         	call	_c_WS2812B_Write
   283  00FF68                     
   284                           ;main.c: 34:     c_WS2812B_Write(150,105,150,150);
   285  00FF68  0E69               	movlw	105
   286  00FF6A  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   287  00FF6C  0E96               	movlw	150
   288  00FF6E  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   289  00FF70  0E96               	movlw	150
   290  00FF72  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   291  00FF74  0E96               	movlw	150
   292  00FF76  EC9E  F07E         	call	_c_WS2812B_Write
   293  00FF7A                     
   294                           ;main.c: 35:     c_WS2812B_Write(150,105,150,150);
   295  00FF7A  0E69               	movlw	105
   296  00FF7C  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   297  00FF7E  0E96               	movlw	150
   298  00FF80  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   299  00FF82  0E96               	movlw	150
   300  00FF84  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   301  00FF86  0E96               	movlw	150
   302  00FF88  EC9E  F07E         	call	_c_WS2812B_Write
   303  00FF8C                     
   304                           ;main.c: 36:     c_WS2812B_Write(150,105,150,150);
   305  00FF8C  0E69               	movlw	105
   306  00FF8E  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   307  00FF90  0E96               	movlw	150
   308  00FF92  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   309  00FF94  0E96               	movlw	150
   310  00FF96  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   311  00FF98  0E96               	movlw	150
   312  00FF9A  EC9E  F07E         	call	_c_WS2812B_Write
   313  00FF9E                     
   314                           ;main.c: 37:     c_WS2812B_Write(150,105,150,150);
   315  00FF9E  0E69               	movlw	105
   316  00FFA0  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   317  00FFA2  0E96               	movlw	150
   318  00FFA4  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   319  00FFA6  0E96               	movlw	150
   320  00FFA8  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   321  00FFAA  0E96               	movlw	150
   322  00FFAC  EC9E  F07E         	call	_c_WS2812B_Write
   323  00FFB0                     
   324                           ;main.c: 38:     c_WS2812B_Write(150,105,150,150);
   325  00FFB0  0E69               	movlw	105
   326  00FFB2  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   327  00FFB4  0E96               	movlw	150
   328  00FFB6  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   329  00FFB8  0E96               	movlw	150
   330  00FFBA  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   331  00FFBC  0E96               	movlw	150
   332  00FFBE  EC9E  F07E         	call	_c_WS2812B_Write
   333  00FFC2                     
   334                           ;main.c: 39:     c_WS2812B_Write(150,105,150,150);
   335  00FFC2  0E69               	movlw	105
   336  00FFC4  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   337  00FFC6  0E96               	movlw	150
   338  00FFC8  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   339  00FFCA  0E96               	movlw	150
   340  00FFCC  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   341  00FFCE  0E96               	movlw	150
   342  00FFD0  EC9E  F07E         	call	_c_WS2812B_Write
   343  00FFD4                     
   344                           ;main.c: 40:     c_WS2812B_Write(150,105,150,150);
   345  00FFD4  0E69               	movlw	105
   346  00FFD6  6E02               	movwf	c_WS2812B_Write@G^(0+1280),c
   347  00FFD8  0E96               	movlw	150
   348  00FFDA  6E03               	movwf	c_WS2812B_Write@B^(0+1280),c
   349  00FFDC  0E96               	movlw	150
   350  00FFDE  6E04               	movwf	c_WS2812B_Write@W^(0+1280),c
   351  00FFE0  0E96               	movlw	150
   352  00FFE2  EC9E  F07E         	call	_c_WS2812B_Write
   353  00FFE6                     l1201:
   354                           
   355                           ;main.c: 43:     {;main.c: 44:         _delay((unsigned long)((10)*(64000000/4000.0)));
   356  00FFE6  0ED0               	movlw	208
   357  00FFE8  6E06               	movwf	??_main^(0+1280),c
   358  00FFEA  0ECA               	movlw	202
   359  00FFEC                     u107:
   360  00FFEC  2EE8               	decfsz	wreg,f,c
   361  00FFEE  D7FE               	bra	u107
   362  00FFF0  2E06               	decfsz	??_main^(0+1280),f,c
   363  00FFF2  D7FC               	bra	u107
   364  00FFF4  EFF3  F07F         	goto	l1201
   365  00FFF8  EFFE  F07F         	goto	start
   366  00FFFC                     __end_of_main:
   367                           	callstack 0
   368                           
   369 ;; *************** function _c_WS2812B_Write *****************
   370 ;; Defined at:
   371 ;;		line 3 in file "DivFunctions.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;  R               1    wreg     unsigned char 
   374 ;;  G               1    1[COMRAM] unsigned char 
   375 ;;  B               1    2[COMRAM] unsigned char 
   376 ;;  W               1    3[COMRAM] unsigned char 
   377 ;; Auto vars:     Size  Location     Type
   378 ;;  R               1    4[COMRAM] unsigned char 
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   388 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   391 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   392 ;;Total ram usage:        4 bytes
   393 ;; Hardware stack levels used: 1
   394 ;; Hardware stack levels required when called: 2
   395 ;; This function calls:
   396 ;;		_ws_send_byte
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text1
   403  00FD3C                     __ptext1:
   404                           	callstack 0
   405  00FD3C                     _c_WS2812B_Write:
   406                           	callstack 125
   407                           
   408                           ;incstack = 0
   409                           ;c_WS2812B_Write@R stored from wreg
   410  00FD3C  6E05               	movwf	c_WS2812B_Write@R^(0+1280),c
   411  00FD3E                     
   412                           ;DivFunctions.c: 3: void c_WS2812B_Write(uint8_t R, uint8_t G, uint8_t B, uint8_t W);Div
      +                          Functions.c: 4: {;DivFunctions.c: 5:     ws_send_byte(R);
   413  00FD3E  5005               	movf	c_WS2812B_Write@R^(0+1280),w,c
   414  00FD40  EC12  F07F         	call	_ws_send_byte
   415                           
   416                           ;DivFunctions.c: 6:     ws_send_byte(G);
   417  00FD44  5002               	movf	c_WS2812B_Write@G^(0+1280),w,c
   418  00FD46  EC12  F07F         	call	_ws_send_byte
   419                           
   420                           ;DivFunctions.c: 7:     ws_send_byte(B);
   421  00FD4A  5003               	movf	c_WS2812B_Write@B^(0+1280),w,c
   422  00FD4C  EC12  F07F         	call	_ws_send_byte
   423                           
   424                           ;DivFunctions.c: 8:     ws_send_byte(W);
   425  00FD50  5004               	movf	c_WS2812B_Write@W^(0+1280),w,c
   426  00FD52  EC12  F07F         	call	_ws_send_byte
   427  00FD56  0012               	return		;funcret
   428  00FD58                     __end_of_c_WS2812B_Write:
   429                           	callstack 0
   430                           
   431 ;; *************** function _ws_send_byte *****************
   432 ;; Defined at:
   433 ;;		line 197 in file "DivFunctions.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;  K               1    wreg     unsigned char 
   436 ;; Auto vars:     Size  Location     Type
   437 ;;  K               1    0[COMRAM] unsigned char 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   451 ;;Total ram usage:        1 bytes
   452 ;; Hardware stack levels used: 1
   453 ;; Hardware stack levels required when called: 1
   454 ;; This function calls:
   455 ;;		_onePulse
   456 ;;		_zeroPulse
   457 ;; This function is called by:
   458 ;;		_c_WS2812B_Write
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text2
   463  00FE24                     __ptext2:
   464                           	callstack 0
   465  00FE24                     _ws_send_byte:
   466                           	callstack 125
   467                           
   468                           ;incstack = 0
   469                           ;ws_send_byte@K stored from wreg
   470  00FE24  6E01               	movwf	ws_send_byte@K^(0+1280),c
   471  00FE26                     
   472                           ;DivFunctions.c: 197: void ws_send_byte(unsigned char K);DivFunctions.c: 198: {;DivFunct
      +                          ions.c: 199:     if(K & 0b10000000) {onePulse();}
   473  00FE26  AE01               	btfss	ws_send_byte@K^(0+1280),7,c
   474  00FE28  EF18  F07F         	goto	u11
   475  00FE2C  EF1A  F07F         	goto	u10
   476  00FE30                     u11:
   477  00FE30  EF1E  F07F         	goto	l995
   478  00FE34                     u10:
   479  00FE34  ECAC  F07E         	call	_onePulse	;wreg free
   480  00FE38  EF20  F07F         	goto	l997
   481  00FE3C                     l995:
   482  00FE3C  EC73  F07E         	call	_zeroPulse	;wreg free
   483  00FE40                     l997:
   484                           
   485                           ;DivFunctions.c: 202:     if(K & 0b01000000) {onePulse();}
   486  00FE40  AC01               	btfss	ws_send_byte@K^(0+1280),6,c
   487  00FE42  EF25  F07F         	goto	u21
   488  00FE46  EF27  F07F         	goto	u20
   489  00FE4A                     u21:
   490  00FE4A  EF2B  F07F         	goto	l1001
   491  00FE4E                     u20:
   492  00FE4E  ECAC  F07E         	call	_onePulse	;wreg free
   493  00FE52  EF2D  F07F         	goto	l1003
   494  00FE56                     l1001:
   495  00FE56  EC73  F07E         	call	_zeroPulse	;wreg free
   496  00FE5A                     l1003:
   497                           
   498                           ;DivFunctions.c: 205:     if(K & 0b00100000) {onePulse();}
   499  00FE5A  AA01               	btfss	ws_send_byte@K^(0+1280),5,c
   500  00FE5C  EF32  F07F         	goto	u31
   501  00FE60  EF34  F07F         	goto	u30
   502  00FE64                     u31:
   503  00FE64  EF38  F07F         	goto	l1007
   504  00FE68                     u30:
   505  00FE68  ECAC  F07E         	call	_onePulse	;wreg free
   506  00FE6C  EF3A  F07F         	goto	l1009
   507  00FE70                     l1007:
   508  00FE70  EC73  F07E         	call	_zeroPulse	;wreg free
   509  00FE74                     l1009:
   510                           
   511                           ;DivFunctions.c: 208:     if(K & 0b00010000) {onePulse();}
   512  00FE74  A801               	btfss	ws_send_byte@K^(0+1280),4,c
   513  00FE76  EF3F  F07F         	goto	u41
   514  00FE7A  EF41  F07F         	goto	u40
   515  00FE7E                     u41:
   516  00FE7E  EF45  F07F         	goto	l1013
   517  00FE82                     u40:
   518  00FE82  ECAC  F07E         	call	_onePulse	;wreg free
   519  00FE86  EF47  F07F         	goto	l1015
   520  00FE8A                     l1013:
   521  00FE8A  EC73  F07E         	call	_zeroPulse	;wreg free
   522  00FE8E                     l1015:
   523                           
   524                           ;DivFunctions.c: 211:     if(K & 0b00001000) {onePulse();}
   525  00FE8E  A601               	btfss	ws_send_byte@K^(0+1280),3,c
   526  00FE90  EF4C  F07F         	goto	u51
   527  00FE94  EF4E  F07F         	goto	u50
   528  00FE98                     u51:
   529  00FE98  EF52  F07F         	goto	l1019
   530  00FE9C                     u50:
   531  00FE9C  ECAC  F07E         	call	_onePulse	;wreg free
   532  00FEA0  EF54  F07F         	goto	l1021
   533  00FEA4                     l1019:
   534  00FEA4  EC73  F07E         	call	_zeroPulse	;wreg free
   535  00FEA8                     l1021:
   536                           
   537                           ;DivFunctions.c: 214:     if(K & 0b00000100) {onePulse();}
   538  00FEA8  A401               	btfss	ws_send_byte@K^(0+1280),2,c
   539  00FEAA  EF59  F07F         	goto	u61
   540  00FEAE  EF5B  F07F         	goto	u60
   541  00FEB2                     u61:
   542  00FEB2  EF5F  F07F         	goto	l1025
   543  00FEB6                     u60:
   544  00FEB6  ECAC  F07E         	call	_onePulse	;wreg free
   545  00FEBA  EF61  F07F         	goto	l1027
   546  00FEBE                     l1025:
   547  00FEBE  EC73  F07E         	call	_zeroPulse	;wreg free
   548  00FEC2                     l1027:
   549                           
   550                           ;DivFunctions.c: 217:     if(K & 0b00000010) {onePulse();}
   551  00FEC2  A201               	btfss	ws_send_byte@K^(0+1280),1,c
   552  00FEC4  EF66  F07F         	goto	u71
   553  00FEC8  EF68  F07F         	goto	u70
   554  00FECC                     u71:
   555  00FECC  EF6C  F07F         	goto	l1031
   556  00FED0                     u70:
   557  00FED0  ECAC  F07E         	call	_onePulse	;wreg free
   558  00FED4  EF6E  F07F         	goto	l1033
   559  00FED8                     l1031:
   560  00FED8  EC73  F07E         	call	_zeroPulse	;wreg free
   561  00FEDC                     l1033:
   562                           
   563                           ;DivFunctions.c: 220:     if(K & 0b00000001) {onePulse();}
   564  00FEDC  A001               	btfss	ws_send_byte@K^(0+1280),0,c
   565  00FEDE  EF73  F07F         	goto	u81
   566  00FEE2  EF75  F07F         	goto	u80
   567  00FEE6                     u81:
   568  00FEE6  EF79  F07F         	goto	l1037
   569  00FEEA                     u80:
   570  00FEEA  ECAC  F07E         	call	_onePulse	;wreg free
   571  00FEEE  EF7B  F07F         	goto	l295
   572  00FEF2                     l1037:
   573  00FEF2  EC73  F07E         	call	_zeroPulse	;wreg free
   574  00FEF6                     l295:
   575  00FEF6  0012               	return		;funcret
   576  00FEF8                     __end_of_ws_send_byte:
   577                           	callstack 0
   578                           
   579 ;; *************** function _zeroPulse *****************
   580 ;; Defined at:
   581 ;;		line 30 in file "DivFunctions.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		None
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used: 1
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_ws_send_byte
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           	psect	text3
   609  00FCE6                     __ptext3:
   610                           	callstack 0
   611  00FCE6                     _zeroPulse:
   612                           	callstack 125
   613  00FCE6                     
   614                           ;DivFunctions.c: 32: LATBbits.LATB4= 1;
   615  00FCE6  88BF               	bsf	191,4,c	;volatile
   616                           
   617                           ;DivFunctions.c: 33: LATBbits.LATB4= 0;
   618  00FCE8  98BF               	bcf	191,4,c	;volatile
   619  00FCEA  0012               	return		;funcret
   620  00FCEC                     __end_of_zeroPulse:
   621                           	callstack 0
   622                           
   623 ;; *************** function _onePulse *****************
   624 ;; Defined at:
   625 ;;		line 11 in file "DivFunctions.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		None
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   643 ;;Total ram usage:        0 bytes
   644 ;; Hardware stack levels used: 1
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		_ws_send_byte
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text4
   653  00FD58                     __ptext4:
   654                           	callstack 0
   655  00FD58                     _onePulse:
   656                           	callstack 125
   657  00FD58                     
   658                           ;DivFunctions.c: 13: LATBbits.LATB4= 1;
   659  00FD58  88BF               	bsf	191,4,c	;volatile
   660                           
   661                           ;DivFunctions.c: 14: LATBbits.LATB4= 1;
   662  00FD5A  88BF               	bsf	191,4,c	;volatile
   663                           
   664                           ;DivFunctions.c: 15: LATBbits.LATB4= 1;
   665  00FD5C  88BF               	bsf	191,4,c	;volatile
   666                           
   667                           ;DivFunctions.c: 16: LATBbits.LATB4= 1;
   668  00FD5E  88BF               	bsf	191,4,c	;volatile
   669                           
   670                           ;DivFunctions.c: 17: LATBbits.LATB4= 1;
   671  00FD60  88BF               	bsf	191,4,c	;volatile
   672                           
   673                           ;DivFunctions.c: 18: LATBbits.LATB4= 1;
   674  00FD62  88BF               	bsf	191,4,c	;volatile
   675                           
   676                           ;DivFunctions.c: 19: LATBbits.LATB4= 1;
   677  00FD64  88BF               	bsf	191,4,c	;volatile
   678                           
   679                           ;DivFunctions.c: 20: LATBbits.LATB4= 1;
   680  00FD66  88BF               	bsf	191,4,c	;volatile
   681                           
   682                           ;DivFunctions.c: 21: LATBbits.LATB4= 1;
   683  00FD68  88BF               	bsf	191,4,c	;volatile
   684                           
   685                           ;DivFunctions.c: 22: LATBbits.LATB4= 1;
   686  00FD6A  88BF               	bsf	191,4,c	;volatile
   687                           
   688                           ;DivFunctions.c: 23: LATBbits.LATB4= 1;
   689  00FD6C  88BF               	bsf	191,4,c	;volatile
   690                           
   691                           ;DivFunctions.c: 24: LATBbits.LATB4= 1;
   692  00FD6E  88BF               	bsf	191,4,c	;volatile
   693                           
   694                           ;DivFunctions.c: 25: LATBbits.LATB4= 1;
   695  00FD70  88BF               	bsf	191,4,c	;volatile
   696                           
   697                           ;DivFunctions.c: 26: LATBbits.LATB4= 1;
   698  00FD72  88BF               	bsf	191,4,c	;volatile
   699                           
   700                           ;DivFunctions.c: 27: LATBbits.LATB4= 0;
   701  00FD74  98BF               	bcf	191,4,c	;volatile
   702  00FD76  0012               	return		;funcret
   703  00FD78                     __end_of_onePulse:
   704                           	callstack 0
   705                           
   706 ;; *************** function _SYSTEM_Initialize *****************
   707 ;; Defined at:
   708 ;;		line 50 in file "mcc_generated_files/mcc.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   726 ;;Total ram usage:        0 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; Hardware stack levels required when called: 1
   729 ;; This function calls:
   730 ;;		_ADCC_Initialize
   731 ;;		_OSCILLATOR_Initialize
   732 ;;		_PIN_MANAGER_Initialize
   733 ;;		_PMD_Initialize
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text5
   740  00FCF2                     __ptext5:
   741                           	callstack 0
   742  00FCF2                     _SYSTEM_Initialize:
   743                           	callstack 126
   744  00FCF2                     
   745                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
   746  00FCF2  EC90  F07E         	call	_PMD_Initialize	;wreg free
   747                           
   748                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   749  00FCF6  ECBC  F07E         	call	_PIN_MANAGER_Initialize	;wreg free
   750                           
   751                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   752  00FCFA  EC82  F07E         	call	_OSCILLATOR_Initialize	;wreg free
   753                           
   754                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
   755  00FCFE  ECE4  F07E         	call	_ADCC_Initialize	;wreg free
   756  00FD02  0012               	return		;funcret
   757  00FD04                     __end_of_SYSTEM_Initialize:
   758                           	callstack 0
   759                           
   760 ;; *************** function _PMD_Initialize *****************
   761 ;; Defined at:
   762 ;;		line 74 in file "mcc_generated_files/mcc.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, status,2
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels used: 1
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_SYSTEM_Initialize
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text6
   790  00FD20                     __ptext6:
   791                           	callstack 0
   792  00FD20                     _PMD_Initialize:
   793                           	callstack 126
   794  00FD20                     
   795                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
   796  00FD20  0E00               	movlw	0
   797  00FD22  0100               	movlb	0	; () banked
   798  00FD24  6F63               	movwf	99,b	;volatile
   799                           
   800                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
   801  00FD26  0E00               	movlw	0
   802  00FD28  6F64               	movwf	100,b	;volatile
   803                           
   804                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
   805  00FD2A  0E00               	movlw	0
   806  00FD2C  6F65               	movwf	101,b	;volatile
   807                           
   808                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
   809  00FD2E  0E00               	movlw	0
   810  00FD30  6F66               	movwf	102,b	;volatile
   811                           
   812                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
   813  00FD32  0E00               	movlw	0
   814  00FD34  6F67               	movwf	103,b	;volatile
   815                           
   816                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
   817  00FD36  0E00               	movlw	0
   818  00FD38  6F68               	movwf	104,b	;volatile
   819  00FD3A                     
   820                           ; BSR set to: 0
   821  00FD3A  0012               	return		;funcret
   822  00FD3C                     __end_of_PMD_Initialize:
   823                           	callstack 0
   824                           
   825 ;; *************** function _PIN_MANAGER_Initialize *****************
   826 ;; Defined at:
   827 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   845 ;;Total ram usage:        0 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_SYSTEM_Initialize
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text7
   855  00FD78                     __ptext7:
   856                           	callstack 0
   857  00FD78                     _PIN_MANAGER_Initialize:
   858                           	callstack 126
   859  00FD78                     
   860                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   861  00FD78  0E00               	movlw	0
   862  00FD7A  6EBE               	movwf	190,c	;volatile
   863                           
   864                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   865  00FD7C  0E00               	movlw	0
   866  00FD7E  6EBF               	movwf	191,c	;volatile
   867                           
   868                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   869  00FD80  0E00               	movlw	0
   870  00FD82  6EC0               	movwf	192,c	;volatile
   871                           
   872                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
   873  00FD84  0E3F               	movlw	63
   874  00FD86  6EC6               	movwf	198,c	;volatile
   875                           
   876                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE0;
   877  00FD88  0EE0               	movlw	224
   878  00FD8A  6EC7               	movwf	199,c	;volatile
   879  00FD8C                     
   880                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
   881  00FD8C  68C8               	setf	200,c	;volatile
   882  00FD8E                     
   883                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
   884  00FD8E  0104               	movlb	4	; () banked
   885  00FD90  6910               	setf	16,b	;volatile
   886                           
   887                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
   888  00FD92  0EE0               	movlw	224
   889  00FD94  6F08               	movwf	8,b	;volatile
   890                           
   891                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
   892  00FD96  0E17               	movlw	23
   893  00FD98  6F00               	movwf	0,b	;volatile
   894                           
   895                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
   896  00FD9A  0E00               	movlw	0
   897  00FD9C  6F09               	movwf	9,b	;volatile
   898                           
   899                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
   900  00FD9E  0E00               	movlw	0
   901  00FDA0  6F01               	movwf	1,b	;volatile
   902                           
   903                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
   904  00FDA2  0E00               	movlw	0
   905  00FDA4  6F11               	movwf	17,b	;volatile
   906                           
   907                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
   908  00FDA6  0E00               	movlw	0
   909  00FDA8  6F02               	movwf	2,b	;volatile
   910                           
   911                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
   912  00FDAA  0E00               	movlw	0
   913  00FDAC  6F0A               	movwf	10,b	;volatile
   914                           
   915                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
   916  00FDAE  0E00               	movlw	0
   917  00FDB0  6F12               	movwf	18,b	;volatile
   918                           
   919                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
   920  00FDB2  0E37               	movlw	55
   921  00FDB4  6F03               	movwf	3,b	;volatile
   922                           
   923                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
   924  00FDB6  0EF0               	movlw	240
   925  00FDB8  6F0B               	movwf	11,b	;volatile
   926  00FDBA                     
   927                           ; BSR set to: 4
   928                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
   929  00FDBA  6913               	setf	19,b	;volatile
   930                           
   931                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
   932  00FDBC  0E3F               	movlw	63
   933  00FDBE  6F04               	movwf	4,b	;volatile
   934                           
   935                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
   936  00FDC0  0EF0               	movlw	240
   937  00FDC2  6F0C               	movwf	12,b	;volatile
   938  00FDC4                     
   939                           ; BSR set to: 4
   940                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
   941  00FDC4  6914               	setf	20,b	;volatile
   942  00FDC6                     
   943                           ; BSR set to: 4
   944  00FDC6  0012               	return		;funcret
   945  00FDC8                     __end_of_PIN_MANAGER_Initialize:
   946                           	callstack 0
   947                           
   948 ;; *************** function _OSCILLATOR_Initialize *****************
   949 ;; Defined at:
   950 ;;		line 58 in file "mcc_generated_files/mcc.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, status,2
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   968 ;;Total ram usage:        0 bytes
   969 ;; Hardware stack levels used: 1
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_SYSTEM_Initialize
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text8
   978  00FD04                     __ptext8:
   979                           	callstack 0
   980  00FD04                     _OSCILLATOR_Initialize:
   981                           	callstack 126
   982  00FD04                     
   983                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x60;
   984  00FD04  0E60               	movlw	96
   985  00FD06  0100               	movlb	0	; () banked
   986  00FD08  6FAD               	movwf	173,b	;volatile
   987                           
   988                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
   989  00FD0A  0E00               	movlw	0
   990  00FD0C  6FAF               	movwf	175,b	;volatile
   991                           
   992                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
   993  00FD0E  0E00               	movlw	0
   994  00FD10  6FB3               	movwf	179,b	;volatile
   995                           
   996                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x08;
   997  00FD12  0E08               	movlw	8
   998  00FD14  6FB1               	movwf	177,b	;volatile
   999                           
  1000                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  1001  00FD16  0E00               	movlw	0
  1002  00FD18  6FB0               	movwf	176,b	;volatile
  1003                           
  1004                           ;mcc_generated_files/mcc.c: 71:     ACTCON = 0x00;
  1005  00FD1A  0E00               	movlw	0
  1006  00FD1C  6FAC               	movwf	172,b	;volatile
  1007  00FD1E                     
  1008                           ; BSR set to: 0
  1009  00FD1E  0012               	return		;funcret
  1010  00FD20                     __end_of_OSCILLATOR_Initialize:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _ADCC_Initialize *****************
  1014 ;; Defined at:
  1015 ;;		line 62 in file "mcc_generated_files/adcc.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1033 ;;Total ram usage:        0 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_SYSTEM_Initialize
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text9
  1043  00FDC8                     __ptext9:
  1044                           	callstack 0
  1045  00FDC8                     _ADCC_Initialize:
  1046                           	callstack 126
  1047  00FDC8                     
  1048                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  1049  00FDC8  0E00               	movlw	0
  1050  00FDCA  0103               	movlb	3	; () banked
  1051  00FDCC  6FD9               	movwf	217,b	;volatile
  1052                           
  1053                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  1054  00FDCE  0E00               	movlw	0
  1055  00FDD0  6FDA               	movwf	218,b	;volatile
  1056                           
  1057                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  1058  00FDD2  0E00               	movlw	0
  1059  00FDD4  6FDB               	movwf	219,b	;volatile
  1060                           
  1061                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  1062  00FDD6  0E00               	movlw	0
  1063  00FDD8  6FDC               	movwf	220,b	;volatile
  1064                           
  1065                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  1066  00FDDA  0E00               	movlw	0
  1067  00FDDC  6FDF               	movwf	223,b	;volatile
  1068                           
  1069                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  1070  00FDDE  0E00               	movlw	0
  1071  00FDE0  6FE0               	movwf	224,b	;volatile
  1072                           
  1073                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  1074  00FDE2  0E00               	movlw	0
  1075  00FDE4  6FE5               	movwf	229,b	;volatile
  1076                           
  1077                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  1078  00FDE6  0E00               	movlw	0
  1079  00FDE8  6FE7               	movwf	231,b	;volatile
  1080                           
  1081                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  1082  00FDEA  0E00               	movlw	0
  1083  00FDEC  6FEC               	movwf	236,b	;volatile
  1084                           
  1085                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  1086  00FDEE  0E00               	movlw	0
  1087  00FDF0  6FEE               	movwf	238,b	;volatile
  1088                           
  1089                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  1090  00FDF2  0E00               	movlw	0
  1091  00FDF4  6FEF               	movwf	239,b	;volatile
  1092                           
  1093                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  1094  00FDF6  0E00               	movlw	0
  1095  00FDF8  6FF0               	movwf	240,b	;volatile
  1096                           
  1097                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  1098  00FDFA  0E00               	movlw	0
  1099  00FDFC  6FF1               	movwf	241,b	;volatile
  1100                           
  1101                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  1102  00FDFE  0E00               	movlw	0
  1103  00FE00  6FF2               	movwf	242,b	;volatile
  1104                           
  1105                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  1106  00FE02  0E00               	movlw	0
  1107  00FE04  6FF4               	movwf	244,b	;volatile
  1108                           
  1109                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x10;
  1110  00FE06  0E10               	movlw	16
  1111  00FE08  6FF5               	movwf	245,b	;volatile
  1112                           
  1113                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  1114  00FE0A  0E00               	movlw	0
  1115  00FE0C  6FF6               	movwf	246,b	;volatile
  1116                           
  1117                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  1118  00FE0E  0E00               	movlw	0
  1119  00FE10  6FF7               	movwf	247,b	;volatile
  1120                           
  1121                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  1122  00FE12  0E00               	movlw	0
  1123  00FE14  6FF8               	movwf	248,b	;volatile
  1124                           
  1125                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  1126  00FE16  0E00               	movlw	0
  1127  00FE18  6FF9               	movwf	249,b	;volatile
  1128                           
  1129                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  1130  00FE1A  0E1F               	movlw	31
  1131  00FE1C  6FFA               	movwf	250,b	;volatile
  1132                           
  1133                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  1134  00FE1E  0E84               	movlw	132
  1135  00FE20  6FF3               	movwf	243,b	;volatile
  1136  00FE22                     
  1137                           ; BSR set to: 3
  1138  00FE22  0012               	return		;funcret
  1139  00FE24                     __end_of_ADCC_Initialize:
  1140                           	callstack 0
  1141  0000                     
  1142                           	psect	rparam
  1143  0000                     
  1144                           	psect	idloc
  1145                           
  1146                           ;Config register IDLOC0 @ 0x200000
  1147                           ;	unspecified, using default values
  1148  200000                     	org	2097152
  1149  200000  0FFF               	dw	4095
  1150                           
  1151                           ;Config register IDLOC1 @ 0x200002
  1152                           ;	unspecified, using default values
  1153  200002                     	org	2097154
  1154  200002  0FFF               	dw	4095
  1155                           
  1156                           ;Config register IDLOC2 @ 0x200004
  1157                           ;	unspecified, using default values
  1158  200004                     	org	2097156
  1159  200004  0FFF               	dw	4095
  1160                           
  1161                           ;Config register IDLOC3 @ 0x200006
  1162                           ;	unspecified, using default values
  1163  200006                     	org	2097158
  1164  200006  0FFF               	dw	4095
  1165                           
  1166                           ;Config register IDLOC4 @ 0x200008
  1167                           ;	unspecified, using default values
  1168  200008                     	org	2097160
  1169  200008  0FFF               	dw	4095
  1170                           
  1171                           ;Config register IDLOC5 @ 0x20000A
  1172                           ;	unspecified, using default values
  1173  20000A                     	org	2097162
  1174  20000A  0FFF               	dw	4095
  1175                           
  1176                           ;Config register IDLOC6 @ 0x20000C
  1177                           ;	unspecified, using default values
  1178  20000C                     	org	2097164
  1179  20000C  0FFF               	dw	4095
  1180                           
  1181                           ;Config register IDLOC7 @ 0x20000E
  1182                           ;	unspecified, using default values
  1183  20000E                     	org	2097166
  1184  20000E  0FFF               	dw	4095
  1185                           
  1186                           ;Config register IDLOC8 @ 0x200010
  1187                           ;	unspecified, using default values
  1188  200010                     	org	2097168
  1189  200010  0FFF               	dw	4095
  1190                           
  1191                           ;Config register IDLOC9 @ 0x200012
  1192                           ;	unspecified, using default values
  1193  200012                     	org	2097170
  1194  200012  0FFF               	dw	4095
  1195                           
  1196                           ;Config register IDLOC10 @ 0x200014
  1197                           ;	unspecified, using default values
  1198  200014                     	org	2097172
  1199  200014  0FFF               	dw	4095
  1200                           
  1201                           ;Config register IDLOC11 @ 0x200016
  1202                           ;	unspecified, using default values
  1203  200016                     	org	2097174
  1204  200016  0FFF               	dw	4095
  1205                           
  1206                           ;Config register IDLOC12 @ 0x200018
  1207                           ;	unspecified, using default values
  1208  200018                     	org	2097176
  1209  200018  0FFF               	dw	4095
  1210                           
  1211                           ;Config register IDLOC13 @ 0x20001A
  1212                           ;	unspecified, using default values
  1213  20001A                     	org	2097178
  1214  20001A  0FFF               	dw	4095
  1215                           
  1216                           ;Config register IDLOC14 @ 0x20001C
  1217                           ;	unspecified, using default values
  1218  20001C                     	org	2097180
  1219  20001C  0FFF               	dw	4095
  1220                           
  1221                           ;Config register IDLOC15 @ 0x20001E
  1222                           ;	unspecified, using default values
  1223  20001E                     	org	2097182
  1224  20001E  0FFF               	dw	4095
  1225                           
  1226                           	psect	config
  1227                           
  1228                           ;Config register CONFIG1 @ 0x300000
  1229                           ;	External Oscillator Selection
  1230                           ;	FEXTOSC = OFF, Oscillator not enabled
  1231                           ;	Reset Oscillator Selection
  1232                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  1233  300000                     	org	3145728
  1234  300000  8C                 	db	140
  1235                           
  1236                           ;Config register CONFIG2 @ 0x300001
  1237                           ;	Clock out Enable bit
  1238                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1239                           ;	PRLOCKED One-Way Set Enable bit
  1240                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1241                           ;	Clock Switch Enable bit
  1242                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1243                           ;	Fail-Safe Clock Monitor Enable bit
  1244                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1245                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
  1246                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
  1247                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
  1248                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
  1249  300001                     	org	3145729
  1250  300001  FF                 	db	255
  1251                           
  1252                           ;Config register CONFIG3 @ 0x300002
  1253                           ;	MCLR Enable bit
  1254                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1255                           ;	Power-up timer selection bits
  1256                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1257                           ;	Multi-vector enable bit
  1258                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  1259                           ;	IVTLOCK bit One-way set enable bit
  1260                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1261                           ;	Low Power BOR Enable bit
  1262                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1263                           ;	Brown-out Reset Enable bits
  1264                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1265  300002                     	org	3145730
  1266  300002  F7                 	db	247
  1267                           
  1268                           ;Config register CONFIG4 @ 0x300003
  1269                           ;	Brown-out Reset Voltage Selection bits
  1270                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1271                           ;	ZCD Disable bit
  1272                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1273                           ;	PPSLOCK bit One-Way Set Enable bit
  1274                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1275                           ;	Stack Full/Underflow Reset Enable bit
  1276                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1277                           ;	Low Voltage Programming Enable bit
  1278                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1279                           ;	Extended Instruction Set Enable bit
  1280                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1281  300003                     	org	3145731
  1282  300003  FF                 	db	255
  1283                           
  1284                           ;Config register CONFIG5 @ 0x300004
  1285                           ;	WDT Period selection bits
  1286                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1287                           ;	WDT operating mode
  1288                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1289  300004                     	org	3145732
  1290  300004  9F                 	db	159
  1291                           
  1292                           ;Config register CONFIG6 @ 0x300005
  1293                           ;	WDT Window Select bits
  1294                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1295                           ;	WDT input clock selector
  1296                           ;	WDTCCS = SC, Software Control
  1297  300005                     	org	3145733
  1298  300005  FF                 	db	255
  1299                           
  1300                           ;Config register CONFIG7 @ 0x300006
  1301                           ;	Boot Block Size selection bits
  1302                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1303                           ;	Boot Block enable bit
  1304                           ;	BBEN = OFF, Boot block disabled
  1305                           ;	Storage Area Flash enable bit
  1306                           ;	SAFEN = OFF, SAF disabled
  1307                           ;	Background Debugger
  1308                           ;	DEBUG = OFF, Background Debugger disabled
  1309  300006                     	org	3145734
  1310  300006  FF                 	db	255
  1311                           
  1312                           ;Config register CONFIG8 @ 0x300007
  1313                           ;	Boot Block Write Protection bit
  1314                           ;	WRTB = OFF, Boot Block not Write protected
  1315                           ;	Configuration Register Write Protection bit
  1316                           ;	WRTC = OFF, Configuration registers not Write protected
  1317                           ;	Data EEPROM Write Protection bit
  1318                           ;	WRTD = OFF, Data EEPROM not Write protected
  1319                           ;	SAF Write protection bit
  1320                           ;	WRTSAF = OFF, SAF not Write Protected
  1321                           ;	Application Block write protection bit
  1322                           ;	WRTAPP = OFF, Application Block not write protected
  1323  300007                     	org	3145735
  1324  300007  FF                 	db	255
  1325                           
  1326                           ;Config register CONFIG9 @ 0x300008
  1327                           ;	PFM and Data EEPROM Code Protection bit
  1328                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1329  300008                     	org	3145736
  1330  300008  FF                 	db	255
  1331                           
  1332                           ; Padding undefined space
  1333  300009                     	org	3145737
  1334  300009  FF                 	db	255
  1335                           tosu	equ	0x4FF
  1336                           tosh	equ	0x4FE
  1337                           tosl	equ	0x4FD
  1338                           stkptr	equ	0x4FC
  1339                           pclatu	equ	0x4FB
  1340                           pclath	equ	0x4FA
  1341                           pcl	equ	0x4F9
  1342                           tblptru	equ	0x4F8
  1343                           tblptrh	equ	0x4F7
  1344                           tblptrl	equ	0x4F6
  1345                           tablat	equ	0x4F5
  1346                           prodh	equ	0x4F4
  1347                           prodl	equ	0x4F3
  1348                           indf0	equ	0x4EF
  1349                           postinc0	equ	0x4EE
  1350                           postdec0	equ	0x4ED
  1351                           preinc0	equ	0x4EC
  1352                           plusw0	equ	0x4EB
  1353                           fsr0h	equ	0x4EA
  1354                           fsr0l	equ	0x4E9
  1355                           wreg	equ	0x4E8
  1356                           indf1	equ	0x4E7
  1357                           postinc1	equ	0x4E6
  1358                           postdec1	equ	0x4E5
  1359                           preinc1	equ	0x4E4
  1360                           plusw1	equ	0x4E3
  1361                           fsr1h	equ	0x4E2
  1362                           fsr1l	equ	0x4E1
  1363                           bsr	equ	0x4E0
  1364                           indf2	equ	0x4DF
  1365                           postinc2	equ	0x4DE
  1366                           postdec2	equ	0x4DD
  1367                           preinc2	equ	0x4DC
  1368                           plusw2	equ	0x4DB
  1369                           fsr2h	equ	0x4DA
  1370                           fsr2l	equ	0x4D9
  1371                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_c_WS2812B_Write
    _c_WS2812B_Write->_ws_send_byte

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3173
                                              5 COMRAM     1     1      0
                  _SYSTEM_Initialize
                    _c_WS2812B_Write
 ---------------------------------------------------------------------------------
 (1) _c_WS2812B_Write                                      4     1      3    3172
                                              1 COMRAM     4     1      3
                       _ws_send_byte
 ---------------------------------------------------------------------------------
 (2) _ws_send_byte                                         1     1      0     120
                                              0 COMRAM     1     1      0
                           _onePulse
                          _zeroPulse
 ---------------------------------------------------------------------------------
 (3) _zeroPulse                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _onePulse                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _c_WS2812B_Write
     _ws_send_byte
       _onePulse
       _zeroPulse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             200      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BANK20             100      0       0      34        0.0%
BANK21             100      0       0      35        0.0%
ABS                  0      0       0      36        0.0%
BITBANK20          100      0       0      37        0.0%
BITBANK21          100      0       0      38        0.0%
BIGRAM            10FF      0       0      39        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 28 09:56:10 2021

                             l45 FDC6                               u10 FE34  
                             u11 FE30                               u20 FE4E  
                             u21 FE4A                               u30 FE68  
                             u31 FE64                               u40 FE82  
                             u41 FE7E                               u50 FE9C  
                             u51 FE98                               u60 FEB6  
                             u61 FEB2                               u70 FED0  
                             u71 FECC                               u80 FEEA  
                             u81 FEE6                              l127 FE22  
                            l243 FD02                              l246 FD1E  
                            l270 FD56                              l249 FD3A  
                            l273 FD76                              l276 FCEA  
                            l295 FEF6                              l971 FD58  
                            l981 FDBA                              l973 FCE6  
                            l983 FDC4                              l975 FD78  
                            l991 FE26                              l985 FDC8  
                            l977 FD8C                              l993 FE34  
                            l979 FD8E                              l987 FD20  
                            l995 FE3C                              l989 FD04  
                            l997 FE40                              l999 FE4E  
                            u107 FFEC          __size_of_PMD_Initialize 001C  
                            wreg 0004E8                             l1001 FE56  
                           l1011 FE82                             l1003 FE5A  
                           l1021 FEA8                             l1013 FE8A  
                           l1005 FE68                             l1031 FED8  
                           l1023 FEB6                             l1015 FE8E  
                           l1007 FE70                             l1033 FEDC  
                           l1025 FEBE                             l1017 FE9C  
                           l1009 FE74                             l1201 FFE6  
                           l1035 FEEA                             l1027 FEC2  
                           l1019 FEA4                             l1037 FEF2  
                           l1029 FED0                             l1039 FCF2  
                           l1171 FEF8                             l1181 FF32  
                           l1173 FEFC                             l1191 FF8C  
                           l1183 FF44                             l1175 FEFC  
                           l1169 FD3E                             l1193 FF9E  
                           l1185 FF56                             l1177 FF0E  
                           l1195 FFB0                             l1187 FF68  
                           l1179 FF20                             l1197 FFC2  
                           l1189 FF7A                             l1199 FFD4  
                           _LATA 0004BE                             _LATB 0004BF  
                           _LATC 0004C0                             _PMD0 000063  
                           _PMD1 000064                             _PMD2 000065  
                           _PMD3 000066                             _PMD4 000067  
                           _PMD5 000068                             _WPUA 000401  
                           _WPUB 000409                             _WPUC 000411  
                           _main FEF8                             start FFFC  
                   ___param_bank 000000   __size_of_OSCILLATOR_Initialize 001C  
  __end_of_OSCILLATOR_Initialize FD20            __size_of_ws_send_byte 00D4  
                          _ADCAP 0003F0                            _ADACT 0003F9  
                          ?_main 0501                            _ADCLK 0003FA  
                          _ADCNT 0003E6                            _ADPCH 0003EC  
                          _ADREF 0003F8                            _ADRPT 0003E7  
                          _OSCEN 0000B3                            _TRISA 0004C6  
                          _TRISB 0004C7                            _TRISC 0004C8  
                __initialization FCEC                     _ws_send_byte FE24  
                   __end_of_main FFFC                           ??_main 0506  
                  __activetblptr 000000                           _ADACCH 0003E4  
                         _ADACCL 0003E3                           _ADACCU 0003E5  
                         _ADACQH 0003EF                           _ADACQL 0003EE  
                         _ADCON0 0003F3                           _ADCON1 0003F4  
                         _ADCON2 0003F5                           _ADCON3 0003F6  
                         _ADERRH 0003DE                           _ADERRL 0003DD  
                         _ADLTHH 0003DA                           _ACTCON 0000AC  
                         _ADLTHL 0003D9                           _ADRESH 0003EB  
                         _ADRESL 0003EA                           _ADPREH 0003F2  
                         _ADPREL 0003F1                           _ADSTAT 0003F7  
                         _ADUTHH 0003DC                           _ADUTHL 0003DB  
                         _ANSELA 000400                           _ANSELB 000408  
                         _ANSELC 000410                           _ODCONA 000402  
                         _ODCONB 00040A                           _ODCONC 000412  
                         _INLVLA 000404                           _INLVLB 00040C  
                         _INLVLC 000414                           _OSCFRQ 0000B1  
                         isa$std 000001                 __end_of_onePulse FD78  
                _ADCC_Initialize FDC8                   _PMD_Initialize FD20  
              _SYSTEM_Initialize FCF2         __size_of_c_WS2812B_Write 001C  
                     __accesstop 0560          __end_of__initialization FCEC  
             ?_SYSTEM_Initialize 0501                    ___rparam_used 000001  
                 __pcstackCOMRAM 0501              ??_SYSTEM_Initialize 0501  
         __end_of_PMD_Initialize FD3C        __end_of_SYSTEM_Initialize FD04  
        __end_of_ADCC_Initialize FE24                          _ADFLTRH 0003E2  
                        _ADFLTRL 0003E1                          _ADPREVH 0003E9  
                        _ADPREVL 0003E8                          _ADSTPTH 0003E0  
                        _ADSTPTL 0003DF                  ?_PMD_Initialize 0501  
                        _OSCCON1 0000AD                          _OSCCON3 0000AF  
                        _OSCTUNE 0000B0                          _SLRCONA 000403  
                        _SLRCONB 00040B                          _SLRCONC 000413  
             __size_of_zeroPulse 0006                        ?_onePulse 0501  
                        __Hparam 0000                          __Lparam 0000  
              ??_c_WS2812B_Write 0505                          __pcinit FCEC  
                        __ramtop 1600                          __ptext0 FEF8  
                        __ptext1 FD3C                          __ptext2 FE24  
                        __ptext3 FCE6                          __ptext4 FD58  
                        __ptext5 FCF2                          __ptext6 FD20  
                        __ptext7 FD78                          __ptext8 FD04  
                        __ptext9 FDC8            _OSCILLATOR_Initialize FD04  
       ??_PIN_MANAGER_Initialize 0501       __size_of_SYSTEM_Initialize 0012  
           end_of_initialization FCEC                       ??_onePulse 0501  
               ?_ADCC_Initialize 0501                __end_of_zeroPulse FCEC  
         ?_OSCILLATOR_Initialize 0501              start_initialization FCEC  
__size_of_PIN_MANAGER_Initialize 0050                 ??_PMD_Initialize 0501  
                _c_WS2812B_Write FD3C           _PIN_MANAGER_Initialize FD78  
                  ?_ws_send_byte 0501                __size_of_onePulse 0020  
                       _LATBbits 0004BF                   ??_ws_send_byte 0501  
               c_WS2812B_Write@B 0503                 c_WS2812B_Write@G 0502  
               c_WS2812B_Write@R 0505                 c_WS2812B_Write@W 0504  
                     _ADCON0bits 0003F3                       _ADCON1bits 0003F4  
                     _ADCON2bits 0003F5                       _ADCON3bits 0003F6  
        __end_of_c_WS2812B_Write FD58                        _zeroPulse FCE6  
                     _ADSTATbits 0003F7                         __Hrparam 0000  
                       __Lrparam 0000                    ws_send_byte@K 0501  
        ??_OSCILLATOR_Initialize 0501         __size_of_ADCC_Initialize 005C  
                     ?_zeroPulse 0501                    __size_of_main 0104  
                       _onePulse FD58                         isa$xinst 000000  
               ?_c_WS2812B_Write 0502             __end_of_ws_send_byte FEF8  
        ?_PIN_MANAGER_Initialize 0501                      ??_zeroPulse 0501  
 __end_of_PIN_MANAGER_Initialize FDC8                ??_ADCC_Initialize 0501  
