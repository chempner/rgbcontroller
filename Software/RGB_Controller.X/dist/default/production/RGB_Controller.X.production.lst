

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Mar 09 19:06:13 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F16Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47                           	dabs	1,0x1500,2,_bufferRAM
    48  0000                     
    49                           ; Version 2.32
    50                           ; Generated 02/02/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F16Q40 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	smallconst
    86  001600                     __psmallconst:
    87                           	callstack 0
    88  001600  00                 	db	0
    89  001601                     _spi1_configuration:
    90                           	callstack 0
    91  001601  02                 	db	2
    92  001602  40                 	db	64
    93  001603  00                 	db	0
    94  001604  03                 	db	3
    95  001605  00                 	db	0
    96  001606                     __end_of_spi1_configuration:
    97                           	callstack 0
    98  001606  00                 	db	0	; dummy byte at the end
    99  0000                     
   100                           	psect	nvCOMRAM
   101  00053E                     __pnvCOMRAM:
   102                           	callstack 0
   103  00053E                     _TMR2_InterruptHandler:
   104                           	callstack 0
   105  00053E                     	ds	2
   106  0000                     _NVMDATL	set	70
   107  0000                     _NVMCON0bits	set	64
   108  0000                     _NVMLOCK	set	66
   109  0000                     _NVMCON1bits	set	65
   110  0000                     _NVMADRL	set	67
   111  0000                     _NVMADRH	set	68
   112  0000                     _NVMADRU	set	69
   113  0000                     _SPI1RXB	set	128
   114  0000                     _SPI1TXB	set	129
   115  0000                     _SPI1TCNTL	set	130
   116  0000                     _SPI1CON0bits	set	132
   117  0000                     _SPI1BAUD	set	137
   118  0000                     _SPI1CLK	set	140
   119  0000                     _SPI1CON2	set	134
   120  0000                     _SPI1CON1	set	133
   121  0000                     _SPI1CON0	set	132
   122  0000                     _PMD5	set	104
   123  0000                     _PMD4	set	103
   124  0000                     _PMD3	set	102
   125  0000                     _PMD2	set	101
   126  0000                     _PMD1	set	100
   127  0000                     _PMD0	set	99
   128  0000                     _ACTCON	set	172
   129  0000                     _OSCTUNE	set	176
   130  0000                     _OSCFRQ	set	177
   131  0000                     _OSCEN	set	179
   132  0000                     _OSCCON3	set	175
   133  0000                     _OSCCON1	set	173
   134  0000                     _SPI1SDIPPS	set	619
   135  0000                     _RB4PPS	set	525
   136  0000                     _RB6PPS	set	527
   137  0000                     _SPI1SCKPPS	set	618
   138  0000                     _PR2	set	797
   139  0000                     _TMR2	set	796
   140  0000                     _T2CONbits	set	798
   141  0000                     _T2RSTbits	set	801
   142  0000                     _T2HLTbits	set	799
   143  0000                     _T2CON	set	798
   144  0000                     _T2TMR	set	796
   145  0000                     _T2PR	set	797
   146  0000                     _T2RST	set	801
   147  0000                     _T2HLT	set	799
   148  0000                     _T2CLKCON	set	800
   149  0000                     _ADCON1bits	set	1012
   150  0000                     _ADERRL	set	989
   151  0000                     _ADERRH	set	990
   152  0000                     _ADPREVL	set	1000
   153  0000                     _ADPREVH	set	1001
   154  0000                     _ADFLTRL	set	993
   155  0000                     _ADFLTRH	set	994
   156  0000                     _ADSTATbits	set	1015
   157  0000                     _ADACCL	set	995
   158  0000                     _ADACCH	set	996
   159  0000                     _ADCON2bits	set	1013
   160  0000                     _ADCNT	set	998
   161  0000                     _ADCON3bits	set	1014
   162  0000                     _ADRESL	set	1002
   163  0000                     _ADRESH	set	1003
   164  0000                     _ADCON0bits	set	1011
   165  0000                     _ADCON0	set	1011
   166  0000                     _ADCLK	set	1018
   167  0000                     _ADACT	set	1017
   168  0000                     _ADREF	set	1016
   169  0000                     _ADSTAT	set	1015
   170  0000                     _ADCON3	set	1014
   171  0000                     _ADCON2	set	1013
   172  0000                     _ADCON1	set	1012
   173  0000                     _ADPREH	set	1010
   174  0000                     _ADPREL	set	1009
   175  0000                     _ADCAP	set	1008
   176  0000                     _ADACQH	set	1007
   177  0000                     _ADACQL	set	1006
   178  0000                     _ADPCH	set	1004
   179  0000                     _ADRPT	set	999
   180  0000                     _ADACCU	set	997
   181  0000                     _ADSTPTH	set	992
   182  0000                     _ADSTPTL	set	991
   183  0000                     _ADUTHH	set	988
   184  0000                     _ADUTHL	set	987
   185  0000                     _ADLTHH	set	986
   186  0000                     _ADLTHL	set	985
   187  0000                     _INLVLC	set	1044
   188  0000                     _INLVLB	set	1036
   189  0000                     _INLVLA	set	1028
   190  0000                     _SLRCONC	set	1043
   191  0000                     _SLRCONB	set	1035
   192  0000                     _SLRCONA	set	1027
   193  0000                     _ODCONC	set	1042
   194  0000                     _ODCONB	set	1034
   195  0000                     _ODCONA	set	1026
   196  0000                     _WPUC	set	1041
   197  0000                     _WPUA	set	1025
   198  0000                     _WPUB	set	1033
   199  0000                     _ANSELA	set	1024
   200  0000                     _ANSELB	set	1032
   201  0000                     _ANSELC	set	1040
   202  0000                     _LATBbits	set	1215
   203  0000                     _LATAbits	set	1214
   204  0000                     _LATCbits	set	1216
   205  0000                     _PIE3bits	set	1195
   206  0000                     _PIR0bits	set	1203
   207  0000                     _INTCON0bits	set	1238
   208  0000                     _TABLAT	set	1269
   209  0000                     _TBLPTRL	set	1270
   210  0000                     _TBLPTRH	set	1271
   211  0000                     _TBLPTRU	set	1272
   212  0000                     _PIR3bits	set	1206
   213  0000                     _TRISBbits	set	1223
   214  0000                     _TRISC	set	1224
   215  0000                     _TRISB	set	1223
   216  0000                     _TRISA	set	1222
   217  0000                     _LATC	set	1216
   218  0000                     _LATB	set	1215
   219  0000                     _LATA	set	1214
   220                           
   221                           ; #config settings
   222                           
   223                           	psect	cinit
   224  0023AA                     __pcinit:
   225                           	callstack 0
   226  0023AA                     start_initialization:
   227                           	callstack 0
   228  0023AA                     __initialization:
   229                           	callstack 0
   230                           
   231                           ; Clear objects allocated to COMRAM (4 bytes)
   232  0023AA  6A3D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   233  0023AC  6A3C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   234  0023AE  6A3B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   235  0023B0  6A3A               	clrf	__pbssCOMRAM& (0+255),c
   236                           
   237                           ;
   238                           ; Setup IVTBASE
   239                           ;
   240  0023B2  0104               	movlb	4
   241  0023B4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   242  0023B6  6F5D               	movwf	93,b
   243  0023B8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   244  0023BA  6F5E               	movwf	94,b
   245  0023BC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   246  0023BE  6F5F               	movwf	95,b
   247  0023C0                     end_of_initialization:
   248                           	callstack 0
   249  0023C0                     __end_of__initialization:
   250                           	callstack 0
   251  0023C0  0100               	movlb	0
   252  0023C2  EF04  F00B         	goto	_main	;jump to C main() function
   253                           
   254                           	psect	bssCOMRAM
   255  00053A                     __pbssCOMRAM:
   256                           	callstack 0
   257  00053A                     _loopTimeMS:
   258                           	callstack 0
   259  00053A                     	ds	2
   260  00053C                     _loopTimeCnt:
   261                           	callstack 0
   262  00053C                     	ds	2
   263                           
   264                           	psect	cstackCOMRAM
   265  000501                     __pcstackCOMRAM:
   266                           	callstack 0
   267  000501                     ??_SPI1_Open:
   268  000501                     ?_ADCC_GetSingleConversion:
   269                           	callstack 0
   270  000501                     ?___lmul:
   271                           	callstack 0
   272  000501                     SPI1_ExchangeByte@data:
   273                           	callstack 0
   274  000501                     DATAEE_WriteByte@bAdd:
   275                           	callstack 0
   276  000501                     DATAEE_ReadByte@bAdd:
   277                           	callstack 0
   278  000501                     TMR2_SetInterruptHandler@InterruptHandler:
   279                           	callstack 0
   280  000501                     LOOPDELAY_Init@newLoopTimeMS:
   281                           	callstack 0
   282  000501                     ___lmul@multiplier:
   283                           	callstack 0
   284                           
   285                           ; 4 bytes @ 0x0
   286  000501                     	ds	1
   287  000502                     SPI1_Open@spi1UniqueConfiguration:
   288                           	callstack 0
   289  000502                     ws_send_byte@K:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x1
   293  000502                     	ds	1
   294  000503                     ??_ADCC_GetSingleConversion:
   295  000503                     DATAEE_WriteByte@bData:
   296                           	callstack 0
   297  000503                     WS2812B_Write@G:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x2
   301  000503                     	ds	1
   302  000504                     DATAEE_WriteByte@GIEBitValue:
   303                           	callstack 0
   304  000504                     WS2812B_Write@B:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x3
   308  000504                     	ds	1
   309  000505                     ADCC_GetSingleConversion@channel:
   310                           	callstack 0
   311  000505                     WS2812B_Write@W:
   312                           	callstack 0
   313  000505                     ___lmul@multiplicand:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x4
   317  000505                     	ds	1
   318  000506                     WS2812B_Write@R:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x5
   322  000506                     	ds	1
   323  000507                     LED_WriteFull@green:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x6
   327  000507                     	ds	1
   328  000508                     LED_WriteFull@blue:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x7
   332  000508                     	ds	1
   333  000509                     LED_WriteFull@white:
   334                           	callstack 0
   335  000509                     ___lmul@product:
   336                           	callstack 0
   337                           
   338                           ; 4 bytes @ 0x8
   339  000509                     	ds	1
   340  00050A                     LED_WriteFull@ledcount:
   341                           	callstack 0
   342                           
   343                           ; 3 bytes @ 0x9
   344  00050A                     	ds	3
   345  00050D                     ?___aldiv:
   346                           	callstack 0
   347  00050D                     LED_WriteFull@red:
   348                           	callstack 0
   349  00050D                     ___aldiv@dividend:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0xC
   353  00050D                     	ds	1
   354  00050E                     LED_WriteFull@i:
   355                           	callstack 0
   356                           
   357                           ; 3 bytes @ 0xD
   358  00050E                     	ds	3
   359  000511                     ___aldiv@divisor:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x10
   363  000511                     	ds	4
   364  000515                     ___aldiv@counter:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x14
   368  000515                     	ds	1
   369  000516                     ___aldiv@sign:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x15
   373  000516                     	ds	1
   374  000517                     ___aldiv@quotient:
   375                           	callstack 0
   376                           
   377                           ; 4 bytes @ 0x16
   378  000517                     	ds	4
   379  00051B                     ?_map:
   380                           	callstack 0
   381  00051B                     map@x:
   382                           	callstack 0
   383                           
   384                           ; 4 bytes @ 0x1A
   385  00051B                     	ds	4
   386  00051F                     map@in_min:
   387                           	callstack 0
   388                           
   389                           ; 4 bytes @ 0x1E
   390  00051F                     	ds	4
   391  000523                     map@in_max:
   392                           	callstack 0
   393                           
   394                           ; 4 bytes @ 0x22
   395  000523                     	ds	4
   396  000527                     map@out_min:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x26
   400  000527                     	ds	4
   401  00052B                     map@out_max:
   402                           	callstack 0
   403                           
   404                           ; 4 bytes @ 0x2A
   405  00052B                     	ds	4
   406  00052F                     ??_main:
   407                           
   408                           ; 1 bytes @ 0x2E
   409  00052F                     	ds	2
   410  000531                     main@taster3Flag:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x30
   414  000531                     	ds	1
   415  000532                     main@taster4Flag:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x31
   419  000532                     	ds	1
   420  000533                     main@taster1Flag:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x32
   424  000533                     	ds	1
   425  000534                     main@taster2Flag:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x33
   429  000534                     	ds	1
   430  000535                     main@red:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x34
   434  000535                     	ds	1
   435  000536                     main@green:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x35
   439  000536                     	ds	1
   440  000537                     main@blue:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x36
   444  000537                     	ds	1
   445  000538                     main@white:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x37
   449  000538                     	ds	1
   450  000539                     main@state:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x38
   454  000539                     	ds	1
   455                           
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 38 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  state           1   56[COMRAM] enum E13448
   466 ;;  white           1   55[COMRAM] unsigned char 
   467 ;;  blue            1   54[COMRAM] unsigned char 
   468 ;;  green           1   53[COMRAM] unsigned char 
   469 ;;  red             1   52[COMRAM] unsigned char 
   470 ;;  taster2Flag     1   51[COMRAM] unsigned char 
   471 ;;  taster1Flag     1   50[COMRAM] unsigned char 
   472 ;;  taster4Flag     1   49[COMRAM] unsigned char 
   473 ;;  taster3Flag     1   48[COMRAM] unsigned char 
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   484 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   486 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   487 ;;Total ram usage:       11 bytes
   488 ;; Hardware stack levels required when called: 9
   489 ;; This function calls:
   490 ;;		_ADCC_DischargeSampleCapacitor
   491 ;;		_ADCC_GetSingleConversion
   492 ;;		_DATAEE_ReadByte
   493 ;;		_DATAEE_WriteByte
   494 ;;		_LED_WriteFull
   495 ;;		_LOOPDELAY_Init
   496 ;;		_LOOPDELAY_Wait
   497 ;;		_SPI1_Open
   498 ;;		_SYSTEM_Initialize
   499 ;;		_TMR2_SetInterruptHandler
   500 ;;		_map
   501 ;; This function is called by:
   502 ;;		Startup code after reset
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text0
   507  001608                     __ptext0:
   508                           	callstack 0
   509  001608                     _main:
   510                           	callstack 119
   511  001608                     
   512                           ;main.c: 41:     SYSTEM_Initialize();
   513  001608  ECB7  F011         	call	_SYSTEM_Initialize	;wreg free
   514  00160C                     
   515                           ;main.c: 42:     SPI1_Open(SPI1_DEFAULT);
   516  00160C  0E00               	movlw	0
   517  00160E  EC46  F00F         	call	_SPI1_Open
   518  001612                     
   519                           ;main.c: 43:     (INTCON0bits.GIE = 1);
   520  001612  8ED6               	bsf	214,7,c	;volatile
   521  001614                     
   522                           ;main.c: 45:     TMR2_SetInterruptHandler(LOOPDELAY_TimerISR);
   523  001614  0E8C               	movlw	low _LOOPDELAY_TimerISR
   524  001616  6E01               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+1280),c
   525  001618  0E23               	movlw	high _LOOPDELAY_TimerISR
   526  00161A  6E02               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   527  00161C  EC27  F012         	call	_TMR2_SetInterruptHandler	;wreg free
   528  001620                     
   529                           ;main.c: 48:     uint8_t taster1Flag = 0;
   530  001620  0E00               	movlw	0
   531  001622  6E33               	movwf	main@taster1Flag^(0+1280),c
   532  001624                     
   533                           ;main.c: 49:     uint8_t taster2Flag = 0;
   534  001624  0E00               	movlw	0
   535  001626  6E34               	movwf	main@taster2Flag^(0+1280),c
   536  001628                     
   537                           ;main.c: 50:     uint8_t taster3Flag = 0;
   538  001628  0E00               	movlw	0
   539  00162A  6E31               	movwf	main@taster3Flag^(0+1280),c
   540  00162C                     
   541                           ;main.c: 51:     uint8_t taster4Flag = 0;
   542  00162C  0E00               	movlw	0
   543  00162E  6E32               	movwf	main@taster4Flag^(0+1280),c
   544  001630                     
   545                           ;main.c: 53:     LATCbits.LATC7 = 0;
   546  001630  9EC0               	bcf	192,7,c	;volatile
   547  001632                     
   548                           ;main.c: 54:     LATCbits.LATC5 = 0;
   549  001632  9AC0               	bcf	192,5,c	;volatile
   550  001634                     
   551                           ;main.c: 55:     LATAbits.LATA5 = 0;
   552  001634  9ABE               	bcf	190,5,c	;volatile
   553  001636                     
   554                           ;main.c: 56:     LATCbits.LATC3 = 0;
   555  001636  96C0               	bcf	192,3,c	;volatile
   556  001638                     
   557                           ;main.c: 64:     state_t state = MANUAL;
   558  001638  0E00               	movlw	0
   559  00163A  6E39               	movwf	main@state^(0+1280),c
   560  00163C                     
   561                           ;main.c: 68:     if(DATAEE_ReadByte(22) == 69)
   562  00163C  0E00               	movlw	0
   563  00163E  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   564  001640  0E16               	movlw	22
   565  001642  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   566  001644  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   567  001648  0A45               	xorlw	69
   568  00164A  A4D8               	btfss	status,2,c
   569  00164C  EF2A  F00B         	goto	u831
   570  001650  EF2C  F00B         	goto	u830
   571  001654                     u831:
   572  001654  EF4E  F00C         	goto	l2271
   573  001658                     u830:
   574  001658                     
   575                           ;main.c: 69:     {;main.c: 70:         state = DATAEE_ReadByte(56);
   576  001658  0E00               	movlw	0
   577  00165A  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   578  00165C  0E38               	movlw	56
   579  00165E  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   580  001660  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   581  001664  6E39               	movwf	main@state^(0+1280),c
   582  001666                     
   583                           ;main.c: 72:         if(state == 1)
   584  001666  0439               	decf	main@state^(0+1280),w,c
   585  001668  A4D8               	btfss	status,2,c
   586  00166A  EF39  F00B         	goto	u841
   587  00166E  EF3B  F00B         	goto	u840
   588  001672                     u841:
   589  001672  EF79  F00B         	goto	l2235
   590  001676                     u840:
   591  001676                     
   592                           ;main.c: 73:         {;main.c: 74:             if(DATAEE_ReadByte(23) == 69)
   593  001676  0E00               	movlw	0
   594  001678  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   595  00167A  0E17               	movlw	23
   596  00167C  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   597  00167E  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   598  001682  0A45               	xorlw	69
   599  001684  A4D8               	btfss	status,2,c
   600  001686  EF47  F00B         	goto	u851
   601  00168A  EF49  F00B         	goto	u850
   602  00168E                     u851:
   603  00168E  EF77  F00B         	goto	l2233
   604  001692                     u850:
   605  001692                     
   606                           ;main.c: 75:             {;main.c: 76:                 red = DATAEE_ReadByte(31);
   607  001692  0E00               	movlw	0
   608  001694  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   609  001696  0E1F               	movlw	31
   610  001698  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   611  00169A  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   612  00169E  6E35               	movwf	main@red^(0+1280),c
   613                           
   614                           ;main.c: 77:                 green = DATAEE_ReadByte(33);
   615  0016A0  0E00               	movlw	0
   616  0016A2  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   617  0016A4  0E21               	movlw	33
   618  0016A6  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   619  0016A8  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   620  0016AC  6E36               	movwf	main@green^(0+1280),c
   621                           
   622                           ;main.c: 78:                 blue = DATAEE_ReadByte(34);
   623  0016AE  0E00               	movlw	0
   624  0016B0  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   625  0016B2  0E22               	movlw	34
   626  0016B4  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   627  0016B6  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   628  0016BA  6E37               	movwf	main@blue^(0+1280),c
   629                           
   630                           ;main.c: 79:                 white = DATAEE_ReadByte(36);
   631  0016BC  0E00               	movlw	0
   632  0016BE  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   633  0016C0  0E24               	movlw	36
   634  0016C2  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   635  0016C4  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   636  0016C8  6E38               	movwf	main@white^(0+1280),c
   637  0016CA                     
   638                           ;main.c: 80:                 LED_WriteFull(red, green, blue, white, 3);
   639  0016CA  C536  F507         	movff	main@green,LED_WriteFull@green
   640  0016CE  C537  F508         	movff	main@blue,LED_WriteFull@blue
   641  0016D2  C538  F509         	movff	main@white,LED_WriteFull@white
   642  0016D6  0E03               	movlw	3
   643  0016D8  6E0A               	movwf	LED_WriteFull@ledcount^(0+1280),c
   644  0016DA  0E00               	movlw	0
   645  0016DC  6E0B               	movwf	(LED_WriteFull@ledcount+1)^(0+1280),c
   646  0016DE  0E00               	movlw	0
   647  0016E0  6E0C               	movwf	(LED_WriteFull@ledcount+2)^(0+1280),c
   648  0016E2  5035               	movf	main@red^(0+1280),w,c
   649  0016E4  EC19  F011         	call	_LED_WriteFull
   650  0016E8                     
   651                           ;main.c: 81:                 LATCbits.LATC7 = 1;
   652  0016E8  8EC0               	bsf	192,7,c	;volatile
   653                           
   654                           ;main.c: 82:             }
   655  0016EA  EF79  F00B         	goto	l2235
   656  0016EE                     l2233:
   657                           
   658                           ;main.c: 85:             {;main.c: 86:                 state = MANUAL;
   659  0016EE  0E00               	movlw	0
   660  0016F0  6E39               	movwf	main@state^(0+1280),c
   661  0016F2                     l2235:
   662                           
   663                           ;main.c: 90:         if(state == 2)
   664  0016F2  0E02               	movlw	2
   665  0016F4  1839               	xorwf	main@state^(0+1280),w,c
   666  0016F6  A4D8               	btfss	status,2,c
   667  0016F8  EF80  F00B         	goto	u861
   668  0016FC  EF82  F00B         	goto	u860
   669  001700                     u861:
   670  001700  EFC0  F00B         	goto	l2247
   671  001704                     u860:
   672  001704                     
   673                           ;main.c: 91:         {;main.c: 92:             if(DATAEE_ReadByte(24) == 69)
   674  001704  0E00               	movlw	0
   675  001706  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   676  001708  0E18               	movlw	24
   677  00170A  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   678  00170C  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   679  001710  0A45               	xorlw	69
   680  001712  A4D8               	btfss	status,2,c
   681  001714  EF8E  F00B         	goto	u871
   682  001718  EF90  F00B         	goto	u870
   683  00171C                     u871:
   684  00171C  EFBE  F00B         	goto	l2245
   685  001720                     u870:
   686  001720                     
   687                           ;main.c: 93:             {;main.c: 94:                 red = DATAEE_ReadByte(37);
   688  001720  0E00               	movlw	0
   689  001722  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   690  001724  0E25               	movlw	37
   691  001726  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   692  001728  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   693  00172C  6E35               	movwf	main@red^(0+1280),c
   694                           
   695                           ;main.c: 95:                 green = DATAEE_ReadByte(38);
   696  00172E  0E00               	movlw	0
   697  001730  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   698  001732  0E26               	movlw	38
   699  001734  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   700  001736  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   701  00173A  6E36               	movwf	main@green^(0+1280),c
   702                           
   703                           ;main.c: 96:                 blue = DATAEE_ReadByte(39);
   704  00173C  0E00               	movlw	0
   705  00173E  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   706  001740  0E27               	movlw	39
   707  001742  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   708  001744  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   709  001748  6E37               	movwf	main@blue^(0+1280),c
   710                           
   711                           ;main.c: 97:                 white = DATAEE_ReadByte(41);
   712  00174A  0E00               	movlw	0
   713  00174C  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   714  00174E  0E29               	movlw	41
   715  001750  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   716  001752  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   717  001756  6E38               	movwf	main@white^(0+1280),c
   718  001758                     
   719                           ;main.c: 98:                 LED_WriteFull(red, green, blue, white, 3);
   720  001758  C536  F507         	movff	main@green,LED_WriteFull@green
   721  00175C  C537  F508         	movff	main@blue,LED_WriteFull@blue
   722  001760  C538  F509         	movff	main@white,LED_WriteFull@white
   723  001764  0E03               	movlw	3
   724  001766  6E0A               	movwf	LED_WriteFull@ledcount^(0+1280),c
   725  001768  0E00               	movlw	0
   726  00176A  6E0B               	movwf	(LED_WriteFull@ledcount+1)^(0+1280),c
   727  00176C  0E00               	movlw	0
   728  00176E  6E0C               	movwf	(LED_WriteFull@ledcount+2)^(0+1280),c
   729  001770  5035               	movf	main@red^(0+1280),w,c
   730  001772  EC19  F011         	call	_LED_WriteFull
   731  001776                     
   732                           ;main.c: 99:                 LATCbits.LATC5 = 1;
   733  001776  8AC0               	bsf	192,5,c	;volatile
   734                           
   735                           ;main.c: 100:             }
   736  001778  EFC0  F00B         	goto	l2247
   737  00177C                     l2245:
   738                           
   739                           ;main.c: 103:             {;main.c: 104:                 state = MANUAL;
   740  00177C  0E00               	movlw	0
   741  00177E  6E39               	movwf	main@state^(0+1280),c
   742  001780                     l2247:
   743                           
   744                           ;main.c: 108:         if(state == 3)
   745  001780  0E03               	movlw	3
   746  001782  1839               	xorwf	main@state^(0+1280),w,c
   747  001784  A4D8               	btfss	status,2,c
   748  001786  EFC7  F00B         	goto	u881
   749  00178A  EFC9  F00B         	goto	u880
   750  00178E                     u881:
   751  00178E  EF07  F00C         	goto	l2259
   752  001792                     u880:
   753  001792                     
   754                           ;main.c: 109:         {;main.c: 110:             if(DATAEE_ReadByte(26) == 69)
   755  001792  0E00               	movlw	0
   756  001794  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   757  001796  0E1A               	movlw	26
   758  001798  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   759  00179A  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   760  00179E  0A45               	xorlw	69
   761  0017A0  A4D8               	btfss	status,2,c
   762  0017A2  EFD5  F00B         	goto	u891
   763  0017A6  EFD7  F00B         	goto	u890
   764  0017AA                     u891:
   765  0017AA  EF05  F00C         	goto	l2257
   766  0017AE                     u890:
   767  0017AE                     
   768                           ;main.c: 111:             {;main.c: 112:                 red = DATAEE_ReadByte(43);
   769  0017AE  0E00               	movlw	0
   770  0017B0  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   771  0017B2  0E2B               	movlw	43
   772  0017B4  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   773  0017B6  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   774  0017BA  6E35               	movwf	main@red^(0+1280),c
   775                           
   776                           ;main.c: 113:                 green = DATAEE_ReadByte(45);
   777  0017BC  0E00               	movlw	0
   778  0017BE  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   779  0017C0  0E2D               	movlw	45
   780  0017C2  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   781  0017C4  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   782  0017C8  6E36               	movwf	main@green^(0+1280),c
   783                           
   784                           ;main.c: 114:                 blue = DATAEE_ReadByte(46);
   785  0017CA  0E00               	movlw	0
   786  0017CC  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   787  0017CE  0E2E               	movlw	46
   788  0017D0  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   789  0017D2  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   790  0017D6  6E37               	movwf	main@blue^(0+1280),c
   791                           
   792                           ;main.c: 115:                 white = DATAEE_ReadByte(48);
   793  0017D8  0E00               	movlw	0
   794  0017DA  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   795  0017DC  0E30               	movlw	48
   796  0017DE  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   797  0017E0  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   798  0017E4  6E38               	movwf	main@white^(0+1280),c
   799  0017E6                     
   800                           ;main.c: 116:                 LED_WriteFull(red, green, blue, white, 3);
   801  0017E6  C536  F507         	movff	main@green,LED_WriteFull@green
   802  0017EA  C537  F508         	movff	main@blue,LED_WriteFull@blue
   803  0017EE  C538  F509         	movff	main@white,LED_WriteFull@white
   804  0017F2  0E03               	movlw	3
   805  0017F4  6E0A               	movwf	LED_WriteFull@ledcount^(0+1280),c
   806  0017F6  0E00               	movlw	0
   807  0017F8  6E0B               	movwf	(LED_WriteFull@ledcount+1)^(0+1280),c
   808  0017FA  0E00               	movlw	0
   809  0017FC  6E0C               	movwf	(LED_WriteFull@ledcount+2)^(0+1280),c
   810  0017FE  5035               	movf	main@red^(0+1280),w,c
   811  001800  EC19  F011         	call	_LED_WriteFull
   812  001804                     
   813                           ;main.c: 117:                 LATAbits.LATA5 = 1;
   814  001804  8ABE               	bsf	190,5,c	;volatile
   815                           
   816                           ;main.c: 118:             }
   817  001806  EF07  F00C         	goto	l2259
   818  00180A                     l2257:
   819                           
   820                           ;main.c: 121:             {;main.c: 122:                 state = MANUAL;
   821  00180A  0E00               	movlw	0
   822  00180C  6E39               	movwf	main@state^(0+1280),c
   823  00180E                     l2259:
   824                           
   825                           ;main.c: 126:         if(state == 4)
   826  00180E  0E04               	movlw	4
   827  001810  1839               	xorwf	main@state^(0+1280),w,c
   828  001812  A4D8               	btfss	status,2,c
   829  001814  EF0E  F00C         	goto	u901
   830  001818  EF10  F00C         	goto	u900
   831  00181C                     u901:
   832  00181C  EF4E  F00C         	goto	l2271
   833  001820                     u900:
   834  001820                     
   835                           ;main.c: 127:         {;main.c: 128:             if(DATAEE_ReadByte(28) == 69)
   836  001820  0E00               	movlw	0
   837  001822  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   838  001824  0E1C               	movlw	28
   839  001826  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   840  001828  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   841  00182C  0A45               	xorlw	69
   842  00182E  A4D8               	btfss	status,2,c
   843  001830  EF1C  F00C         	goto	u911
   844  001834  EF1E  F00C         	goto	u910
   845  001838                     u911:
   846  001838  EF4C  F00C         	goto	l2269
   847  00183C                     u910:
   848  00183C                     
   849                           ;main.c: 129:             {;main.c: 130:                 red = DATAEE_ReadByte(50);
   850  00183C  0E00               	movlw	0
   851  00183E  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   852  001840  0E32               	movlw	50
   853  001842  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   854  001844  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   855  001848  6E35               	movwf	main@red^(0+1280),c
   856                           
   857                           ;main.c: 131:                 green = DATAEE_ReadByte(51);
   858  00184A  0E00               	movlw	0
   859  00184C  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   860  00184E  0E33               	movlw	51
   861  001850  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   862  001852  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   863  001856  6E36               	movwf	main@green^(0+1280),c
   864                           
   865                           ;main.c: 132:                 blue = DATAEE_ReadByte(53);
   866  001858  0E00               	movlw	0
   867  00185A  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   868  00185C  0E35               	movlw	53
   869  00185E  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   870  001860  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   871  001864  6E37               	movwf	main@blue^(0+1280),c
   872                           
   873                           ;main.c: 133:                 white = DATAEE_ReadByte(55);
   874  001866  0E00               	movlw	0
   875  001868  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
   876  00186A  0E37               	movlw	55
   877  00186C  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
   878  00186E  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
   879  001872  6E38               	movwf	main@white^(0+1280),c
   880  001874                     
   881                           ;main.c: 134:                 LED_WriteFull(red, green, blue, white, 3);
   882  001874  C536  F507         	movff	main@green,LED_WriteFull@green
   883  001878  C537  F508         	movff	main@blue,LED_WriteFull@blue
   884  00187C  C538  F509         	movff	main@white,LED_WriteFull@white
   885  001880  0E03               	movlw	3
   886  001882  6E0A               	movwf	LED_WriteFull@ledcount^(0+1280),c
   887  001884  0E00               	movlw	0
   888  001886  6E0B               	movwf	(LED_WriteFull@ledcount+1)^(0+1280),c
   889  001888  0E00               	movlw	0
   890  00188A  6E0C               	movwf	(LED_WriteFull@ledcount+2)^(0+1280),c
   891  00188C  5035               	movf	main@red^(0+1280),w,c
   892  00188E  EC19  F011         	call	_LED_WriteFull
   893  001892                     
   894                           ;main.c: 135:                 LATCbits.LATC3 = 1;
   895  001892  86C0               	bsf	192,3,c	;volatile
   896                           
   897                           ;main.c: 136:             }
   898  001894  EF4E  F00C         	goto	l2271
   899  001898                     l2269:
   900                           
   901                           ;main.c: 139:             {;main.c: 140:                 state = MANUAL;
   902  001898  0E00               	movlw	0
   903  00189A  6E39               	movwf	main@state^(0+1280),c
   904  00189C                     l2271:
   905                           
   906                           ;main.c: 147:     LOOPDELAY_Init(10);
   907  00189C  0E00               	movlw	0
   908  00189E  6E02               	movwf	(LOOPDELAY_Init@newLoopTimeMS+1)^(0+1280),c
   909  0018A0  0E0A               	movlw	10
   910  0018A2  6E01               	movwf	LOOPDELAY_Init@newLoopTimeMS^(0+1280),c
   911  0018A4  EC2C  F012         	call	_LOOPDELAY_Init	;wreg free
   912  0018A8                     l2273:
   913                           
   914                           ;main.c: 150:     {;main.c: 151:         LOOPDELAY_Wait();
   915  0018A8  ECA7  F011         	call	_LOOPDELAY_Wait	;wreg free
   916  0018AC                     
   917                           ;main.c: 153:         DATAEE_WriteByte(56, state);
   918  0018AC  0E00               	movlw	0
   919  0018AE  6E02               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+1280),c
   920  0018B0  0E38               	movlw	56
   921  0018B2  6E01               	movwf	DATAEE_WriteByte@bAdd^(0+1280),c
   922  0018B4  C539  F503         	movff	main@state,DATAEE_WriteByte@bData
   923  0018B8  ECF0  F010         	call	_DATAEE_WriteByte	;wreg free
   924  0018BC                     
   925                           ;main.c: 154:         DATAEE_WriteByte(22, 69);
   926  0018BC  0E00               	movlw	0
   927  0018BE  6E02               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+1280),c
   928  0018C0  0E16               	movlw	22
   929  0018C2  6E01               	movwf	DATAEE_WriteByte@bAdd^(0+1280),c
   930  0018C4  0E45               	movlw	69
   931  0018C6  6E03               	movwf	DATAEE_WriteByte@bData^(0+1280),c
   932  0018C8  ECF0  F010         	call	_DATAEE_WriteByte	;wreg free
   933                           
   934                           ;main.c: 156:         switch(state)
   935  0018CC  EF9D  F00E         	goto	l2393
   936  0018D0                     l2279:
   937                           
   938                           ;main.c: 160:                 ADCC_DischargeSampleCapacitor();
   939  0018D0  EC39  F012         	call	_ADCC_DischargeSampleCapacitor	;wreg free
   940  0018D4  0E02               	movlw	2
   941  0018D6  EC3F  F011         	call	_ADCC_GetSingleConversion
   942  0018DA  C501  F51B         	movff	?_ADCC_GetSingleConversion,map@x
   943  0018DE  C502  F51C         	movff	?_ADCC_GetSingleConversion+1,map@x+1
   944  0018E2  6A1D               	clrf	(map@x+2)^(0+1280),c
   945  0018E4  6A1E               	clrf	(map@x+3)^(0+1280),c
   946  0018E6  0E00               	movlw	0
   947  0018E8  6E1F               	movwf	map@in_min^(0+1280),c
   948  0018EA  0E00               	movlw	0
   949  0018EC  6E20               	movwf	(map@in_min+1)^(0+1280),c
   950  0018EE  0E00               	movlw	0
   951  0018F0  6E21               	movwf	(map@in_min+2)^(0+1280),c
   952  0018F2  0E00               	movlw	0
   953  0018F4  6E22               	movwf	(map@in_min+3)^(0+1280),c
   954  0018F6  0EFF               	movlw	255
   955  0018F8  6E23               	movwf	map@in_max^(0+1280),c
   956  0018FA  0E0F               	movlw	15
   957  0018FC  6E24               	movwf	(map@in_max+1)^(0+1280),c
   958  0018FE  0E00               	movlw	0
   959  001900  6E25               	movwf	(map@in_max+2)^(0+1280),c
   960  001902  0E00               	movlw	0
   961  001904  6E26               	movwf	(map@in_max+3)^(0+1280),c
   962  001906  0E00               	movlw	0
   963  001908  6E27               	movwf	map@out_min^(0+1280),c
   964  00190A  0E00               	movlw	0
   965  00190C  6E28               	movwf	(map@out_min+1)^(0+1280),c
   966  00190E  0E00               	movlw	0
   967  001910  6E29               	movwf	(map@out_min+2)^(0+1280),c
   968  001912  0E00               	movlw	0
   969  001914  6E2A               	movwf	(map@out_min+3)^(0+1280),c
   970  001916  0EFF               	movlw	255
   971  001918  6E2B               	movwf	map@out_max^(0+1280),c
   972  00191A  0E00               	movlw	0
   973  00191C  6E2C               	movwf	(map@out_max+1)^(0+1280),c
   974  00191E  0E00               	movlw	0
   975  001920  6E2D               	movwf	(map@out_max+2)^(0+1280),c
   976  001922  0E00               	movlw	0
   977  001924  6E2E               	movwf	(map@out_max+3)^(0+1280),c
   978  001926  EC1D  F010         	call	_map	;wreg free
   979  00192A                     
   980                           ;main.c: 162:                 ADCC_DischargeSampleCapacitor();
   981  00192A  EC39  F012         	call	_ADCC_DischargeSampleCapacitor	;wreg free
   982  00192E  0E10               	movlw	16
   983  001930  EC3F  F011         	call	_ADCC_GetSingleConversion
   984  001934  C501  F51B         	movff	?_ADCC_GetSingleConversion,map@x
   985  001938  C502  F51C         	movff	?_ADCC_GetSingleConversion+1,map@x+1
   986  00193C  6A1D               	clrf	(map@x+2)^(0+1280),c
   987  00193E  6A1E               	clrf	(map@x+3)^(0+1280),c
   988  001940  0E00               	movlw	0
   989  001942  6E1F               	movwf	map@in_min^(0+1280),c
   990  001944  0E00               	movlw	0
   991  001946  6E20               	movwf	(map@in_min+1)^(0+1280),c
   992  001948  0E00               	movlw	0
   993  00194A  6E21               	movwf	(map@in_min+2)^(0+1280),c
   994  00194C  0E00               	movlw	0
   995  00194E  6E22               	movwf	(map@in_min+3)^(0+1280),c
   996  001950  0EFF               	movlw	255
   997  001952  6E23               	movwf	map@in_max^(0+1280),c
   998  001954  0E0F               	movlw	15
   999  001956  6E24               	movwf	(map@in_max+1)^(0+1280),c
  1000  001958  0E00               	movlw	0
  1001  00195A  6E25               	movwf	(map@in_max+2)^(0+1280),c
  1002  00195C  0E00               	movlw	0
  1003  00195E  6E26               	movwf	(map@in_max+3)^(0+1280),c
  1004  001960  0E00               	movlw	0
  1005  001962  6E27               	movwf	map@out_min^(0+1280),c
  1006  001964  0E00               	movlw	0
  1007  001966  6E28               	movwf	(map@out_min+1)^(0+1280),c
  1008  001968  0E00               	movlw	0
  1009  00196A  6E29               	movwf	(map@out_min+2)^(0+1280),c
  1010  00196C  0E00               	movlw	0
  1011  00196E  6E2A               	movwf	(map@out_min+3)^(0+1280),c
  1012  001970  0EFF               	movlw	255
  1013  001972  6E2B               	movwf	map@out_max^(0+1280),c
  1014  001974  0E00               	movlw	0
  1015  001976  6E2C               	movwf	(map@out_max+1)^(0+1280),c
  1016  001978  0E00               	movlw	0
  1017  00197A  6E2D               	movwf	(map@out_max+2)^(0+1280),c
  1018  00197C  0E00               	movlw	0
  1019  00197E  6E2E               	movwf	(map@out_max+3)^(0+1280),c
  1020  001980  EC1D  F010         	call	_map	;wreg free
  1021  001984                     
  1022                           ;main.c: 164:                 ADCC_DischargeSampleCapacitor();
  1023  001984  EC39  F012         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  1024  001988  0E11               	movlw	17
  1025  00198A  EC3F  F011         	call	_ADCC_GetSingleConversion
  1026  00198E  C501  F51B         	movff	?_ADCC_GetSingleConversion,map@x
  1027  001992  C502  F51C         	movff	?_ADCC_GetSingleConversion+1,map@x+1
  1028  001996  6A1D               	clrf	(map@x+2)^(0+1280),c
  1029  001998  6A1E               	clrf	(map@x+3)^(0+1280),c
  1030  00199A  0E00               	movlw	0
  1031  00199C  6E1F               	movwf	map@in_min^(0+1280),c
  1032  00199E  0E00               	movlw	0
  1033  0019A0  6E20               	movwf	(map@in_min+1)^(0+1280),c
  1034  0019A2  0E00               	movlw	0
  1035  0019A4  6E21               	movwf	(map@in_min+2)^(0+1280),c
  1036  0019A6  0E00               	movlw	0
  1037  0019A8  6E22               	movwf	(map@in_min+3)^(0+1280),c
  1038  0019AA  0EFF               	movlw	255
  1039  0019AC  6E23               	movwf	map@in_max^(0+1280),c
  1040  0019AE  0E0F               	movlw	15
  1041  0019B0  6E24               	movwf	(map@in_max+1)^(0+1280),c
  1042  0019B2  0E00               	movlw	0
  1043  0019B4  6E25               	movwf	(map@in_max+2)^(0+1280),c
  1044  0019B6  0E00               	movlw	0
  1045  0019B8  6E26               	movwf	(map@in_max+3)^(0+1280),c
  1046  0019BA  0E00               	movlw	0
  1047  0019BC  6E27               	movwf	map@out_min^(0+1280),c
  1048  0019BE  0E00               	movlw	0
  1049  0019C0  6E28               	movwf	(map@out_min+1)^(0+1280),c
  1050  0019C2  0E00               	movlw	0
  1051  0019C4  6E29               	movwf	(map@out_min+2)^(0+1280),c
  1052  0019C6  0E00               	movlw	0
  1053  0019C8  6E2A               	movwf	(map@out_min+3)^(0+1280),c
  1054  0019CA  0EFF               	movlw	255
  1055  0019CC  6E2B               	movwf	map@out_max^(0+1280),c
  1056  0019CE  0E00               	movlw	0
  1057  0019D0  6E2C               	movwf	(map@out_max+1)^(0+1280),c
  1058  0019D2  0E00               	movlw	0
  1059  0019D4  6E2D               	movwf	(map@out_max+2)^(0+1280),c
  1060  0019D6  0E00               	movlw	0
  1061  0019D8  6E2E               	movwf	(map@out_max+3)^(0+1280),c
  1062  0019DA  EC1D  F010         	call	_map	;wreg free
  1063                           
  1064                           ;main.c: 166:                 ADCC_DischargeSampleCapacitor();
  1065  0019DE  EC39  F012         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  1066  0019E2  0E12               	movlw	18
  1067  0019E4  EC3F  F011         	call	_ADCC_GetSingleConversion
  1068  0019E8  C501  F51B         	movff	?_ADCC_GetSingleConversion,map@x
  1069  0019EC  C502  F51C         	movff	?_ADCC_GetSingleConversion+1,map@x+1
  1070  0019F0  6A1D               	clrf	(map@x+2)^(0+1280),c
  1071  0019F2  6A1E               	clrf	(map@x+3)^(0+1280),c
  1072  0019F4  0E00               	movlw	0
  1073  0019F6  6E1F               	movwf	map@in_min^(0+1280),c
  1074  0019F8  0E00               	movlw	0
  1075  0019FA  6E20               	movwf	(map@in_min+1)^(0+1280),c
  1076  0019FC  0E00               	movlw	0
  1077  0019FE  6E21               	movwf	(map@in_min+2)^(0+1280),c
  1078  001A00  0E00               	movlw	0
  1079  001A02  6E22               	movwf	(map@in_min+3)^(0+1280),c
  1080  001A04  0EFF               	movlw	255
  1081  001A06  6E23               	movwf	map@in_max^(0+1280),c
  1082  001A08  0E0F               	movlw	15
  1083  001A0A  6E24               	movwf	(map@in_max+1)^(0+1280),c
  1084  001A0C  0E00               	movlw	0
  1085  001A0E  6E25               	movwf	(map@in_max+2)^(0+1280),c
  1086  001A10  0E00               	movlw	0
  1087  001A12  6E26               	movwf	(map@in_max+3)^(0+1280),c
  1088  001A14  0E00               	movlw	0
  1089  001A16  6E27               	movwf	map@out_min^(0+1280),c
  1090  001A18  0E00               	movlw	0
  1091  001A1A  6E28               	movwf	(map@out_min+1)^(0+1280),c
  1092  001A1C  0E00               	movlw	0
  1093  001A1E  6E29               	movwf	(map@out_min+2)^(0+1280),c
  1094  001A20  0E00               	movlw	0
  1095  001A22  6E2A               	movwf	(map@out_min+3)^(0+1280),c
  1096  001A24  0EFF               	movlw	255
  1097  001A26  6E2B               	movwf	map@out_max^(0+1280),c
  1098  001A28  0E00               	movlw	0
  1099  001A2A  6E2C               	movwf	(map@out_max+1)^(0+1280),c
  1100  001A2C  0E00               	movlw	0
  1101  001A2E  6E2D               	movwf	(map@out_max+2)^(0+1280),c
  1102  001A30  0E00               	movlw	0
  1103  001A32  6E2E               	movwf	(map@out_max+3)^(0+1280),c
  1104  001A34  EC1D  F010         	call	_map	;wreg free
  1105  001A38                     
  1106                           ;main.c: 169:                 if(LATCbits.LATC6 && !taster1Flag)
  1107  001A38  ACC0               	btfss	192,6,c	;volatile
  1108  001A3A  EF21  F00D         	goto	u921
  1109  001A3E  EF23  F00D         	goto	u920
  1110  001A42                     u921:
  1111  001A42  EF2E  F00D         	goto	l2299
  1112  001A46                     u920:
  1113  001A46  5033               	movf	main@taster1Flag^(0+1280),w,c
  1114  001A48  A4D8               	btfss	status,2,c
  1115  001A4A  EF29  F00D         	goto	u931
  1116  001A4E  EF2B  F00D         	goto	u930
  1117  001A52                     u931:
  1118  001A52  EF2E  F00D         	goto	l2299
  1119  001A56                     u930:
  1120  001A56                     
  1121                           ;main.c: 170:                 {;main.c: 171:                     LATCbits.LATC7 = 1;
  1122  001A56  8EC0               	bsf	192,7,c	;volatile
  1123  001A58                     
  1124                           ;main.c: 172:                     state = T1;
  1125  001A58  0E01               	movlw	1
  1126  001A5A  6E39               	movwf	main@state^(0+1280),c
  1127  001A5C                     l2299:
  1128                           
  1129                           ;main.c: 174:                 taster1Flag = LATCbits.LATC6;
  1130  001A5C  0E00               	movlw	0
  1131  001A5E  BCC0               	btfsc	192,6,c	;volatile
  1132  001A60  0E01               	movlw	1
  1133  001A62  6E33               	movwf	main@taster1Flag^(0+1280),c
  1134  001A64                     
  1135                           ;main.c: 176:                 if(LATAbits.LATA4 && !taster2Flag)
  1136  001A64  A8BE               	btfss	190,4,c	;volatile
  1137  001A66  EF37  F00D         	goto	u941
  1138  001A6A  EF39  F00D         	goto	u940
  1139  001A6E                     u941:
  1140  001A6E  EF44  F00D         	goto	l2309
  1141  001A72                     u940:
  1142  001A72  5034               	movf	main@taster2Flag^(0+1280),w,c
  1143  001A74  A4D8               	btfss	status,2,c
  1144  001A76  EF3F  F00D         	goto	u951
  1145  001A7A  EF41  F00D         	goto	u950
  1146  001A7E                     u951:
  1147  001A7E  EF44  F00D         	goto	l2309
  1148  001A82                     u950:
  1149  001A82                     
  1150                           ;main.c: 177:                 {;main.c: 178:                     LATCbits.LATC5 = 1;
  1151  001A82  8AC0               	bsf	192,5,c	;volatile
  1152  001A84                     
  1153                           ;main.c: 179:                     state = T2 ;
  1154  001A84  0E02               	movlw	2
  1155  001A86  6E39               	movwf	main@state^(0+1280),c
  1156  001A88                     l2309:
  1157                           
  1158                           ;main.c: 181:                 taster2Flag = LATAbits.LATA4;
  1159  001A88  0E00               	movlw	0
  1160  001A8A  B8BE               	btfsc	190,4,c	;volatile
  1161  001A8C  0E01               	movlw	1
  1162  001A8E  6E34               	movwf	main@taster2Flag^(0+1280),c
  1163                           
  1164                           ;main.c: 183:                 break;
  1165  001A90  EF54  F00C         	goto	l2273
  1166  001A94                     l565:
  1167                           
  1168                           ;main.c: 187:                 if(LATCbits.LATC6 && !taster1Flag)
  1169  001A94  ACC0               	btfss	192,6,c	;volatile
  1170  001A96  EF4F  F00D         	goto	u961
  1171  001A9A  EF51  F00D         	goto	u960
  1172  001A9E                     u961:
  1173  001A9E  EF5C  F00D         	goto	l2317
  1174  001AA2                     u960:
  1175  001AA2  5033               	movf	main@taster1Flag^(0+1280),w,c
  1176  001AA4  A4D8               	btfss	status,2,c
  1177  001AA6  EF57  F00D         	goto	u971
  1178  001AAA  EF59  F00D         	goto	u970
  1179  001AAE                     u971:
  1180  001AAE  EF5C  F00D         	goto	l2317
  1181  001AB2                     u970:
  1182  001AB2                     
  1183                           ;main.c: 188:                 {;main.c: 189:                     LATCbits.LATC7 = 0;
  1184  001AB2  9EC0               	bcf	192,7,c	;volatile
  1185  001AB4                     
  1186                           ;main.c: 190:                     state = MANUAL;
  1187  001AB4  0E00               	movlw	0
  1188  001AB6  6E39               	movwf	main@state^(0+1280),c
  1189  001AB8                     l2317:
  1190                           
  1191                           ;main.c: 192:                 taster1Flag = LATCbits.LATC6;
  1192  001AB8  0E00               	movlw	0
  1193  001ABA  BCC0               	btfsc	192,6,c	;volatile
  1194  001ABC  0E01               	movlw	1
  1195  001ABE  6E33               	movwf	main@taster1Flag^(0+1280),c
  1196  001AC0                     
  1197                           ;main.c: 194:                 if(LATAbits.LATA4 && !taster2Flag)
  1198  001AC0  A8BE               	btfss	190,4,c	;volatile
  1199  001AC2  EF65  F00D         	goto	u981
  1200  001AC6  EF67  F00D         	goto	u980
  1201  001ACA                     u981:
  1202  001ACA  EFAC  F00D         	goto	l2335
  1203  001ACE                     u980:
  1204  001ACE  5034               	movf	main@taster2Flag^(0+1280),w,c
  1205  001AD0  A4D8               	btfss	status,2,c
  1206  001AD2  EF6D  F00D         	goto	u991
  1207  001AD6  EF6F  F00D         	goto	u990
  1208  001ADA                     u991:
  1209  001ADA  EFAC  F00D         	goto	l2335
  1210  001ADE                     u990:
  1211  001ADE                     
  1212                           ;main.c: 195:                 {;main.c: 196:                     if(DATAEE_ReadByte(24) 
      +                          == 69)
  1213  001ADE  0E00               	movlw	0
  1214  001AE0  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1215  001AE2  0E18               	movlw	24
  1216  001AE4  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1217  001AE6  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1218  001AEA  0A45               	xorlw	69
  1219  001AEC  A4D8               	btfss	status,2,c
  1220  001AEE  EF7B  F00D         	goto	u1001
  1221  001AF2  EF7D  F00D         	goto	u1000
  1222  001AF6                     u1001:
  1223  001AF6  EFAC  F00D         	goto	l2335
  1224  001AFA                     u1000:
  1225  001AFA                     
  1226                           ;main.c: 197:                     {;main.c: 198:                         red = DATAEE_Re
      +                          adByte(37);
  1227  001AFA  0E00               	movlw	0
  1228  001AFC  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1229  001AFE  0E25               	movlw	37
  1230  001B00  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1231  001B02  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1232  001B06  6E35               	movwf	main@red^(0+1280),c
  1233                           
  1234                           ;main.c: 199:                         green = DATAEE_ReadByte(38);
  1235  001B08  0E00               	movlw	0
  1236  001B0A  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1237  001B0C  0E26               	movlw	38
  1238  001B0E  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1239  001B10  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1240  001B14  6E36               	movwf	main@green^(0+1280),c
  1241                           
  1242                           ;main.c: 200:                         blue = DATAEE_ReadByte(39);
  1243  001B16  0E00               	movlw	0
  1244  001B18  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1245  001B1A  0E27               	movlw	39
  1246  001B1C  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1247  001B1E  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1248  001B22  6E37               	movwf	main@blue^(0+1280),c
  1249                           
  1250                           ;main.c: 201:                         white = DATAEE_ReadByte(41);
  1251  001B24  0E00               	movlw	0
  1252  001B26  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1253  001B28  0E29               	movlw	41
  1254  001B2A  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1255  001B2C  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1256  001B30  6E38               	movwf	main@white^(0+1280),c
  1257  001B32                     
  1258                           ;main.c: 202:                         LED_WriteFull(red, green, blue, white, 3);
  1259  001B32  C536  F507         	movff	main@green,LED_WriteFull@green
  1260  001B36  C537  F508         	movff	main@blue,LED_WriteFull@blue
  1261  001B3A  C538  F509         	movff	main@white,LED_WriteFull@white
  1262  001B3E  0E03               	movlw	3
  1263  001B40  6E0A               	movwf	LED_WriteFull@ledcount^(0+1280),c
  1264  001B42  0E00               	movlw	0
  1265  001B44  6E0B               	movwf	(LED_WriteFull@ledcount+1)^(0+1280),c
  1266  001B46  0E00               	movlw	0
  1267  001B48  6E0C               	movwf	(LED_WriteFull@ledcount+2)^(0+1280),c
  1268  001B4A  5035               	movf	main@red^(0+1280),w,c
  1269  001B4C  EC19  F011         	call	_LED_WriteFull
  1270  001B50                     
  1271                           ;main.c: 203:                         LATCbits.LATC5 = 1;
  1272  001B50  8AC0               	bsf	192,5,c	;volatile
  1273  001B52                     
  1274                           ;main.c: 204:                         LATCbits.LATC7 = 0;
  1275  001B52  9EC0               	bcf	192,7,c	;volatile
  1276  001B54                     
  1277                           ;main.c: 206:                         state = T2;
  1278  001B54  0E02               	movlw	2
  1279  001B56  6E39               	movwf	main@state^(0+1280),c
  1280  001B58                     l2335:
  1281                           
  1282                           ;main.c: 209:                 taster2Flag = LATAbits.LATA4;
  1283  001B58  0E00               	movlw	0
  1284  001B5A  B8BE               	btfsc	190,4,c	;volatile
  1285  001B5C  0E01               	movlw	1
  1286  001B5E  6E34               	movwf	main@taster2Flag^(0+1280),c
  1287                           
  1288                           ;main.c: 213:                 break;
  1289  001B60  EF54  F00C         	goto	l2273
  1290  001B64                     l569:
  1291                           
  1292                           ;main.c: 217:                 if(LATAbits.LATA4 && !taster2Flag)
  1293  001B64  A8BE               	btfss	190,4,c	;volatile
  1294  001B66  EFB7  F00D         	goto	u1011
  1295  001B6A  EFB9  F00D         	goto	u1010
  1296  001B6E                     u1011:
  1297  001B6E  EFC3  F00D         	goto	l2341
  1298  001B72                     u1010:
  1299  001B72  5034               	movf	main@taster2Flag^(0+1280),w,c
  1300  001B74  A4D8               	btfss	status,2,c
  1301  001B76  EFBF  F00D         	goto	u1021
  1302  001B7A  EFC1  F00D         	goto	u1020
  1303  001B7E                     u1021:
  1304  001B7E  EFC3  F00D         	goto	l2341
  1305  001B82                     u1020:
  1306  001B82                     
  1307                           ;main.c: 218:                 {;main.c: 219:                     state = MANUAL;
  1308  001B82  0E00               	movlw	0
  1309  001B84  6E39               	movwf	main@state^(0+1280),c
  1310  001B86                     l2341:
  1311                           
  1312                           ;main.c: 221:                 taster2Flag = LATAbits.LATA4;
  1313  001B86  0E00               	movlw	0
  1314  001B88  B8BE               	btfsc	190,4,c	;volatile
  1315  001B8A  0E01               	movlw	1
  1316  001B8C  6E34               	movwf	main@taster2Flag^(0+1280),c
  1317                           
  1318                           ;main.c: 223:                 break;
  1319  001B8E  EF54  F00C         	goto	l2273
  1320  001B92                     l571:
  1321                           
  1322                           ;main.c: 227:                 if(LATCbits.LATC4 && !taster3Flag)
  1323  001B92  A8C0               	btfss	192,4,c	;volatile
  1324  001B94  EFCE  F00D         	goto	u1031
  1325  001B98  EFD0  F00D         	goto	u1030
  1326  001B9C                     u1031:
  1327  001B9C  EFDA  F00D         	goto	l2347
  1328  001BA0                     u1030:
  1329  001BA0  5031               	movf	main@taster3Flag^(0+1280),w,c
  1330  001BA2  A4D8               	btfss	status,2,c
  1331  001BA4  EFD6  F00D         	goto	u1041
  1332  001BA8  EFD8  F00D         	goto	u1040
  1333  001BAC                     u1041:
  1334  001BAC  EFDA  F00D         	goto	l2347
  1335  001BB0                     u1040:
  1336  001BB0                     
  1337                           ;main.c: 228:                 {;main.c: 229:                     state = MANUAL;
  1338  001BB0  0E00               	movlw	0
  1339  001BB2  6E39               	movwf	main@state^(0+1280),c
  1340  001BB4                     l2347:
  1341                           
  1342                           ;main.c: 231:                 taster3Flag = LATCbits.LATC4;
  1343  001BB4  0E00               	movlw	0
  1344  001BB6  B8C0               	btfsc	192,4,c	;volatile
  1345  001BB8  0E01               	movlw	1
  1346  001BBA  6E31               	movwf	main@taster3Flag^(0+1280),c
  1347  001BBC                     
  1348                           ;main.c: 233:                 if(LATAbits.LATA4 && !taster2Flag)
  1349  001BBC  A8BE               	btfss	190,4,c	;volatile
  1350  001BBE  EFE3  F00D         	goto	u1051
  1351  001BC2  EFE5  F00D         	goto	u1050
  1352  001BC6                     u1051:
  1353  001BC6  EF2D  F00E         	goto	l2365
  1354  001BCA                     u1050:
  1355  001BCA  5034               	movf	main@taster2Flag^(0+1280),w,c
  1356  001BCC  A4D8               	btfss	status,2,c
  1357  001BCE  EFEB  F00D         	goto	u1061
  1358  001BD2  EFED  F00D         	goto	u1060
  1359  001BD6                     u1061:
  1360  001BD6  EF2D  F00E         	goto	l2365
  1361  001BDA                     u1060:
  1362  001BDA                     
  1363                           ;main.c: 234:                 {;main.c: 235:                     if(DATAEE_ReadByte(24) 
      +                          == 69)
  1364  001BDA  0E00               	movlw	0
  1365  001BDC  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1366  001BDE  0E18               	movlw	24
  1367  001BE0  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1368  001BE2  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1369  001BE6  0A45               	xorlw	69
  1370  001BE8  A4D8               	btfss	status,2,c
  1371  001BEA  EFF9  F00D         	goto	u1071
  1372  001BEE  EFFB  F00D         	goto	u1070
  1373  001BF2                     u1071:
  1374  001BF2  EF2B  F00E         	goto	l2363
  1375  001BF6                     u1070:
  1376  001BF6                     
  1377                           ;main.c: 236:                     {;main.c: 237:                         red = DATAEE_Re
      +                          adByte(37);
  1378  001BF6  0E00               	movlw	0
  1379  001BF8  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1380  001BFA  0E25               	movlw	37
  1381  001BFC  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1382  001BFE  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1383  001C02  6E35               	movwf	main@red^(0+1280),c
  1384                           
  1385                           ;main.c: 238:                         green = DATAEE_ReadByte(38);
  1386  001C04  0E00               	movlw	0
  1387  001C06  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1388  001C08  0E26               	movlw	38
  1389  001C0A  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1390  001C0C  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1391  001C10  6E36               	movwf	main@green^(0+1280),c
  1392                           
  1393                           ;main.c: 239:                         blue = DATAEE_ReadByte(39);
  1394  001C12  0E00               	movlw	0
  1395  001C14  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1396  001C16  0E27               	movlw	39
  1397  001C18  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1398  001C1A  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1399  001C1E  6E37               	movwf	main@blue^(0+1280),c
  1400                           
  1401                           ;main.c: 240:                         white = DATAEE_ReadByte(41);
  1402  001C20  0E00               	movlw	0
  1403  001C22  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1404  001C24  0E29               	movlw	41
  1405  001C26  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1406  001C28  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1407  001C2C  6E38               	movwf	main@white^(0+1280),c
  1408  001C2E                     
  1409                           ;main.c: 241:                         LED_WriteFull(red, green, blue, white, 3);
  1410  001C2E  C536  F507         	movff	main@green,LED_WriteFull@green
  1411  001C32  C537  F508         	movff	main@blue,LED_WriteFull@blue
  1412  001C36  C538  F509         	movff	main@white,LED_WriteFull@white
  1413  001C3A  0E03               	movlw	3
  1414  001C3C  6E0A               	movwf	LED_WriteFull@ledcount^(0+1280),c
  1415  001C3E  0E00               	movlw	0
  1416  001C40  6E0B               	movwf	(LED_WriteFull@ledcount+1)^(0+1280),c
  1417  001C42  0E00               	movlw	0
  1418  001C44  6E0C               	movwf	(LED_WriteFull@ledcount+2)^(0+1280),c
  1419  001C46  5035               	movf	main@red^(0+1280),w,c
  1420  001C48  EC19  F011         	call	_LED_WriteFull
  1421  001C4C                     
  1422                           ;main.c: 242:                         LATCbits.LATC5 = 1;
  1423  001C4C  8AC0               	bsf	192,5,c	;volatile
  1424  001C4E                     
  1425                           ;main.c: 244:                         state = T2;
  1426  001C4E  0E02               	movlw	2
  1427  001C50  6E39               	movwf	main@state^(0+1280),c
  1428                           
  1429                           ;main.c: 245:                     }
  1430  001C52  EF2D  F00E         	goto	l2365
  1431  001C56                     l2363:
  1432                           
  1433                           ;main.c: 248:                     {;main.c: 249:                         state = MANUAL;
  1434  001C56  0E00               	movlw	0
  1435  001C58  6E39               	movwf	main@state^(0+1280),c
  1436  001C5A                     l2365:
  1437                           
  1438                           ;main.c: 252:                 taster2Flag = LATAbits.LATA4;
  1439  001C5A  0E00               	movlw	0
  1440  001C5C  B8BE               	btfsc	190,4,c	;volatile
  1441  001C5E  0E01               	movlw	1
  1442  001C60  6E34               	movwf	main@taster2Flag^(0+1280),c
  1443                           
  1444                           ;main.c: 254:                 break;
  1445  001C62  EF54  F00C         	goto	l2273
  1446  001C66                     l576:
  1447                           
  1448                           ;main.c: 258:                 if(LATBbits.LATB7 && !taster4Flag)
  1449  001C66  AEBF               	btfss	191,7,c	;volatile
  1450  001C68  EF38  F00E         	goto	u1081
  1451  001C6C  EF3A  F00E         	goto	u1080
  1452  001C70                     u1081:
  1453  001C70  EF44  F00E         	goto	l2371
  1454  001C74                     u1080:
  1455  001C74  5032               	movf	main@taster4Flag^(0+1280),w,c
  1456  001C76  A4D8               	btfss	status,2,c
  1457  001C78  EF40  F00E         	goto	u1091
  1458  001C7C  EF42  F00E         	goto	u1090
  1459  001C80                     u1091:
  1460  001C80  EF44  F00E         	goto	l2371
  1461  001C84                     u1090:
  1462  001C84                     
  1463                           ;main.c: 259:                 {;main.c: 260:                     state = MANUAL;
  1464  001C84  0E00               	movlw	0
  1465  001C86  6E39               	movwf	main@state^(0+1280),c
  1466  001C88                     l2371:
  1467                           
  1468                           ;main.c: 262:                 taster4Flag = LATBbits.LATB7;
  1469  001C88  0E00               	movlw	0
  1470  001C8A  BEBF               	btfsc	191,7,c	;volatile
  1471  001C8C  0E01               	movlw	1
  1472  001C8E  6E32               	movwf	main@taster4Flag^(0+1280),c
  1473  001C90                     
  1474                           ;main.c: 264:                 if(LATAbits.LATA4 && !taster2Flag)
  1475  001C90  A8BE               	btfss	190,4,c	;volatile
  1476  001C92  EF4D  F00E         	goto	u1101
  1477  001C96  EF4F  F00E         	goto	u1100
  1478  001C9A                     u1101:
  1479  001C9A  EF97  F00E         	goto	l2389
  1480  001C9E                     u1100:
  1481  001C9E  5034               	movf	main@taster2Flag^(0+1280),w,c
  1482  001CA0  A4D8               	btfss	status,2,c
  1483  001CA2  EF55  F00E         	goto	u1111
  1484  001CA6  EF57  F00E         	goto	u1110
  1485  001CAA                     u1111:
  1486  001CAA  EF97  F00E         	goto	l2389
  1487  001CAE                     u1110:
  1488  001CAE                     
  1489                           ;main.c: 265:                 {;main.c: 266:                     if(DATAEE_ReadByte(24) 
      +                          == 69)
  1490  001CAE  0E00               	movlw	0
  1491  001CB0  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1492  001CB2  0E18               	movlw	24
  1493  001CB4  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1494  001CB6  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1495  001CBA  0A45               	xorlw	69
  1496  001CBC  A4D8               	btfss	status,2,c
  1497  001CBE  EF63  F00E         	goto	u1121
  1498  001CC2  EF65  F00E         	goto	u1120
  1499  001CC6                     u1121:
  1500  001CC6  EF95  F00E         	goto	l2387
  1501  001CCA                     u1120:
  1502  001CCA                     
  1503                           ;main.c: 267:                     {;main.c: 268:                         red = DATAEE_Re
      +                          adByte(37);
  1504  001CCA  0E00               	movlw	0
  1505  001CCC  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1506  001CCE  0E25               	movlw	37
  1507  001CD0  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1508  001CD2  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1509  001CD6  6E35               	movwf	main@red^(0+1280),c
  1510                           
  1511                           ;main.c: 269:                         green = DATAEE_ReadByte(38);
  1512  001CD8  0E00               	movlw	0
  1513  001CDA  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1514  001CDC  0E26               	movlw	38
  1515  001CDE  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1516  001CE0  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1517  001CE4  6E36               	movwf	main@green^(0+1280),c
  1518                           
  1519                           ;main.c: 270:                         blue = DATAEE_ReadByte(39);
  1520  001CE6  0E00               	movlw	0
  1521  001CE8  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1522  001CEA  0E27               	movlw	39
  1523  001CEC  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1524  001CEE  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1525  001CF2  6E37               	movwf	main@blue^(0+1280),c
  1526                           
  1527                           ;main.c: 271:                         white = DATAEE_ReadByte(41);
  1528  001CF4  0E00               	movlw	0
  1529  001CF6  6E02               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  1530  001CF8  0E29               	movlw	41
  1531  001CFA  6E01               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  1532  001CFC  EC1A  F012         	call	_DATAEE_ReadByte	;wreg free
  1533  001D00  6E38               	movwf	main@white^(0+1280),c
  1534  001D02                     
  1535                           ;main.c: 272:                         LED_WriteFull(red, green, blue, white, 3);
  1536  001D02  C536  F507         	movff	main@green,LED_WriteFull@green
  1537  001D06  C537  F508         	movff	main@blue,LED_WriteFull@blue
  1538  001D0A  C538  F509         	movff	main@white,LED_WriteFull@white
  1539  001D0E  0E03               	movlw	3
  1540  001D10  6E0A               	movwf	LED_WriteFull@ledcount^(0+1280),c
  1541  001D12  0E00               	movlw	0
  1542  001D14  6E0B               	movwf	(LED_WriteFull@ledcount+1)^(0+1280),c
  1543  001D16  0E00               	movlw	0
  1544  001D18  6E0C               	movwf	(LED_WriteFull@ledcount+2)^(0+1280),c
  1545  001D1A  5035               	movf	main@red^(0+1280),w,c
  1546  001D1C  EC19  F011         	call	_LED_WriteFull
  1547  001D20                     
  1548                           ;main.c: 273:                         LATCbits.LATC5 = 1;
  1549  001D20  8AC0               	bsf	192,5,c	;volatile
  1550  001D22                     
  1551                           ;main.c: 275:                         state = T2;
  1552  001D22  0E02               	movlw	2
  1553  001D24  6E39               	movwf	main@state^(0+1280),c
  1554                           
  1555                           ;main.c: 276:                     }
  1556  001D26  EF97  F00E         	goto	l2389
  1557  001D2A                     l2387:
  1558                           
  1559                           ;main.c: 279:                     {;main.c: 280:                         state = MANUAL;
  1560  001D2A  0E00               	movlw	0
  1561  001D2C  6E39               	movwf	main@state^(0+1280),c
  1562  001D2E                     l2389:
  1563                           
  1564                           ;main.c: 283:                 taster2Flag = LATAbits.LATA4;
  1565  001D2E  0E00               	movlw	0
  1566  001D30  B8BE               	btfsc	190,4,c	;volatile
  1567  001D32  0E01               	movlw	1
  1568  001D34  6E34               	movwf	main@taster2Flag^(0+1280),c
  1569                           
  1570                           ;main.c: 285:                 break;
  1571  001D36  EF54  F00C         	goto	l2273
  1572  001D3A                     l2393:
  1573  001D3A  5039               	movf	main@state^(0+1280),w,c
  1574  001D3C  6E2F               	movwf	??_main^(0+1280),c
  1575  001D3E  6A30               	clrf	(??_main+1)^(0+1280),c
  1576                           
  1577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1578                           ; Switch size 1, requested type "simple"
  1579                           ; Number of cases is 1, Range of values is 0 to 0
  1580                           ; switch strategies available:
  1581                           ; Name         Instructions Cycles
  1582                           ; simple_byte            4     3 (average)
  1583                           ;	Chosen strategy is simple_byte
  1584  001D40  5030               	movf	(??_main+1)^(0+1280),w,c
  1585  001D42  0A00               	xorlw	0	; case 0
  1586  001D44  B4D8               	btfsc	status,2,c
  1587  001D46  EFA7  F00E         	goto	l2419
  1588  001D4A  EF54  F00C         	goto	l2273
  1589  001D4E                     l2419:
  1590                           
  1591                           ; Switch size 1, requested type "simple"
  1592                           ; Number of cases is 5, Range of values is 0 to 4
  1593                           ; switch strategies available:
  1594                           ; Name         Instructions Cycles
  1595                           ; simple_byte           16     9 (average)
  1596                           ;	Chosen strategy is simple_byte
  1597  001D4E  502F               	movf	??_main^(0+1280),w,c
  1598  001D50  0A00               	xorlw	0	; case 0
  1599  001D52  B4D8               	btfsc	status,2,c
  1600  001D54  EF68  F00C         	goto	l2279
  1601  001D58  0A01               	xorlw	1	; case 1
  1602  001D5A  B4D8               	btfsc	status,2,c
  1603  001D5C  EF4A  F00D         	goto	l565
  1604  001D60  0A03               	xorlw	3	; case 2
  1605  001D62  B4D8               	btfsc	status,2,c
  1606  001D64  EFB2  F00D         	goto	l569
  1607  001D68  0A01               	xorlw	1	; case 3
  1608  001D6A  B4D8               	btfsc	status,2,c
  1609  001D6C  EFC9  F00D         	goto	l571
  1610  001D70  0A07               	xorlw	7	; case 4
  1611  001D72  B4D8               	btfsc	status,2,c
  1612  001D74  EF33  F00E         	goto	l576
  1613  001D78  EF54  F00C         	goto	l2273
  1614  001D7C  EF0D  F000         	goto	start
  1615  001D80                     __end_of_main:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _map *****************
  1619 ;; Defined at:
  1620 ;;		line 11 in file "DivFunctions.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  x               4   26[COMRAM] long 
  1623 ;;  in_min          4   30[COMRAM] long 
  1624 ;;  in_max          4   34[COMRAM] long 
  1625 ;;  out_min         4   38[COMRAM] long 
  1626 ;;  out_max         4   42[COMRAM] long 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  4   26[COMRAM] long 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1638 ;;      Params:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1641 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1642 ;;Total ram usage:       20 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; Hardware stack levels required when called: 5
  1645 ;; This function calls:
  1646 ;;		___aldiv
  1647 ;;		___lmul
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text1
  1654  00203A                     __ptext1:
  1655                           	callstack 0
  1656  00203A                     _map:
  1657                           	callstack 122
  1658  00203A                     
  1659                           ;DivFunctions.c: 12:   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + o
      +                          ut_min;
  1660  00203A  501F               	movf	map@in_min^(0+1280),w,c
  1661  00203C  5C1B               	subwf	map@x^(0+1280),w,c
  1662  00203E  6E01               	movwf	___lmul@multiplier^(0+1280),c
  1663  002040  5020               	movf	(map@in_min+1)^(0+1280),w,c
  1664  002042  581C               	subwfb	(map@x+1)^(0+1280),w,c
  1665  002044  6E02               	movwf	(___lmul@multiplier+1)^(0+1280),c
  1666  002046  5021               	movf	(map@in_min+2)^(0+1280),w,c
  1667  002048  581D               	subwfb	(map@x+2)^(0+1280),w,c
  1668  00204A  6E03               	movwf	(___lmul@multiplier+2)^(0+1280),c
  1669  00204C  5022               	movf	(map@in_min+3)^(0+1280),w,c
  1670  00204E  581E               	subwfb	(map@x+3)^(0+1280),w,c
  1671  002050  6E04               	movwf	(___lmul@multiplier+3)^(0+1280),c
  1672  002052  5027               	movf	map@out_min^(0+1280),w,c
  1673  002054  5C2B               	subwf	map@out_max^(0+1280),w,c
  1674  002056  6E05               	movwf	___lmul@multiplicand^(0+1280),c
  1675  002058  5028               	movf	(map@out_min+1)^(0+1280),w,c
  1676  00205A  582C               	subwfb	(map@out_max+1)^(0+1280),w,c
  1677  00205C  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
  1678  00205E  5029               	movf	(map@out_min+2)^(0+1280),w,c
  1679  002060  582D               	subwfb	(map@out_max+2)^(0+1280),w,c
  1680  002062  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
  1681  002064  502A               	movf	(map@out_min+3)^(0+1280),w,c
  1682  002066  582E               	subwfb	(map@out_max+3)^(0+1280),w,c
  1683  002068  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
  1684  00206A  EC5A  F010         	call	___lmul	;wreg free
  1685  00206E  C501  F50D         	movff	?___lmul,___aldiv@dividend
  1686  002072  C502  F50E         	movff	?___lmul+1,___aldiv@dividend+1
  1687  002076  C503  F50F         	movff	?___lmul+2,___aldiv@dividend+2
  1688  00207A  C504  F510         	movff	?___lmul+3,___aldiv@dividend+3
  1689  00207E  501F               	movf	map@in_min^(0+1280),w,c
  1690  002080  5C23               	subwf	map@in_max^(0+1280),w,c
  1691  002082  6E11               	movwf	___aldiv@divisor^(0+1280),c
  1692  002084  5020               	movf	(map@in_min+1)^(0+1280),w,c
  1693  002086  5824               	subwfb	(map@in_max+1)^(0+1280),w,c
  1694  002088  6E12               	movwf	(___aldiv@divisor+1)^(0+1280),c
  1695  00208A  5021               	movf	(map@in_min+2)^(0+1280),w,c
  1696  00208C  5825               	subwfb	(map@in_max+2)^(0+1280),w,c
  1697  00208E  6E13               	movwf	(___aldiv@divisor+2)^(0+1280),c
  1698  002090  5022               	movf	(map@in_min+3)^(0+1280),w,c
  1699  002092  5826               	subwfb	(map@in_max+3)^(0+1280),w,c
  1700  002094  6E14               	movwf	(___aldiv@divisor+3)^(0+1280),c
  1701  002096  ECC0  F00E         	call	___aldiv	;wreg free
  1702  00209A  5027               	movf	map@out_min^(0+1280),w,c
  1703  00209C  240D               	addwf	?___aldiv^(0+1280),w,c
  1704  00209E  6E1B               	movwf	?_map^(0+1280),c
  1705  0020A0  5028               	movf	(map@out_min+1)^(0+1280),w,c
  1706  0020A2  200E               	addwfc	(?___aldiv+1)^(0+1280),w,c
  1707  0020A4  6E1C               	movwf	(?_map+1)^(0+1280),c
  1708  0020A6  5029               	movf	(map@out_min+2)^(0+1280),w,c
  1709  0020A8  200F               	addwfc	(?___aldiv+2)^(0+1280),w,c
  1710  0020AA  6E1D               	movwf	(?_map+2)^(0+1280),c
  1711  0020AC  502A               	movf	(map@out_min+3)^(0+1280),w,c
  1712  0020AE  2010               	addwfc	(?___aldiv+3)^(0+1280),w,c
  1713  0020B0  6E1E               	movwf	(?_map+3)^(0+1280),c
  1714  0020B2  0012               	return		;funcret
  1715  0020B4                     __end_of_map:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function ___lmul *****************
  1719 ;; Defined at:
  1720 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  multiplier      4    0[COMRAM] unsigned long 
  1723 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  product         4    8[COMRAM] unsigned long 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  4    0[COMRAM] unsigned long 
  1728 ;; Registers used:
  1729 ;;		wreg, status,2, status,0
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1735 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1736 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1738 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1739 ;;Total ram usage:       12 bytes
  1740 ;; Hardware stack levels used: 1
  1741 ;; Hardware stack levels required when called: 4
  1742 ;; This function calls:
  1743 ;;		Nothing
  1744 ;; This function is called by:
  1745 ;;		_map
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text2
  1750  0020B4                     __ptext2:
  1751                           	callstack 0
  1752  0020B4                     ___lmul:
  1753                           	callstack 122
  1754  0020B4  0E00               	movlw	0
  1755  0020B6  6E09               	movwf	___lmul@product^(0+1280),c
  1756  0020B8  0E00               	movlw	0
  1757  0020BA  6E0A               	movwf	(___lmul@product+1)^(0+1280),c
  1758  0020BC  0E00               	movlw	0
  1759  0020BE  6E0B               	movwf	(___lmul@product+2)^(0+1280),c
  1760  0020C0  0E00               	movlw	0
  1761  0020C2  6E0C               	movwf	(___lmul@product+3)^(0+1280),c
  1762  0020C4                     l2069:
  1763  0020C4  A001               	btfss	___lmul@multiplier^(0+1280),0,c
  1764  0020C6  EF67  F010         	goto	u711
  1765  0020CA  EF69  F010         	goto	u710
  1766  0020CE                     u711:
  1767  0020CE  EF71  F010         	goto	l2073
  1768  0020D2                     u710:
  1769  0020D2  5005               	movf	___lmul@multiplicand^(0+1280),w,c
  1770  0020D4  2609               	addwf	___lmul@product^(0+1280),f,c
  1771  0020D6  5006               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
  1772  0020D8  220A               	addwfc	(___lmul@product+1)^(0+1280),f,c
  1773  0020DA  5007               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
  1774  0020DC  220B               	addwfc	(___lmul@product+2)^(0+1280),f,c
  1775  0020DE  5008               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
  1776  0020E0  220C               	addwfc	(___lmul@product+3)^(0+1280),f,c
  1777  0020E2                     l2073:
  1778  0020E2  90D8               	bcf	status,0,c
  1779  0020E4  3605               	rlcf	___lmul@multiplicand^(0+1280),f,c
  1780  0020E6  3606               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
  1781  0020E8  3607               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
  1782  0020EA  3608               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
  1783  0020EC  90D8               	bcf	status,0,c
  1784  0020EE  3204               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
  1785  0020F0  3203               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
  1786  0020F2  3202               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
  1787  0020F4  3201               	rrcf	___lmul@multiplier^(0+1280),f,c
  1788  0020F6  5001               	movf	___lmul@multiplier^(0+1280),w,c
  1789  0020F8  1002               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
  1790  0020FA  1003               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
  1791  0020FC  1004               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
  1792  0020FE  A4D8               	btfss	status,2,c
  1793  002100  EF84  F010         	goto	u721
  1794  002104  EF86  F010         	goto	u720
  1795  002108                     u721:
  1796  002108  EF62  F010         	goto	l2069
  1797  00210C                     u720:
  1798  00210C  C509  F501         	movff	___lmul@product,?___lmul
  1799  002110  C50A  F502         	movff	___lmul@product+1,?___lmul+1
  1800  002114  C50B  F503         	movff	___lmul@product+2,?___lmul+2
  1801  002118  C50C  F504         	movff	___lmul@product+3,?___lmul+3
  1802  00211C  0012               	return		;funcret
  1803  00211E                     __end_of___lmul:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function ___aldiv *****************
  1807 ;; Defined at:
  1808 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  dividend        4   12[COMRAM] long 
  1811 ;;  divisor         4   16[COMRAM] long 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  quotient        4   22[COMRAM] long 
  1814 ;;  sign            1   21[COMRAM] unsigned char 
  1815 ;;  counter         1   20[COMRAM] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  4   12[COMRAM] long 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1825 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1826 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1828 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1829 ;;Total ram usage:       14 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 4
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_map
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text3
  1840  001D80                     __ptext3:
  1841                           	callstack 0
  1842  001D80                     ___aldiv:
  1843                           	callstack 122
  1844  001D80  0E00               	movlw	0
  1845  001D82  6E16               	movwf	___aldiv@sign^(0+1280),c
  1846  001D84  BE14               	btfsc	(___aldiv@divisor+3)^(0+1280),7,c
  1847  001D86  EFC9  F00E         	goto	u730
  1848  001D8A  EFC7  F00E         	goto	u731
  1849  001D8E                     u731:
  1850  001D8E  EFD3  F00E         	goto	l2085
  1851  001D92                     u730:
  1852  001D92  1E14               	comf	(___aldiv@divisor+3)^(0+1280),f,c
  1853  001D94  1E13               	comf	(___aldiv@divisor+2)^(0+1280),f,c
  1854  001D96  1E12               	comf	(___aldiv@divisor+1)^(0+1280),f,c
  1855  001D98  6C11               	negf	___aldiv@divisor^(0+1280),c
  1856  001D9A  0E00               	movlw	0
  1857  001D9C  2212               	addwfc	(___aldiv@divisor+1)^(0+1280),f,c
  1858  001D9E  2213               	addwfc	(___aldiv@divisor+2)^(0+1280),f,c
  1859  001DA0  2214               	addwfc	(___aldiv@divisor+3)^(0+1280),f,c
  1860  001DA2  0E01               	movlw	1
  1861  001DA4  6E16               	movwf	___aldiv@sign^(0+1280),c
  1862  001DA6                     l2085:
  1863  001DA6  BE10               	btfsc	(___aldiv@dividend+3)^(0+1280),7,c
  1864  001DA8  EFDA  F00E         	goto	u740
  1865  001DAC  EFD8  F00E         	goto	u741
  1866  001DB0                     u741:
  1867  001DB0  EFE4  F00E         	goto	l2091
  1868  001DB4                     u740:
  1869  001DB4  1E10               	comf	(___aldiv@dividend+3)^(0+1280),f,c
  1870  001DB6  1E0F               	comf	(___aldiv@dividend+2)^(0+1280),f,c
  1871  001DB8  1E0E               	comf	(___aldiv@dividend+1)^(0+1280),f,c
  1872  001DBA  6C0D               	negf	___aldiv@dividend^(0+1280),c
  1873  001DBC  0E00               	movlw	0
  1874  001DBE  220E               	addwfc	(___aldiv@dividend+1)^(0+1280),f,c
  1875  001DC0  220F               	addwfc	(___aldiv@dividend+2)^(0+1280),f,c
  1876  001DC2  2210               	addwfc	(___aldiv@dividend+3)^(0+1280),f,c
  1877  001DC4  0E01               	movlw	1
  1878  001DC6  1A16               	xorwf	___aldiv@sign^(0+1280),f,c
  1879  001DC8                     l2091:
  1880  001DC8  0E00               	movlw	0
  1881  001DCA  6E17               	movwf	___aldiv@quotient^(0+1280),c
  1882  001DCC  0E00               	movlw	0
  1883  001DCE  6E18               	movwf	(___aldiv@quotient+1)^(0+1280),c
  1884  001DD0  0E00               	movlw	0
  1885  001DD2  6E19               	movwf	(___aldiv@quotient+2)^(0+1280),c
  1886  001DD4  0E00               	movlw	0
  1887  001DD6  6E1A               	movwf	(___aldiv@quotient+3)^(0+1280),c
  1888  001DD8  5011               	movf	___aldiv@divisor^(0+1280),w,c
  1889  001DDA  1012               	iorwf	(___aldiv@divisor+1)^(0+1280),w,c
  1890  001DDC  1013               	iorwf	(___aldiv@divisor+2)^(0+1280),w,c
  1891  001DDE  1014               	iorwf	(___aldiv@divisor+3)^(0+1280),w,c
  1892  001DE0  B4D8               	btfsc	status,2,c
  1893  001DE2  EFF5  F00E         	goto	u751
  1894  001DE6  EFF7  F00E         	goto	u750
  1895  001DEA                     u751:
  1896  001DEA  EF2D  F00F         	goto	l2113
  1897  001DEE                     u750:
  1898  001DEE  0E01               	movlw	1
  1899  001DF0  6E15               	movwf	___aldiv@counter^(0+1280),c
  1900  001DF2  EF01  F00F         	goto	l2099
  1901  001DF6                     l2097:
  1902  001DF6  90D8               	bcf	status,0,c
  1903  001DF8  3611               	rlcf	___aldiv@divisor^(0+1280),f,c
  1904  001DFA  3612               	rlcf	(___aldiv@divisor+1)^(0+1280),f,c
  1905  001DFC  3613               	rlcf	(___aldiv@divisor+2)^(0+1280),f,c
  1906  001DFE  3614               	rlcf	(___aldiv@divisor+3)^(0+1280),f,c
  1907  001E00  2A15               	incf	___aldiv@counter^(0+1280),f,c
  1908  001E02                     l2099:
  1909  001E02  AE14               	btfss	(___aldiv@divisor+3)^(0+1280),7,c
  1910  001E04  EF06  F00F         	goto	u761
  1911  001E08  EF08  F00F         	goto	u760
  1912  001E0C                     u761:
  1913  001E0C  EFFB  F00E         	goto	l2097
  1914  001E10                     u760:
  1915  001E10                     l2101:
  1916  001E10  90D8               	bcf	status,0,c
  1917  001E12  3617               	rlcf	___aldiv@quotient^(0+1280),f,c
  1918  001E14  3618               	rlcf	(___aldiv@quotient+1)^(0+1280),f,c
  1919  001E16  3619               	rlcf	(___aldiv@quotient+2)^(0+1280),f,c
  1920  001E18  361A               	rlcf	(___aldiv@quotient+3)^(0+1280),f,c
  1921  001E1A  5011               	movf	___aldiv@divisor^(0+1280),w,c
  1922  001E1C  5C0D               	subwf	___aldiv@dividend^(0+1280),w,c
  1923  001E1E  5012               	movf	(___aldiv@divisor+1)^(0+1280),w,c
  1924  001E20  580E               	subwfb	(___aldiv@dividend+1)^(0+1280),w,c
  1925  001E22  5013               	movf	(___aldiv@divisor+2)^(0+1280),w,c
  1926  001E24  580F               	subwfb	(___aldiv@dividend+2)^(0+1280),w,c
  1927  001E26  5014               	movf	(___aldiv@divisor+3)^(0+1280),w,c
  1928  001E28  5810               	subwfb	(___aldiv@dividend+3)^(0+1280),w,c
  1929  001E2A  A0D8               	btfss	status,0,c
  1930  001E2C  EF1A  F00F         	goto	u771
  1931  001E30  EF1C  F00F         	goto	u770
  1932  001E34                     u771:
  1933  001E34  EF25  F00F         	goto	l2109
  1934  001E38                     u770:
  1935  001E38  5011               	movf	___aldiv@divisor^(0+1280),w,c
  1936  001E3A  5E0D               	subwf	___aldiv@dividend^(0+1280),f,c
  1937  001E3C  5012               	movf	(___aldiv@divisor+1)^(0+1280),w,c
  1938  001E3E  5A0E               	subwfb	(___aldiv@dividend+1)^(0+1280),f,c
  1939  001E40  5013               	movf	(___aldiv@divisor+2)^(0+1280),w,c
  1940  001E42  5A0F               	subwfb	(___aldiv@dividend+2)^(0+1280),f,c
  1941  001E44  5014               	movf	(___aldiv@divisor+3)^(0+1280),w,c
  1942  001E46  5A10               	subwfb	(___aldiv@dividend+3)^(0+1280),f,c
  1943  001E48  8017               	bsf	___aldiv@quotient^(0+1280),0,c
  1944  001E4A                     l2109:
  1945  001E4A  90D8               	bcf	status,0,c
  1946  001E4C  3214               	rrcf	(___aldiv@divisor+3)^(0+1280),f,c
  1947  001E4E  3213               	rrcf	(___aldiv@divisor+2)^(0+1280),f,c
  1948  001E50  3212               	rrcf	(___aldiv@divisor+1)^(0+1280),f,c
  1949  001E52  3211               	rrcf	___aldiv@divisor^(0+1280),f,c
  1950  001E54  2E15               	decfsz	___aldiv@counter^(0+1280),f,c
  1951  001E56  EF08  F00F         	goto	l2101
  1952  001E5A                     l2113:
  1953  001E5A  5016               	movf	___aldiv@sign^(0+1280),w,c
  1954  001E5C  B4D8               	btfsc	status,2,c
  1955  001E5E  EF33  F00F         	goto	u781
  1956  001E62  EF35  F00F         	goto	u780
  1957  001E66                     u781:
  1958  001E66  EF3D  F00F         	goto	l2117
  1959  001E6A                     u780:
  1960  001E6A  1E1A               	comf	(___aldiv@quotient+3)^(0+1280),f,c
  1961  001E6C  1E19               	comf	(___aldiv@quotient+2)^(0+1280),f,c
  1962  001E6E  1E18               	comf	(___aldiv@quotient+1)^(0+1280),f,c
  1963  001E70  6C17               	negf	___aldiv@quotient^(0+1280),c
  1964  001E72  0E00               	movlw	0
  1965  001E74  2218               	addwfc	(___aldiv@quotient+1)^(0+1280),f,c
  1966  001E76  2219               	addwfc	(___aldiv@quotient+2)^(0+1280),f,c
  1967  001E78  221A               	addwfc	(___aldiv@quotient+3)^(0+1280),f,c
  1968  001E7A                     l2117:
  1969  001E7A  C517  F50D         	movff	___aldiv@quotient,?___aldiv
  1970  001E7E  C518  F50E         	movff	___aldiv@quotient+1,?___aldiv+1
  1971  001E82  C519  F50F         	movff	___aldiv@quotient+2,?___aldiv+2
  1972  001E86  C51A  F510         	movff	___aldiv@quotient+3,?___aldiv+3
  1973  001E8A  0012               	return		;funcret
  1974  001E8C                     __end_of___aldiv:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _SYSTEM_Initialize *****************
  1978 ;; Defined at:
  1979 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1997 ;;Total ram usage:        0 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 6
  2000 ;; This function calls:
  2001 ;;		_ADCC_Initialize
  2002 ;;		_INTERRUPT_Initialize
  2003 ;;		_OSCILLATOR_Initialize
  2004 ;;		_PIN_MANAGER_Initialize
  2005 ;;		_PMD_Initialize
  2006 ;;		_SPI1_Initialize
  2007 ;;		_TMR2_Initialize
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text4
  2014  00236E                     __ptext4:
  2015                           	callstack 0
  2016  00236E                     _SYSTEM_Initialize:
  2017                           	callstack 121
  2018  00236E                     
  2019                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  2020  00236E  EC41  F012         	call	_INTERRUPT_Initialize	;wreg free
  2021  002372                     
  2022                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2023  002372  ECE3  F011         	call	_PMD_Initialize	;wreg free
  2024  002376                     
  2025                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2026  002376  EC8F  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  2027  00237A                     
  2028                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2029  00237A  ECF1  F011         	call	_OSCILLATOR_Initialize	;wreg free
  2030  00237E                     
  2031                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  2032  00237E  ECC2  F010         	call	_ADCC_Initialize	;wreg free
  2033  002382                     
  2034                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  2035  002382  EC58  F011         	call	_TMR2_Initialize	;wreg free
  2036  002386                     
  2037                           ;mcc_generated_files/mcc.c: 58:     SPI1_Initialize();
  2038  002386  EC0D  F012         	call	_SPI1_Initialize	;wreg free
  2039  00238A  0012               	return		;funcret
  2040  00238C                     __end_of_SYSTEM_Initialize:
  2041                           	callstack 0
  2042                           
  2043 ;; *************** function _TMR2_Initialize *****************
  2044 ;; Defined at:
  2045 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2063 ;;Total ram usage:        0 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 5
  2066 ;; This function calls:
  2067 ;;		_TMR2_SetInterruptHandler
  2068 ;; This function is called by:
  2069 ;;		_SYSTEM_Initialize
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text5
  2074  0022B0                     __ptext5:
  2075                           	callstack 0
  2076  0022B0                     _TMR2_Initialize:
  2077                           	callstack 121
  2078  0022B0                     
  2079                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x03;
  2080  0022B0  0E03               	movlw	3
  2081  0022B2  0103               	movlb	3	; () banked
  2082  0022B4  6F20               	movwf	32,b	;volatile
  2083                           
  2084                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  2085  0022B6  0E00               	movlw	0
  2086  0022B8  6F1F               	movwf	31,b	;volatile
  2087                           
  2088                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  2089  0022BA  0E00               	movlw	0
  2090  0022BC  6F21               	movwf	33,b	;volatile
  2091                           
  2092                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0xF9;
  2093  0022BE  0EF9               	movlw	249
  2094  0022C0  6F1D               	movwf	29,b	;volatile
  2095                           
  2096                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  2097  0022C2  0E00               	movlw	0
  2098  0022C4  6F1C               	movwf	28,b	;volatile
  2099  0022C6                     
  2100                           ; BSR set to: 3
  2101                           ;mcc_generated_files/tmr2.c: 84:     PIR3bits.TMR2IF = 0;
  2102  0022C6  96B6               	bcf	182,3,c	;volatile
  2103  0022C8                     
  2104                           ; BSR set to: 3
  2105                           ;mcc_generated_files/tmr2.c: 87:     PIE3bits.TMR2IE = 1;
  2106  0022C8  86AB               	bsf	171,3,c	;volatile
  2107  0022CA                     
  2108                           ; BSR set to: 3
  2109                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  2110  0022CA  0E86               	movlw	low _TMR2_DefaultInterruptHandler
  2111  0022CC  6E01               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+1280),c
  2112  0022CE  0E24               	movlw	high _TMR2_DefaultInterruptHandler
  2113  0022D0  6E02               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  2114  0022D2  EC27  F012         	call	_TMR2_SetInterruptHandler	;wreg free
  2115  0022D6                     
  2116                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xF1;
  2117  0022D6  0EF1               	movlw	241
  2118  0022D8  0103               	movlb	3	; () banked
  2119  0022DA  6F1E               	movwf	30,b	;volatile
  2120  0022DC                     
  2121                           ; BSR set to: 3
  2122  0022DC  0012               	return		;funcret
  2123  0022DE                     __end_of_TMR2_Initialize:
  2124                           	callstack 0
  2125                           
  2126 ;; *************** function _TMR2_SetInterruptHandler *****************
  2127 ;; Defined at:
  2128 ;;		line 186 in file "mcc_generated_files/tmr2.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  2131 ;;		 -> LOOPDELAY_TimerISR(1), TMR2_DefaultInterruptHandler(1), 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2147 ;;Total ram usage:        2 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 4
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_TMR2_Initialize
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text6
  2159  00244E                     __ptext6:
  2160                           	callstack 0
  2161  00244E                     _TMR2_SetInterruptHandler:
  2162                           	callstack 123
  2163  00244E                     
  2164                           ;mcc_generated_files/tmr2.c: 187:     TMR2_InterruptHandler = InterruptHandler;
  2165  00244E  C501  F53E         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  2166  002452  C502  F53F         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  2167  002456  0012               	return		;funcret
  2168  002458                     __end_of_TMR2_SetInterruptHandler:
  2169                           	callstack 0
  2170                           
  2171 ;; *************** function _SPI1_Initialize *****************
  2172 ;; Defined at:
  2173 ;;		line 64 in file "mcc_generated_files/spi1.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 4
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_SYSTEM_Initialize
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text7
  2202  00241A                     __ptext7:
  2203                           	callstack 0
  2204  00241A                     _SPI1_Initialize:
  2205                           	callstack 122
  2206  00241A                     
  2207                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
  2208  00241A  0E02               	movlw	2
  2209  00241C  0100               	movlb	0	; () banked
  2210  00241E  6F84               	movwf	132,b	;volatile
  2211                           
  2212                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
  2213  002420  0E40               	movlw	64
  2214  002422  6F85               	movwf	133,b	;volatile
  2215                           
  2216                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
  2217  002424  0E00               	movlw	0
  2218  002426  6F86               	movwf	134,b	;volatile
  2219                           
  2220                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
  2221  002428  0E00               	movlw	0
  2222  00242A  6F8C               	movwf	140,b	;volatile
  2223                           
  2224                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x03;
  2225  00242C  0E03               	movlw	3
  2226  00242E  6F89               	movwf	137,b	;volatile
  2227  002430                     
  2228                           ; BSR set to: 0
  2229                           ;mcc_generated_files/spi1.c: 76:     TRISBbits.TRISB6 = 0;
  2230  002430  9CC7               	bcf	199,6,c	;volatile
  2231  002432                     
  2232                           ; BSR set to: 0
  2233  002432  0012               	return		;funcret
  2234  002434                     __end_of_SPI1_Initialize:
  2235                           	callstack 0
  2236                           
  2237 ;; *************** function _PMD_Initialize *****************
  2238 ;; Defined at:
  2239 ;;		line 77 in file "mcc_generated_files/mcc.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2257 ;;Total ram usage:        0 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; Hardware stack levels required when called: 4
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_SYSTEM_Initialize
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text8
  2268  0023C6                     __ptext8:
  2269                           	callstack 0
  2270  0023C6                     _PMD_Initialize:
  2271                           	callstack 122
  2272  0023C6                     
  2273                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  2274  0023C6  0E00               	movlw	0
  2275  0023C8  0100               	movlb	0	; () banked
  2276  0023CA  6F63               	movwf	99,b	;volatile
  2277                           
  2278                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  2279  0023CC  0E00               	movlw	0
  2280  0023CE  6F64               	movwf	100,b	;volatile
  2281                           
  2282                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  2283  0023D0  0E00               	movlw	0
  2284  0023D2  6F65               	movwf	101,b	;volatile
  2285                           
  2286                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  2287  0023D4  0E00               	movlw	0
  2288  0023D6  6F66               	movwf	102,b	;volatile
  2289                           
  2290                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  2291  0023D8  0E00               	movlw	0
  2292  0023DA  6F67               	movwf	103,b	;volatile
  2293                           
  2294                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  2295  0023DC  0E00               	movlw	0
  2296  0023DE  6F68               	movwf	104,b	;volatile
  2297  0023E0                     
  2298                           ; BSR set to: 0
  2299  0023E0  0012               	return		;funcret
  2300  0023E2                     __end_of_PMD_Initialize:
  2301                           	callstack 0
  2302                           
  2303 ;; *************** function _PIN_MANAGER_Initialize *****************
  2304 ;; Defined at:
  2305 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2323 ;;Total ram usage:        0 bytes
  2324 ;; Hardware stack levels used: 1
  2325 ;; Hardware stack levels required when called: 4
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_SYSTEM_Initialize
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           	psect	text9
  2334  00211E                     __ptext9:
  2335                           	callstack 0
  2336  00211E                     _PIN_MANAGER_Initialize:
  2337                           	callstack 122
  2338  00211E                     
  2339                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2340  00211E  0E00               	movlw	0
  2341  002120  6EBE               	movwf	190,c	;volatile
  2342                           
  2343                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2344  002122  0E00               	movlw	0
  2345  002124  6EBF               	movwf	191,c	;volatile
  2346                           
  2347                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2348  002126  0E00               	movlw	0
  2349  002128  6EC0               	movwf	192,c	;volatile
  2350                           
  2351                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x1F;
  2352  00212A  0E1F               	movlw	31
  2353  00212C  6EC6               	movwf	198,c	;volatile
  2354                           
  2355                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xA0;
  2356  00212E  0EA0               	movlw	160
  2357  002130  6EC7               	movwf	199,c	;volatile
  2358                           
  2359                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x57;
  2360  002132  0E57               	movlw	87
  2361  002134  6EC8               	movwf	200,c	;volatile
  2362                           
  2363                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xAF;
  2364  002136  0EAF               	movlw	175
  2365  002138  0104               	movlb	4	; () banked
  2366  00213A  6F10               	movwf	16,b	;volatile
  2367                           
  2368                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  2369  00213C  0E00               	movlw	0
  2370  00213E  6F08               	movwf	8,b	;volatile
  2371                           
  2372                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
  2373  002140  0E07               	movlw	7
  2374  002142  6F00               	movwf	0,b	;volatile
  2375                           
  2376                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x80;
  2377  002144  0E80               	movlw	128
  2378  002146  6F09               	movwf	9,b	;volatile
  2379                           
  2380                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x10;
  2381  002148  0E10               	movlw	16
  2382  00214A  6F01               	movwf	1,b	;volatile
  2383                           
  2384                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x50;
  2385  00214C  0E50               	movlw	80
  2386  00214E  6F11               	movwf	17,b	;volatile
  2387                           
  2388                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  2389  002150  0E00               	movlw	0
  2390  002152  6F02               	movwf	2,b	;volatile
  2391                           
  2392                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  2393  002154  0E00               	movlw	0
  2394  002156  6F0A               	movwf	10,b	;volatile
  2395                           
  2396                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  2397  002158  0E00               	movlw	0
  2398  00215A  6F12               	movwf	18,b	;volatile
  2399                           
  2400                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  2401  00215C  0E37               	movlw	55
  2402  00215E  6F03               	movwf	3,b	;volatile
  2403                           
  2404                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  2405  002160  0EF0               	movlw	240
  2406  002162  6F0B               	movwf	11,b	;volatile
  2407  002164                     
  2408                           ; BSR set to: 4
  2409                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  2410  002164  6913               	setf	19,b	;volatile
  2411                           
  2412                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  2413  002166  0E3F               	movlw	63
  2414  002168  6F04               	movwf	4,b	;volatile
  2415                           
  2416                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  2417  00216A  0EF0               	movlw	240
  2418  00216C  6F0C               	movwf	12,b	;volatile
  2419  00216E                     
  2420                           ; BSR set to: 4
  2421                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  2422  00216E  6914               	setf	20,b	;volatile
  2423                           
  2424                           ;mcc_generated_files/pin_manager.c: 113:     SPI1SCKPPS = 0x0E;
  2425  002170  0E0E               	movlw	14
  2426  002172  0102               	movlb	2	; () banked
  2427  002174  6F6A               	movwf	106,b	;volatile
  2428                           
  2429                           ;mcc_generated_files/pin_manager.c: 114:     RB6PPS = 0x1B;
  2430  002176  0E1B               	movlw	27
  2431  002178  6F0F               	movwf	15,b	;volatile
  2432                           
  2433                           ;mcc_generated_files/pin_manager.c: 115:     RB4PPS = 0x1C;
  2434  00217A  0E1C               	movlw	28
  2435  00217C  6F0D               	movwf	13,b	;volatile
  2436                           
  2437                           ;mcc_generated_files/pin_manager.c: 116:     SPI1SDIPPS = 0x0D;
  2438  00217E  0E0D               	movlw	13
  2439  002180  6F6B               	movwf	107,b	;volatile
  2440  002182                     
  2441                           ; BSR set to: 2
  2442  002182  0012               	return		;funcret
  2443  002184                     __end_of_PIN_MANAGER_Initialize:
  2444                           	callstack 0
  2445                           
  2446 ;; *************** function _OSCILLATOR_Initialize *****************
  2447 ;; Defined at:
  2448 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2466 ;;Total ram usage:        0 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 4
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_SYSTEM_Initialize
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text10
  2477  0023E2                     __ptext10:
  2478                           	callstack 0
  2479  0023E2                     _OSCILLATOR_Initialize:
  2480                           	callstack 122
  2481  0023E2                     
  2482                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  2483  0023E2  0E60               	movlw	96
  2484  0023E4  0100               	movlb	0	; () banked
  2485  0023E6  6FAD               	movwf	173,b	;volatile
  2486                           
  2487                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  2488  0023E8  0E00               	movlw	0
  2489  0023EA  6FAF               	movwf	175,b	;volatile
  2490                           
  2491                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  2492  0023EC  0E00               	movlw	0
  2493  0023EE  6FB3               	movwf	179,b	;volatile
  2494                           
  2495                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x08;
  2496  0023F0  0E08               	movlw	8
  2497  0023F2  6FB1               	movwf	177,b	;volatile
  2498                           
  2499                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  2500  0023F4  0E00               	movlw	0
  2501  0023F6  6FB0               	movwf	176,b	;volatile
  2502                           
  2503                           ;mcc_generated_files/mcc.c: 74:     ACTCON = 0x00;
  2504  0023F8  0E00               	movlw	0
  2505  0023FA  6FAC               	movwf	172,b	;volatile
  2506  0023FC                     
  2507                           ; BSR set to: 0
  2508  0023FC  0012               	return		;funcret
  2509  0023FE                     __end_of_OSCILLATOR_Initialize:
  2510                           	callstack 0
  2511                           
  2512 ;; *************** function _INTERRUPT_Initialize *****************
  2513 ;; Defined at:
  2514 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;		None
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;		None
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  1    wreg      void 
  2521 ;; Registers used:
  2522 ;;		None
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2532 ;;Total ram usage:        0 bytes
  2533 ;; Hardware stack levels used: 1
  2534 ;; Hardware stack levels required when called: 4
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_SYSTEM_Initialize
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text11
  2543  002482                     __ptext11:
  2544                           	callstack 0
  2545  002482                     _INTERRUPT_Initialize:
  2546                           	callstack 122
  2547  002482                     
  2548                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  2549  002482  9AD6               	bcf	214,5,c	;volatile
  2550  002484  0012               	return		;funcret
  2551  002486                     __end_of_INTERRUPT_Initialize:
  2552                           	callstack 0
  2553                           
  2554 ;; *************** function _ADCC_Initialize *****************
  2555 ;; Defined at:
  2556 ;;		line 62 in file "mcc_generated_files/adcc.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2574 ;;Total ram usage:        0 bytes
  2575 ;; Hardware stack levels used: 1
  2576 ;; Hardware stack levels required when called: 4
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_SYSTEM_Initialize
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text12
  2585  002184                     __ptext12:
  2586                           	callstack 0
  2587  002184                     _ADCC_Initialize:
  2588                           	callstack 122
  2589  002184                     
  2590                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  2591  002184  0E00               	movlw	0
  2592  002186  0103               	movlb	3	; () banked
  2593  002188  6FD9               	movwf	217,b	;volatile
  2594                           
  2595                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  2596  00218A  0E00               	movlw	0
  2597  00218C  6FDA               	movwf	218,b	;volatile
  2598                           
  2599                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  2600  00218E  0E00               	movlw	0
  2601  002190  6FDB               	movwf	219,b	;volatile
  2602                           
  2603                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  2604  002192  0E00               	movlw	0
  2605  002194  6FDC               	movwf	220,b	;volatile
  2606                           
  2607                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  2608  002196  0E00               	movlw	0
  2609  002198  6FDF               	movwf	223,b	;volatile
  2610                           
  2611                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  2612  00219A  0E00               	movlw	0
  2613  00219C  6FE0               	movwf	224,b	;volatile
  2614                           
  2615                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  2616  00219E  0E00               	movlw	0
  2617  0021A0  6FE5               	movwf	229,b	;volatile
  2618                           
  2619                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  2620  0021A2  0E00               	movlw	0
  2621  0021A4  6FE7               	movwf	231,b	;volatile
  2622                           
  2623                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  2624  0021A6  0E00               	movlw	0
  2625  0021A8  6FEC               	movwf	236,b	;volatile
  2626                           
  2627                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  2628  0021AA  0E00               	movlw	0
  2629  0021AC  6FEE               	movwf	238,b	;volatile
  2630                           
  2631                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  2632  0021AE  0E00               	movlw	0
  2633  0021B0  6FEF               	movwf	239,b	;volatile
  2634                           
  2635                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  2636  0021B2  0E00               	movlw	0
  2637  0021B4  6FF0               	movwf	240,b	;volatile
  2638                           
  2639                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  2640  0021B6  0E00               	movlw	0
  2641  0021B8  6FF1               	movwf	241,b	;volatile
  2642                           
  2643                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  2644  0021BA  0E00               	movlw	0
  2645  0021BC  6FF2               	movwf	242,b	;volatile
  2646                           
  2647                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  2648  0021BE  0E00               	movlw	0
  2649  0021C0  6FF4               	movwf	244,b	;volatile
  2650                           
  2651                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x10;
  2652  0021C2  0E10               	movlw	16
  2653  0021C4  6FF5               	movwf	245,b	;volatile
  2654                           
  2655                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  2656  0021C6  0E00               	movlw	0
  2657  0021C8  6FF6               	movwf	246,b	;volatile
  2658                           
  2659                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  2660  0021CA  0E00               	movlw	0
  2661  0021CC  6FF7               	movwf	247,b	;volatile
  2662                           
  2663                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  2664  0021CE  0E00               	movlw	0
  2665  0021D0  6FF8               	movwf	248,b	;volatile
  2666                           
  2667                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  2668  0021D2  0E00               	movlw	0
  2669  0021D4  6FF9               	movwf	249,b	;volatile
  2670                           
  2671                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  2672  0021D6  0E1F               	movlw	31
  2673  0021D8  6FFA               	movwf	250,b	;volatile
  2674                           
  2675                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  2676  0021DA  0E84               	movlw	132
  2677  0021DC  6FF3               	movwf	243,b	;volatile
  2678  0021DE                     
  2679                           ; BSR set to: 3
  2680  0021DE  0012               	return		;funcret
  2681  0021E0                     __end_of_ADCC_Initialize:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _SPI1_Open *****************
  2685 ;; Defined at:
  2686 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  spi1UniqueCo    1    wreg     enum E355
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  spi1UniqueCo    1    1[COMRAM] enum E355
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      _Bool 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2703 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2704 ;;Total ram usage:        2 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; Hardware stack levels required when called: 4
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text13
  2715  001E8C                     __ptext13:
  2716                           	callstack 0
  2717  001E8C                     _SPI1_Open:
  2718                           	callstack 123
  2719                           
  2720                           ; BSR set to: 3
  2721                           ;incstack = 0
  2722                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  2723  001E8C  6E02               	movwf	SPI1_Open@spi1UniqueConfiguration^(0+1280),c
  2724  001E8E                     
  2725                           ;mcc_generated_files/spi1.c: 79: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 80: {;mcc_generated_files/spi1.c: 81:     if(!SPI1CON0bits.EN
      +                          )
  2726  001E8E  0100               	movlb	0	; () banked
  2727  001E90  BF84               	btfsc	132,7,b	;volatile
  2728  001E92  EF4D  F00F         	goto	u221
  2729  001E96  EF4F  F00F         	goto	u220
  2730  001E9A                     u221:
  2731  001E9A  EFB2  F00F         	goto	l294
  2732  001E9E                     u220:
  2733  001E9E                     
  2734                           ; BSR set to: 0
  2735                           ;mcc_generated_files/spi1.c: 82:     {;mcc_generated_files/spi1.c: 83:         SPI1CON0 
      +                          = spi1_configuration[spi1UniqueConfiguration].con0;
  2736  001E9E  5002               	movf	SPI1_Open@spi1UniqueConfiguration^(0+1280),w,c
  2737  001EA0  0D05               	mullw	5
  2738  001EA2  0E01               	movlw	low _spi1_configuration
  2739  001EA4  24F3               	addwf	243,w,c
  2740  001EA6  6EF6               	movwf	tblptrl,c
  2741  001EA8  0E16               	movlw	high _spi1_configuration
  2742  001EAA  20F4               	addwfc	244,w,c
  2743  001EAC  6EF7               	movwf	tblptrh,c
  2744  001EAE                     	if	1	;There are 3 active tblptr bytes
  2745  001EAE  6AF8               	clrf	tblptru,c
  2746  001EB0  0E00               	movlw	low (__mediumconst shr (0+16))
  2747  001EB2  22F8               	addwfc	tblptru,f,c
  2748  001EB4                     	endif
  2749  001EB4  0008               	tblrd		*
  2750  001EB6  C4F5 F084          	movff	tablat,132	;volatile
  2751                           
  2752                           ;mcc_generated_files/spi1.c: 84:         SPI1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  2753  001EBA  5002               	movf	SPI1_Open@spi1UniqueConfiguration^(0+1280),w,c
  2754  001EBC  0D05               	mullw	5
  2755  001EBE  0E01               	movlw	1
  2756  001EC0  26F3               	addwf	243,f,c
  2757  001EC2  0E00               	movlw	0
  2758  001EC4  22F4               	addwfc	244,f,c
  2759  001EC6  0E01               	movlw	low _spi1_configuration
  2760  001EC8  24F3               	addwf	243,w,c
  2761  001ECA  6EF6               	movwf	tblptrl,c
  2762  001ECC  0E16               	movlw	high _spi1_configuration
  2763  001ECE  20F4               	addwfc	244,w,c
  2764  001ED0  6EF7               	movwf	tblptrh,c
  2765  001ED2                     	if	1	;There are 3 active tblptr bytes
  2766  001ED2  6AF8               	clrf	tblptru,c
  2767  001ED4  0E00               	movlw	low (__mediumconst shr (0+16))
  2768  001ED6  22F8               	addwfc	tblptru,f,c
  2769  001ED8                     	endif
  2770  001ED8  0008               	tblrd		*
  2771  001EDA  C4F5 F085          	movff	tablat,133	;volatile
  2772                           
  2773                           ;mcc_generated_files/spi1.c: 85:         SPI1CON2 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con2 | (0x1 | 0x2);
  2774  001EDE  5002               	movf	SPI1_Open@spi1UniqueConfiguration^(0+1280),w,c
  2775  001EE0  0D05               	mullw	5
  2776  001EE2  0E02               	movlw	2
  2777  001EE4  26F3               	addwf	243,f,c
  2778  001EE6  0E00               	movlw	0
  2779  001EE8  22F4               	addwfc	244,f,c
  2780  001EEA  0E01               	movlw	low _spi1_configuration
  2781  001EEC  24F3               	addwf	243,w,c
  2782  001EEE  6EF6               	movwf	tblptrl,c
  2783  001EF0  0E16               	movlw	high _spi1_configuration
  2784  001EF2  20F4               	addwfc	244,w,c
  2785  001EF4  6EF7               	movwf	tblptrh,c
  2786  001EF6                     	if	1	;There are 3 active tblptr bytes
  2787  001EF6  6AF8               	clrf	tblptru,c
  2788  001EF8  0E00               	movlw	low (__mediumconst shr (0+16))
  2789  001EFA  22F8               	addwfc	tblptru,f,c
  2790  001EFC                     	endif
  2791  001EFC  0008               	tblrd		*
  2792  001EFE  50F5               	movf	tablat,w,c
  2793  001F00  0903               	iorlw	3
  2794  001F02  6F86               	movwf	134,b	;volatile
  2795  001F04                     
  2796                           ; BSR set to: 0
  2797                           ;mcc_generated_files/spi1.c: 86:         SPI1CLK = 0x00;
  2798  001F04  0E00               	movlw	0
  2799  001F06  6F8C               	movwf	140,b	;volatile
  2800  001F08                     
  2801                           ; BSR set to: 0
  2802                           ;mcc_generated_files/spi1.c: 87:         SPI1BAUD = spi1_configuration[spi1UniqueConfigu
      +                          ration].baud;
  2803  001F08  5002               	movf	SPI1_Open@spi1UniqueConfiguration^(0+1280),w,c
  2804  001F0A  0D05               	mullw	5
  2805  001F0C  0E03               	movlw	3
  2806  001F0E  26F3               	addwf	243,f,c
  2807  001F10  0E00               	movlw	0
  2808  001F12  22F4               	addwfc	244,f,c
  2809  001F14  0E01               	movlw	low _spi1_configuration
  2810  001F16  24F3               	addwf	243,w,c
  2811  001F18  6EF6               	movwf	tblptrl,c
  2812  001F1A  0E16               	movlw	high _spi1_configuration
  2813  001F1C  20F4               	addwfc	244,w,c
  2814  001F1E  6EF7               	movwf	tblptrh,c
  2815  001F20                     	if	1	;There are 3 active tblptr bytes
  2816  001F20  6AF8               	clrf	tblptru,c
  2817  001F22  0E00               	movlw	low (__mediumconst shr (0+16))
  2818  001F24  22F8               	addwfc	tblptru,f,c
  2819  001F26                     	endif
  2820  001F26  0008               	tblrd		*
  2821  001F28  C4F5 F089          	movff	tablat,137	;volatile
  2822  001F2C                     
  2823                           ; BSR set to: 0
  2824                           ;mcc_generated_files/spi1.c: 88:         TRISBbits.TRISB6 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  2825  001F2C  5002               	movf	SPI1_Open@spi1UniqueConfiguration^(0+1280),w,c
  2826  001F2E  0D05               	mullw	5
  2827  001F30  0E04               	movlw	4
  2828  001F32  26F3               	addwf	243,f,c
  2829  001F34  0E00               	movlw	0
  2830  001F36  22F4               	addwfc	244,f,c
  2831  001F38  0E01               	movlw	low _spi1_configuration
  2832  001F3A  24F3               	addwf	243,w,c
  2833  001F3C  6EF6               	movwf	tblptrl,c
  2834  001F3E  0E16               	movlw	high _spi1_configuration
  2835  001F40  20F4               	addwfc	244,w,c
  2836  001F42  6EF7               	movwf	tblptrh,c
  2837  001F44                     	if	1	;There are 3 active tblptr bytes
  2838  001F44  6AF8               	clrf	tblptru,c
  2839  001F46  0E00               	movlw	low (__mediumconst shr (0+16))
  2840  001F48  22F8               	addwfc	tblptru,f,c
  2841  001F4A                     	endif
  2842  001F4A  0008               	tblrd		*
  2843  001F4C  0061 F3D4  F501    	movff	tablat,??_SPI1_Open
  2844  001F52  3A01               	swapf	??_SPI1_Open^(0+1280),f,c
  2845  001F54  4601               	rlncf	??_SPI1_Open^(0+1280),f,c
  2846  001F56  4601               	rlncf	??_SPI1_Open^(0+1280),f,c
  2847  001F58  50C7               	movf	199,w,c	;volatile
  2848  001F5A  1801               	xorwf	??_SPI1_Open^(0+1280),w,c
  2849  001F5C  0BBF               	andlw	-65
  2850  001F5E  1801               	xorwf	??_SPI1_Open^(0+1280),w,c
  2851  001F60  6EC7               	movwf	199,c	;volatile
  2852  001F62                     
  2853                           ; BSR set to: 0
  2854                           ;mcc_generated_files/spi1.c: 89:         SPI1CON0bits.EN = 1;
  2855  001F62  8F84               	bsf	132,7,b	;volatile
  2856  001F64                     l294:
  2857                           
  2858                           ; BSR set to: 0
  2859  001F64  0012               	return		;funcret
  2860  001F66                     __end_of_SPI1_Open:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _LOOPDELAY_Wait *****************
  2864 ;; Defined at:
  2865 ;;		line 17 in file "Loopdelay.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 4
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text14
  2894  00234E                     __ptext14:
  2895                           	callstack 0
  2896  00234E                     _LOOPDELAY_Wait:
  2897                           	callstack 123
  2898  00234E                     l1609:
  2899  00234E  503A               	movf	_loopTimeMS^(0+1280),w,c
  2900  002350  5C3C               	subwf	_loopTimeCnt^(0+1280),w,c	;volatile
  2901  002352  503B               	movf	(_loopTimeMS+1)^(0+1280),w,c
  2902  002354  583D               	subwfb	(_loopTimeCnt+1)^(0+1280),w,c	;volatile
  2903  002356  A0D8               	btfss	status,0,c
  2904  002358  EFB0  F011         	goto	u301
  2905  00235C  EFB2  F011         	goto	u300
  2906  002360                     u301:
  2907  002360  EFA7  F011         	goto	l1609
  2908  002364                     u300:
  2909  002364                     
  2910                           ;Loopdelay.c: 20:     loopTimeCnt = 0;
  2911  002364  0E00               	movlw	0
  2912  002366  6E3D               	movwf	(_loopTimeCnt+1)^(0+1280),c	;volatile
  2913  002368  0E00               	movlw	0
  2914  00236A  6E3C               	movwf	_loopTimeCnt^(0+1280),c	;volatile
  2915  00236C  0012               	return		;funcret
  2916  00236E                     __end_of_LOOPDELAY_Wait:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _LOOPDELAY_Init *****************
  2920 ;; Defined at:
  2921 ;;		line 23 in file "Loopdelay.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  newLoopTimeM    2    0[COMRAM] unsigned short 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		None
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2938 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2939 ;;Total ram usage:        2 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 4
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text15
  2950  002458                     __ptext15:
  2951                           	callstack 0
  2952  002458                     _LOOPDELAY_Init:
  2953                           	callstack 123
  2954  002458                     
  2955                           ;Loopdelay.c: 23: void LOOPDELAY_Init(uint16_t newLoopTimeMS);Loopdelay.c: 24: {;Loopdel
      +                          ay.c: 25:     loopTimeMS = newLoopTimeMS;
  2956  002458  C501  F53A         	movff	LOOPDELAY_Init@newLoopTimeMS,_loopTimeMS
  2957  00245C  C502  F53B         	movff	LOOPDELAY_Init@newLoopTimeMS+1,_loopTimeMS+1
  2958  002460  0012               	return		;funcret
  2959  002462                     __end_of_LOOPDELAY_Init:
  2960                           	callstack 0
  2961                           
  2962 ;; *************** function _LED_WriteFull *****************
  2963 ;; Defined at:
  2964 ;;		line 51 in file "DivFunctions.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  red             1    wreg     unsigned char 
  2967 ;;  green           1    6[COMRAM] unsigned char 
  2968 ;;  blue            1    7[COMRAM] unsigned char 
  2969 ;;  white           1    8[COMRAM] unsigned char 
  2970 ;;  ledcount        3    9[COMRAM] unsigned um
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  red             1   12[COMRAM] unsigned char 
  2973 ;;  i               3   13[COMRAM] unsigned um
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2983 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2984 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2986 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2987 ;;Total ram usage:       10 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; Hardware stack levels required when called: 8
  2990 ;; This function calls:
  2991 ;;		_WS2812B_Write
  2992 ;; This function is called by:
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text16
  2998  002232                     __ptext16:
  2999                           	callstack 0
  3000  002232                     _LED_WriteFull:
  3001                           	callstack 119
  3002                           
  3003                           ;incstack = 0
  3004                           ;LED_WriteFull@red stored from wreg
  3005  002232  6E0D               	movwf	LED_WriteFull@red^(0+1280),c
  3006  002234                     
  3007                           ;DivFunctions.c: 51: void LED_WriteFull(uint8_t red, uint8_t green, uint8_t blue, uint8_
      +                          t white, uint24_t ledcount);DivFunctions.c: 52: {;DivFunctions.c: 53:     for(uint24_t i
      +                          =0; i <= ledcount; i++)
  3008  002234  0E00               	movlw	0
  3009  002236  6E0E               	movwf	LED_WriteFull@i^(0+1280),c
  3010  002238  0E00               	movlw	0
  3011  00223A  6E0F               	movwf	(LED_WriteFull@i+1)^(0+1280),c
  3012  00223C  0E00               	movlw	0
  3013  00223E  6E10               	movwf	(LED_WriteFull@i+2)^(0+1280),c
  3014  002240  EF31  F011         	goto	l2183
  3015  002244                     l2179:
  3016                           
  3017                           ;DivFunctions.c: 54:     {;DivFunctions.c: 55:         WS2812B_Write(red, green, blue, w
      +                          hite);
  3018  002244  C507  F503         	movff	LED_WriteFull@green,WS2812B_Write@G
  3019  002248  C508  F504         	movff	LED_WriteFull@blue,WS2812B_Write@B
  3020  00224C  C509  F505         	movff	LED_WriteFull@white,WS2812B_Write@W
  3021  002250  500D               	movf	LED_WriteFull@red^(0+1280),w,c
  3022  002252  ECFF  F011         	call	_WS2812B_Write
  3023  002256                     
  3024                           ;DivFunctions.c: 56:     }
  3025  002256  0E01               	movlw	1
  3026  002258  260E               	addwf	LED_WriteFull@i^(0+1280),f,c
  3027  00225A  0E00               	movlw	0
  3028  00225C  220F               	addwfc	(LED_WriteFull@i+1)^(0+1280),f,c
  3029  00225E  0E00               	movlw	0
  3030  002260  2210               	addwfc	(LED_WriteFull@i+2)^(0+1280),f,c
  3031  002262                     l2183:
  3032  002262  500E               	movf	LED_WriteFull@i^(0+1280),w,c
  3033  002264  5C0A               	subwf	LED_WriteFull@ledcount^(0+1280),w,c
  3034  002266  500F               	movf	(LED_WriteFull@i+1)^(0+1280),w,c
  3035  002268  580B               	subwfb	(LED_WriteFull@ledcount+1)^(0+1280),w,c
  3036  00226A  5010               	movf	(LED_WriteFull@i+2)^(0+1280),w,c
  3037  00226C  580C               	subwfb	(LED_WriteFull@ledcount+2)^(0+1280),w,c
  3038  00226E  B0D8               	btfsc	status,0,c
  3039  002270  EF3C  F011         	goto	u821
  3040  002274  EF3E  F011         	goto	u820
  3041  002278                     u821:
  3042  002278  EF22  F011         	goto	l2179
  3043  00227C                     u820:
  3044  00227C  0012               	return		;funcret
  3045  00227E                     __end_of_LED_WriteFull:
  3046                           	callstack 0
  3047                           
  3048 ;; *************** function _WS2812B_Write *****************
  3049 ;; Defined at:
  3050 ;;		line 3 in file "DivFunctions.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  R               1    wreg     unsigned char 
  3053 ;;  G               1    2[COMRAM] unsigned char 
  3054 ;;  B               1    3[COMRAM] unsigned char 
  3055 ;;  W               1    4[COMRAM] unsigned char 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  R               1    5[COMRAM] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3067 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3070 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3071 ;;Total ram usage:        4 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 7
  3074 ;; This function calls:
  3075 ;;		_ws_send_byte
  3076 ;; This function is called by:
  3077 ;;		_LED_WriteFull
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text17
  3082  0023FE                     __ptext17:
  3083                           	callstack 0
  3084  0023FE                     _WS2812B_Write:
  3085                           	callstack 119
  3086                           
  3087                           ;incstack = 0
  3088                           ;WS2812B_Write@R stored from wreg
  3089  0023FE  6E06               	movwf	WS2812B_Write@R^(0+1280),c
  3090  002400                     
  3091                           ;DivFunctions.c: 3: void WS2812B_Write(uint8_t R, uint8_t G, uint8_t B, uint8_t W);DivFu
      +                          nctions.c: 4: {;DivFunctions.c: 5:     ws_send_byte(G);
  3092  002400  5003               	movf	WS2812B_Write@G^(0+1280),w,c
  3093  002402  ECB3  F00F         	call	_ws_send_byte
  3094                           
  3095                           ;DivFunctions.c: 6:     ws_send_byte(R);
  3096  002406  5006               	movf	WS2812B_Write@R^(0+1280),w,c
  3097  002408  ECB3  F00F         	call	_ws_send_byte
  3098                           
  3099                           ;DivFunctions.c: 7:     ws_send_byte(B);
  3100  00240C  5004               	movf	WS2812B_Write@B^(0+1280),w,c
  3101  00240E  ECB3  F00F         	call	_ws_send_byte
  3102                           
  3103                           ;DivFunctions.c: 8:     ws_send_byte(W);
  3104  002412  5005               	movf	WS2812B_Write@W^(0+1280),w,c
  3105  002414  ECB3  F00F         	call	_ws_send_byte
  3106  002418  0012               	return		;funcret
  3107  00241A                     __end_of_WS2812B_Write:
  3108                           	callstack 0
  3109                           
  3110 ;; *************** function _ws_send_byte *****************
  3111 ;; Defined at:
  3112 ;;		line 24 in file "DivFunctions.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  K               1    wreg     unsigned char 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  K               1    1[COMRAM] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3130 ;;Total ram usage:        1 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; Hardware stack levels required when called: 6
  3133 ;; This function calls:
  3134 ;;		_onePulse
  3135 ;;		_zeroPulse
  3136 ;; This function is called by:
  3137 ;;		_WS2812B_Write
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text18
  3142  001F66                     __ptext18:
  3143                           	callstack 0
  3144  001F66                     _ws_send_byte:
  3145                           	callstack 119
  3146                           
  3147                           ;incstack = 0
  3148                           ;ws_send_byte@K stored from wreg
  3149  001F66  6E02               	movwf	ws_send_byte@K^(0+1280),c
  3150  001F68                     
  3151                           ;DivFunctions.c: 24: void ws_send_byte(uint8_t K);DivFunctions.c: 25: {;DivFunctions.c: 
      +                          26:     if(K & 0b10000000) {onePulse();}
  3152  001F68  AE02               	btfss	ws_send_byte@K^(0+1280),7,c
  3153  001F6A  EFB9  F00F         	goto	u21
  3154  001F6E  EFBB  F00F         	goto	u20
  3155  001F72                     u21:
  3156  001F72  EFBF  F00F         	goto	l1331
  3157  001F76                     u20:
  3158  001F76  EC35  F012         	call	_onePulse	;wreg free
  3159  001F7A  EFC1  F00F         	goto	l1333
  3160  001F7E                     l1331:
  3161  001F7E  EC31  F012         	call	_zeroPulse	;wreg free
  3162  001F82                     l1333:
  3163                           
  3164                           ;DivFunctions.c: 29:     if(K & 0b01000000) {onePulse();}
  3165  001F82  AC02               	btfss	ws_send_byte@K^(0+1280),6,c
  3166  001F84  EFC6  F00F         	goto	u31
  3167  001F88  EFC8  F00F         	goto	u30
  3168  001F8C                     u31:
  3169  001F8C  EFCC  F00F         	goto	l1337
  3170  001F90                     u30:
  3171  001F90  EC35  F012         	call	_onePulse	;wreg free
  3172  001F94  EFCE  F00F         	goto	l1339
  3173  001F98                     l1337:
  3174  001F98  EC31  F012         	call	_zeroPulse	;wreg free
  3175  001F9C                     l1339:
  3176                           
  3177                           ;DivFunctions.c: 32:     if(K & 0b00100000) {onePulse();}
  3178  001F9C  AA02               	btfss	ws_send_byte@K^(0+1280),5,c
  3179  001F9E  EFD3  F00F         	goto	u41
  3180  001FA2  EFD5  F00F         	goto	u40
  3181  001FA6                     u41:
  3182  001FA6  EFD9  F00F         	goto	l1343
  3183  001FAA                     u40:
  3184  001FAA  EC35  F012         	call	_onePulse	;wreg free
  3185  001FAE  EFDB  F00F         	goto	l1345
  3186  001FB2                     l1343:
  3187  001FB2  EC31  F012         	call	_zeroPulse	;wreg free
  3188  001FB6                     l1345:
  3189                           
  3190                           ;DivFunctions.c: 35:     if(K & 0b00010000) {onePulse();}
  3191  001FB6  A802               	btfss	ws_send_byte@K^(0+1280),4,c
  3192  001FB8  EFE0  F00F         	goto	u51
  3193  001FBC  EFE2  F00F         	goto	u50
  3194  001FC0                     u51:
  3195  001FC0  EFE6  F00F         	goto	l1349
  3196  001FC4                     u50:
  3197  001FC4  EC35  F012         	call	_onePulse	;wreg free
  3198  001FC8  EFE8  F00F         	goto	l1351
  3199  001FCC                     l1349:
  3200  001FCC  EC31  F012         	call	_zeroPulse	;wreg free
  3201  001FD0                     l1351:
  3202                           
  3203                           ;DivFunctions.c: 38:     if(K & 0b00001000) {onePulse();}
  3204  001FD0  A602               	btfss	ws_send_byte@K^(0+1280),3,c
  3205  001FD2  EFED  F00F         	goto	u61
  3206  001FD6  EFEF  F00F         	goto	u60
  3207  001FDA                     u61:
  3208  001FDA  EFF3  F00F         	goto	l1355
  3209  001FDE                     u60:
  3210  001FDE  EC35  F012         	call	_onePulse	;wreg free
  3211  001FE2  EFF5  F00F         	goto	l1357
  3212  001FE6                     l1355:
  3213  001FE6  EC31  F012         	call	_zeroPulse	;wreg free
  3214  001FEA                     l1357:
  3215                           
  3216                           ;DivFunctions.c: 41:     if(K & 0b00000100) {onePulse();}
  3217  001FEA  A402               	btfss	ws_send_byte@K^(0+1280),2,c
  3218  001FEC  EFFA  F00F         	goto	u71
  3219  001FF0  EFFC  F00F         	goto	u70
  3220  001FF4                     u71:
  3221  001FF4  EF00  F010         	goto	l1361
  3222  001FF8                     u70:
  3223  001FF8  EC35  F012         	call	_onePulse	;wreg free
  3224  001FFC  EF02  F010         	goto	l1363
  3225  002000                     l1361:
  3226  002000  EC31  F012         	call	_zeroPulse	;wreg free
  3227  002004                     l1363:
  3228                           
  3229                           ;DivFunctions.c: 44:     if(K & 0b00000010) {onePulse();}
  3230  002004  A202               	btfss	ws_send_byte@K^(0+1280),1,c
  3231  002006  EF07  F010         	goto	u81
  3232  00200A  EF09  F010         	goto	u80
  3233  00200E                     u81:
  3234  00200E  EF0D  F010         	goto	l1367
  3235  002012                     u80:
  3236  002012  EC35  F012         	call	_onePulse	;wreg free
  3237  002016  EF0F  F010         	goto	l1369
  3238  00201A                     l1367:
  3239  00201A  EC31  F012         	call	_zeroPulse	;wreg free
  3240  00201E                     l1369:
  3241                           
  3242                           ;DivFunctions.c: 47:     if(K & 0b00000001) {onePulse();}
  3243  00201E  A002               	btfss	ws_send_byte@K^(0+1280),0,c
  3244  002020  EF14  F010         	goto	u91
  3245  002024  EF16  F010         	goto	u90
  3246  002028                     u91:
  3247  002028  EF1A  F010         	goto	l1373
  3248  00202C                     u90:
  3249  00202C  EC35  F012         	call	_onePulse	;wreg free
  3250  002030  EF1C  F010         	goto	l618
  3251  002034                     l1373:
  3252  002034  EC31  F012         	call	_zeroPulse	;wreg free
  3253  002038                     l618:
  3254  002038  0012               	return		;funcret
  3255  00203A                     __end_of_ws_send_byte:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _zeroPulse *****************
  3259 ;; Defined at:
  3260 ;;		line 20 in file "DivFunctions.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 5
  3281 ;; This function calls:
  3282 ;;		_SPI1_ExchangeByte
  3283 ;; This function is called by:
  3284 ;;		_ws_send_byte
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text19
  3289  002462                     __ptext19:
  3290                           	callstack 0
  3291  002462                     _zeroPulse:
  3292                           	callstack 119
  3293  002462                     
  3294                           ;DivFunctions.c: 22:     SPI1_ExchangeByte(0xC0);
  3295  002462  0EC0               	movlw	192
  3296  002464  EC85  F011         	call	_SPI1_ExchangeByte
  3297  002468  0012               	return		;funcret
  3298  00246A                     __end_of_zeroPulse:
  3299                           	callstack 0
  3300                           
  3301 ;; *************** function _onePulse *****************
  3302 ;; Defined at:
  3303 ;;		line 15 in file "DivFunctions.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3321 ;;Total ram usage:        0 bytes
  3322 ;; Hardware stack levels used: 1
  3323 ;; Hardware stack levels required when called: 5
  3324 ;; This function calls:
  3325 ;;		_SPI1_ExchangeByte
  3326 ;; This function is called by:
  3327 ;;		_ws_send_byte
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text20
  3332  00246A                     __ptext20:
  3333                           	callstack 0
  3334  00246A                     _onePulse:
  3335                           	callstack 119
  3336  00246A                     
  3337                           ;DivFunctions.c: 17:     SPI1_ExchangeByte(0xF0);
  3338  00246A  0EF0               	movlw	240
  3339  00246C  EC85  F011         	call	_SPI1_ExchangeByte
  3340  002470  0012               	return		;funcret
  3341  002472                     __end_of_onePulse:
  3342                           	callstack 0
  3343                           
  3344 ;; *************** function _SPI1_ExchangeByte *****************
  3345 ;; Defined at:
  3346 ;;		line 100 in file "mcc_generated_files/spi1.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  data            1    wreg     unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  data            1    0[COMRAM] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      unsigned char 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3364 ;;Total ram usage:        1 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 4
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_onePulse
  3371 ;;		_zeroPulse
  3372 ;;		_SPI1_WriteBlock
  3373 ;;		_SPI1_ReadBlock
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text21
  3378  00230A                     __ptext21:
  3379                           	callstack 0
  3380  00230A                     _SPI1_ExchangeByte:
  3381                           	callstack 119
  3382                           
  3383                           ;incstack = 0
  3384                           ;SPI1_ExchangeByte@data stored from wreg
  3385  00230A  6E01               	movwf	SPI1_ExchangeByte@data^(0+1280),c
  3386  00230C                     
  3387                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
  3388  00230C  0E01               	movlw	1
  3389  00230E  0100               	movlb	0	; () banked
  3390  002310  6F82               	movwf	130,b	;volatile
  3391  002312                     
  3392                           ; BSR set to: 0
  3393                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
  3394  002312  0061  F404  F081   	movff	SPI1_ExchangeByte@data,129	;volatile
  3395  002318                     l300:
  3396  002318  A0B6               	btfss	182,0,c	;volatile
  3397  00231A  EF91  F011         	goto	u11
  3398  00231E  EF93  F011         	goto	u10
  3399  002322                     u11:
  3400  002322  EF8C  F011         	goto	l300
  3401  002326                     u10:
  3402  002326                     
  3403                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
  3404  002326  0100               	movlb	0	; () banked
  3405  002328  5180               	movf	128,w,b	;volatile
  3406  00232A                     
  3407                           ; BSR set to: 0
  3408  00232A  0012               	return		;funcret
  3409  00232C                     __end_of_SPI1_ExchangeByte:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _DATAEE_WriteByte *****************
  3413 ;; Defined at:
  3414 ;;		line 231 in file "mcc_generated_files/memory.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  bAdd            2    0[COMRAM] unsigned short 
  3417 ;;  bData           1    2[COMRAM] unsigned char 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  GIEBitValue     1    3[COMRAM] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3429 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3432 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3433 ;;Total ram usage:        4 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 4
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_main
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text22
  3444  0021E0                     __ptext22:
  3445                           	callstack 0
  3446  0021E0                     _DATAEE_WriteByte:
  3447                           	callstack 123
  3448  0021E0                     
  3449                           ;mcc_generated_files/memory.c: 231: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 232: {;mcc_generated_files/memory.c: 233:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
  3450  0021E0  0E00               	movlw	0
  3451  0021E2  BED6               	btfsc	214,7,c	;volatile
  3452  0021E4  0E01               	movlw	1
  3453  0021E6  6E04               	movwf	DATAEE_WriteByte@GIEBitValue^(0+1280),c
  3454  0021E8                     
  3455                           ;mcc_generated_files/memory.c: 236:     NVMADRU = 0x38;
  3456  0021E8  0E38               	movlw	56
  3457  0021EA  0100               	movlb	0	; () banked
  3458  0021EC  6F45               	movwf	69,b	;volatile
  3459  0021EE                     
  3460                           ; BSR set to: 0
  3461                           ;mcc_generated_files/memory.c: 237:     NVMADRH = (uint8_t) ((bAdd & 0xFF00) >> 8);
  3462  0021EE  5002               	movf	(DATAEE_WriteByte@bAdd+1)^(0+1280),w,c
  3463  0021F0  6F44               	movwf	68,b	;volatile
  3464  0021F2                     
  3465                           ; BSR set to: 0
  3466                           ;mcc_generated_files/memory.c: 238:     NVMADRL = (uint8_t) (bAdd & 0x00FF);
  3467  0021F2  0061  F404  F043   	movff	DATAEE_WriteByte@bAdd,67	;volatile
  3468  0021F8                     
  3469                           ; BSR set to: 0
  3470                           ;mcc_generated_files/memory.c: 241:     NVMDATL = bData;
  3471  0021F8  0061  F40C  F046   	movff	DATAEE_WriteByte@bData,70	;volatile
  3472  0021FE                     
  3473                           ; BSR set to: 0
  3474                           ;mcc_generated_files/memory.c: 244:     NVMCON1bits.NVMCMD = 0b011;
  3475  0021FE  5141               	movf	65,w,b	;volsfr
  3476  002200  0BF8               	andlw	-8
  3477  002202  0903               	iorlw	3
  3478  002204  6F41               	movwf	65,b	;volsfr
  3479  002206                     
  3480                           ; BSR set to: 0
  3481                           ;mcc_generated_files/memory.c: 247:     INTCON0bits.GIE = 0;
  3482  002206  9ED6               	bcf	214,7,c	;volatile
  3483  002208                     
  3484                           ; BSR set to: 0
  3485                           ;mcc_generated_files/memory.c: 250:     NVMLOCK = 0x55;
  3486  002208  0E55               	movlw	85
  3487  00220A  6F42               	movwf	66,b	;volatile
  3488  00220C                     
  3489                           ; BSR set to: 0
  3490                           ;mcc_generated_files/memory.c: 251:     NVMLOCK = 0xAA;
  3491  00220C  0EAA               	movlw	170
  3492  00220E  6F42               	movwf	66,b	;volatile
  3493  002210                     
  3494                           ; BSR set to: 0
  3495                           ;mcc_generated_files/memory.c: 254:     NVMCON0bits.GO = 1;
  3496  002210  8140               	bsf	64,0,b	;volatile
  3497  002212                     l396:
  3498                           
  3499                           ; BSR set to: 0
  3500  002212  B140               	btfsc	64,0,b	;volatile
  3501  002214  EF0E  F011         	goto	u801
  3502  002218  EF10  F011         	goto	u800
  3503  00221C                     u801:
  3504  00221C  EF09  F011         	goto	l396
  3505  002220                     u800:
  3506  002220                     
  3507                           ; BSR set to: 0
  3508                           ;mcc_generated_files/memory.c: 258:     INTCON0bits.GIE = GIEBitValue;
  3509  002220  B004               	btfsc	DATAEE_WriteByte@GIEBitValue^(0+1280),0,c
  3510  002222  D002               	bra	u815
  3511  002224  9ED6               	bcf	214,7,c	;volatile
  3512  002226  D001               	bra	u816
  3513  002228                     u815:
  3514  002228  8ED6               	bsf	214,7,c	;volatile
  3515  00222A                     u816:
  3516  00222A                     
  3517                           ;mcc_generated_files/memory.c: 261:     NVMCON1bits.NVMCMD = 0b000;
  3518  00222A  0EF8               	movlw	-8
  3519  00222C  0100               	movlb	0	; () banked
  3520  00222E  1741               	andwf	65,f,b	;volsfr
  3521  002230                     
  3522                           ; BSR set to: 0
  3523  002230  0012               	return		;funcret
  3524  002232                     __end_of_DATAEE_WriteByte:
  3525                           	callstack 0
  3526                           
  3527 ;; *************** function _DATAEE_ReadByte *****************
  3528 ;; Defined at:
  3529 ;;		line 264 in file "mcc_generated_files/memory.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  bAdd            2    0[COMRAM] unsigned short 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      unsigned char 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3547 ;;Total ram usage:        2 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; Hardware stack levels required when called: 4
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text23
  3558  002434                     __ptext23:
  3559                           	callstack 0
  3560  002434                     _DATAEE_ReadByte:
  3561                           	callstack 123
  3562  002434                     
  3563                           ;mcc_generated_files/memory.c: 264: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 265: {;mcc_generated_files/memory.c: 267:     NVMADRU = 0x38;
  3564  002434  0E38               	movlw	56
  3565  002436  0100               	movlb	0	; () banked
  3566  002438  6F45               	movwf	69,b	;volatile
  3567                           
  3568                           ;mcc_generated_files/memory.c: 268:     NVMADRH = (uint8_t) ((bAdd & 0xFF00) >> 8);
  3569  00243A  5002               	movf	(DATAEE_ReadByte@bAdd+1)^(0+1280),w,c
  3570  00243C  6F44               	movwf	68,b	;volatile
  3571  00243E                     
  3572                           ; BSR set to: 0
  3573                           ;mcc_generated_files/memory.c: 269:     NVMADRL = (uint8_t) (bAdd & 0x00FF);
  3574  00243E  0061  F404  F043   	movff	DATAEE_ReadByte@bAdd,67	;volatile
  3575                           
  3576                           ;mcc_generated_files/memory.c: 272:     NVMCON1bits.NVMCMD = 0b000;
  3577  002444  0EF8               	movlw	-8
  3578  002446  1741               	andwf	65,f,b	;volsfr
  3579  002448                     
  3580                           ; BSR set to: 0
  3581                           ;mcc_generated_files/memory.c: 273:     NVMCON0bits.GO = 1;
  3582  002448  8140               	bsf	64,0,b	;volatile
  3583                           
  3584                           ;mcc_generated_files/memory.c: 275:     return NVMDATL;
  3585  00244A  5146               	movf	70,w,b	;volatile
  3586  00244C                     
  3587                           ; BSR set to: 0
  3588  00244C  0012               	return		;funcret
  3589  00244E                     __end_of_DATAEE_ReadByte:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _ADCC_GetSingleConversion *****************
  3593 ;; Defined at:
  3594 ;;		line 137 in file "mcc_generated_files/adcc.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  channel         1    wreg     enum E12909
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  channel         1    4[COMRAM] enum E12909
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  2    0[COMRAM] unsigned short 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3611 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3612 ;;Total ram usage:        5 bytes
  3613 ;; Hardware stack levels used: 1
  3614 ;; Hardware stack levels required when called: 4
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text24
  3623  00227E                     __ptext24:
  3624                           	callstack 0
  3625  00227E                     _ADCC_GetSingleConversion:
  3626                           	callstack 123
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;incstack = 0
  3630                           ;ADCC_GetSingleConversion@channel stored from wreg
  3631  00227E  6E05               	movwf	ADCC_GetSingleConversion@channel^(0+1280),c
  3632  002280                     
  3633                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  3634  002280  0061  F414  F3EC   	movff	ADCC_GetSingleConversion@channel,1004	;volatile
  3635  002286                     
  3636                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  3637  002286  0103               	movlb	3	; () banked
  3638  002288  8FF3               	bsf	243,7,b	;volatile
  3639  00228A                     
  3640                           ; BSR set to: 3
  3641                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  3642  00228A  9DF3               	bcf	243,6,b	;volatile
  3643  00228C                     
  3644                           ; BSR set to: 3
  3645                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  3646  00228C  81F3               	bsf	243,0,b	;volatile
  3647  00228E                     l147:
  3648                           
  3649                           ; BSR set to: 3
  3650                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  3651  00228E  B1F3               	btfsc	243,0,b	;volatile
  3652  002290  EF4C  F011         	goto	u791
  3653  002294  EF4E  F011         	goto	u790
  3654  002298                     u791:
  3655  002298  EF47  F011         	goto	l147
  3656  00229C                     u790:
  3657  00229C                     
  3658                           ; BSR set to: 3
  3659                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3660  00229C  51EB               	movf	235,w,b	;volatile
  3661  00229E  6E04               	movwf	(??_ADCC_GetSingleConversion+1)^(0+1280),c
  3662  0022A0  6A03               	clrf	??_ADCC_GetSingleConversion^(0+1280),c
  3663  0022A2  51EA               	movf	234,w,b	;volatile
  3664  0022A4  2403               	addwf	??_ADCC_GetSingleConversion^(0+1280),w,c
  3665  0022A6  6E01               	movwf	?_ADCC_GetSingleConversion^(0+1280),c
  3666  0022A8  0E00               	movlw	0
  3667  0022AA  2004               	addwfc	(??_ADCC_GetSingleConversion+1)^(0+1280),w,c
  3668  0022AC  6E02               	movwf	(?_ADCC_GetSingleConversion+1)^(0+1280),c
  3669  0022AE                     
  3670                           ; BSR set to: 3
  3671  0022AE  0012               	return		;funcret
  3672  0022B0                     __end_of_ADCC_GetSingleConversion:
  3673                           	callstack 0
  3674                           
  3675 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3676 ;; Defined at:
  3677 ;;		line 174 in file "mcc_generated_files/adcc.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;		None
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;		None
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      void 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3695 ;;Total ram usage:        0 bytes
  3696 ;; Hardware stack levels used: 1
  3697 ;; Hardware stack levels required when called: 4
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_main
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text25
  3706  002472                     __ptext25:
  3707                           	callstack 0
  3708  002472                     _ADCC_DischargeSampleCapacitor:
  3709                           	callstack 123
  3710  002472                     
  3711                           ;mcc_generated_files/adcc.c: 177:     ADPCH = 0x3b;
  3712  002472  0E3B               	movlw	59
  3713  002474  0103               	movlb	3	; () banked
  3714  002476  6FEC               	movwf	236,b	;volatile
  3715  002478                     
  3716                           ; BSR set to: 3
  3717  002478  0012               	return		;funcret
  3718  00247A                     __end_of_ADCC_DischargeSampleCapacitor:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _INTERRUPT_InterruptManager *****************
  3722 ;; Defined at:
  3723 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3741 ;;Total ram usage:        0 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; Hardware stack levels required when called: 3
  3744 ;; This function calls:
  3745 ;;		_TMR2_ISR
  3746 ;; This function is called by:
  3747 ;;		Interrupt level 2
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text26
  3752  00232C                     __ptext26:
  3753                           	callstack 0
  3754  00232C                     _INTERRUPT_InterruptManager:
  3755                           	callstack 119
  3756  00232C                     
  3757                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE3bits.TMR2IE == 1 && PIR3bits.TM
      +                          R2IF == 1)
  3758  00232C  A6AB               	btfss	171,3,c	;volatile
  3759  00232E  EF9B  F011         	goto	i2u39_41
  3760  002332  EF9D  F011         	goto	i2u39_40
  3761  002336                     i2u39_41:
  3762  002336  EFA6  F011         	goto	i2l423
  3763  00233A                     i2u39_40:
  3764  00233A  A6B6               	btfss	182,3,c	;volatile
  3765  00233C  EFA2  F011         	goto	i2u40_41
  3766  002340  EFA4  F011         	goto	i2u40_40
  3767  002344                     i2u40_41:
  3768  002344  EFA6  F011         	goto	i2l423
  3769  002348                     i2u40_40:
  3770  002348                     
  3771                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR2_ISR();
  3772  002348  EC3D  F012         	call	_TMR2_ISR	;wreg free
  3773  00234C                     i2l423:
  3774  00234C  0011               	retfie		f
  3775  00234E                     __end_of_INTERRUPT_InterruptManager:
  3776                           	callstack 0
  3777                           
  3778 ;; *************** function _TMR2_ISR *****************
  3779 ;; Defined at:
  3780 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used: 1
  3800 ;; Hardware stack levels required when called: 2
  3801 ;; This function calls:
  3802 ;;		_TMR2_CallBack
  3803 ;; This function is called by:
  3804 ;;		_INTERRUPT_InterruptManager
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text27
  3809  00247A                     __ptext27:
  3810                           	callstack 0
  3811  00247A                     _TMR2_ISR:
  3812                           	callstack 119
  3813  00247A                     
  3814                           ;mcc_generated_files/tmr2.c: 169:     PIR3bits.TMR2IF = 0;
  3815  00247A  96B6               	bcf	182,3,c	;volatile
  3816  00247C                     
  3817                           ;mcc_generated_files/tmr2.c: 173:     TMR2_CallBack();
  3818  00247C  EC6F  F011         	call	_TMR2_CallBack	;wreg free
  3819  002480  0012               	return		;funcret
  3820  002482                     __end_of_TMR2_ISR:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function _TMR2_CallBack *****************
  3824 ;; Defined at:
  3825 ;;		line 176 in file "mcc_generated_files/tmr2.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3843 ;;Total ram usage:        0 bytes
  3844 ;; Hardware stack levels used: 1
  3845 ;; Hardware stack levels required when called: 1
  3846 ;; This function calls:
  3847 ;;		Absolute function
  3848 ;;		_LOOPDELAY_TimerISR
  3849 ;;		_TMR2_DefaultInterruptHandler
  3850 ;; This function is called by:
  3851 ;;		_TMR2_ISR
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text28
  3856  0022DE                     __ptext28:
  3857                           	callstack 0
  3858  0022DE                     _TMR2_CallBack:
  3859                           	callstack 119
  3860  0022DE                     
  3861                           ;mcc_generated_files/tmr2.c: 180:     if(TMR2_InterruptHandler)
  3862  0022DE  503E               	movf	_TMR2_InterruptHandler^(0+1280),w,c
  3863  0022E0  103F               	iorwf	(_TMR2_InterruptHandler+1)^(0+1280),w,c
  3864  0022E2  B4D8               	btfsc	status,2,c
  3865  0022E4  EF76  F011         	goto	i2u11_41
  3866  0022E8  EF78  F011         	goto	i2u11_40
  3867  0022EC                     i2u11_41:
  3868  0022EC  EF84  F011         	goto	i2l503
  3869  0022F0                     i2u11_40:
  3870  0022F0                     
  3871                           ;mcc_generated_files/tmr2.c: 181:     {;mcc_generated_files/tmr2.c: 182:         TMR2_In
      +                          terruptHandler();
  3872  0022F0  D802               	call	i2u12_48
  3873  0022F2  EF84  F011         	goto	i2u12_49
  3874  0022F6                     i2u12_48:
  3875  0022F6  0005               	push	
  3876  0022F8  6EFA               	movwf	pclath,c
  3877  0022FA  503E               	movf	_TMR2_InterruptHandler^(0+1280),w,c
  3878  0022FC  6EFD               	movwf	tosl,c
  3879  0022FE  503F               	movf	(_TMR2_InterruptHandler+1)^(0+1280),w,c
  3880  002300  6EFE               	movwf	tosh,c
  3881  002302  6AFF               	clrf	tosu,c
  3882  002304  50FA               	movf	pclath,w,c
  3883  002306  0012               	return		;indir
  3884  002308                     i2u12_49:
  3885  002308                     i2l503:
  3886  002308  0012               	return		;funcret
  3887  00230A                     __end_of_TMR2_CallBack:
  3888                           	callstack 0
  3889                           
  3890 ;; *************** function _LOOPDELAY_TimerISR *****************
  3891 ;; Defined at:
  3892 ;;		line 9 in file "Loopdelay.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;		None
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3910 ;;Total ram usage:        0 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_main
  3916 ;;		_TMR2_CallBack
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text29
  3921  00238C                     __ptext29:
  3922                           	callstack 0
  3923  00238C                     _LOOPDELAY_TimerISR:
  3924                           	callstack 119
  3925  00238C                     
  3926                           ;Loopdelay.c: 11:     if(loopTimeCnt != 10000)
  3927  00238C  0E10               	movlw	16
  3928  00238E  183C               	xorwf	_loopTimeCnt^(0+1280),w,c	;volatile
  3929  002390  E109               	bnz	i2u10_40
  3930  002392  0E27               	movlw	39
  3931  002394  183D               	xorwf	(_loopTimeCnt+1)^(0+1280),w,c	;volatile
  3932  002396  B4D8               	btfsc	status,2,c
  3933  002398  EFD0  F011         	goto	i2u10_41
  3934  00239C  EFD2  F011         	goto	i2u10_40
  3935  0023A0                     i2u10_41:
  3936  0023A0  EFD4  F011         	goto	i2l632
  3937  0023A4                     i2u10_40:
  3938  0023A4                     
  3939                           ;Loopdelay.c: 12:     {;Loopdelay.c: 13:         loopTimeCnt += 1;
  3940  0023A4  4A3C               	infsnz	_loopTimeCnt^(0+1280),f,c	;volatile
  3941  0023A6  2A3D               	incf	(_loopTimeCnt+1)^(0+1280),f,c	;volatile
  3942  0023A8                     i2l632:
  3943  0023A8  0012               	return		;funcret
  3944  0023AA                     __end_of_LOOPDELAY_TimerISR:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  3948 ;; Defined at:
  3949 ;;		line 190 in file "mcc_generated_files/tmr2.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		None
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  3963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3967 ;;Total ram usage:        0 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_TMR2_Initialize
  3973 ;;		_TMR2_CallBack
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text30
  3978  002486                     __ptext30:
  3979                           	callstack 0
  3980  002486                     _TMR2_DefaultInterruptHandler:
  3981                           	callstack 119
  3982  002486  0012               	return		;funcret
  3983  002488                     __end_of_TMR2_DefaultInterruptHandler:
  3984                           	callstack 0
  3985                           
  3986                           ;
  3987                           ; Interrupt Vector Table @ 0x8
  3988                           ;
  3989                           
  3990                           	psect	ivt0x8
  3991  000008                     __pivt0x8:
  3992                           	callstack 0
  3993  000008                     ivt0x8_base:
  3994                           	callstack 0
  3995                           
  3996                           ; high-priority vector
  3997  000008  EF96  F011         	goto	_INTERRUPT_InterruptManager
  3998  000018                     	org	16
  3999                           
  4000                           ; low-priority vector
  4001  000018  00FF               	reset	
  4002                           
  4003                           	psect	text31
  4004  000000                     __ptext31:
  4005                           	callstack 0
  4006  000000                     
  4007                           	psect	rparam
  4008  0000                     
  4009                           	psect	idloc
  4010                           
  4011                           ;Config register IDLOC0 @ 0x200000
  4012                           ;	unspecified, using default values
  4013  200000                     	org	2097152
  4014  200000  0FFF               	dw	4095
  4015                           
  4016                           ;Config register IDLOC1 @ 0x200002
  4017                           ;	unspecified, using default values
  4018  200002                     	org	2097154
  4019  200002  0FFF               	dw	4095
  4020                           
  4021                           ;Config register IDLOC2 @ 0x200004
  4022                           ;	unspecified, using default values
  4023  200004                     	org	2097156
  4024  200004  0FFF               	dw	4095
  4025                           
  4026                           ;Config register IDLOC3 @ 0x200006
  4027                           ;	unspecified, using default values
  4028  200006                     	org	2097158
  4029  200006  0FFF               	dw	4095
  4030                           
  4031                           ;Config register IDLOC4 @ 0x200008
  4032                           ;	unspecified, using default values
  4033  200008                     	org	2097160
  4034  200008  0FFF               	dw	4095
  4035                           
  4036                           ;Config register IDLOC5 @ 0x20000A
  4037                           ;	unspecified, using default values
  4038  20000A                     	org	2097162
  4039  20000A  0FFF               	dw	4095
  4040                           
  4041                           ;Config register IDLOC6 @ 0x20000C
  4042                           ;	unspecified, using default values
  4043  20000C                     	org	2097164
  4044  20000C  0FFF               	dw	4095
  4045                           
  4046                           ;Config register IDLOC7 @ 0x20000E
  4047                           ;	unspecified, using default values
  4048  20000E                     	org	2097166
  4049  20000E  0FFF               	dw	4095
  4050                           
  4051                           ;Config register IDLOC8 @ 0x200010
  4052                           ;	unspecified, using default values
  4053  200010                     	org	2097168
  4054  200010  0FFF               	dw	4095
  4055                           
  4056                           ;Config register IDLOC9 @ 0x200012
  4057                           ;	unspecified, using default values
  4058  200012                     	org	2097170
  4059  200012  0FFF               	dw	4095
  4060                           
  4061                           ;Config register IDLOC10 @ 0x200014
  4062                           ;	unspecified, using default values
  4063  200014                     	org	2097172
  4064  200014  0FFF               	dw	4095
  4065                           
  4066                           ;Config register IDLOC11 @ 0x200016
  4067                           ;	unspecified, using default values
  4068  200016                     	org	2097174
  4069  200016  0FFF               	dw	4095
  4070                           
  4071                           ;Config register IDLOC12 @ 0x200018
  4072                           ;	unspecified, using default values
  4073  200018                     	org	2097176
  4074  200018  0FFF               	dw	4095
  4075                           
  4076                           ;Config register IDLOC13 @ 0x20001A
  4077                           ;	unspecified, using default values
  4078  20001A                     	org	2097178
  4079  20001A  0FFF               	dw	4095
  4080                           
  4081                           ;Config register IDLOC14 @ 0x20001C
  4082                           ;	unspecified, using default values
  4083  20001C                     	org	2097180
  4084  20001C  0FFF               	dw	4095
  4085                           
  4086                           ;Config register IDLOC15 @ 0x20001E
  4087                           ;	unspecified, using default values
  4088  20001E                     	org	2097182
  4089  20001E  0FFF               	dw	4095
  4090                           
  4091                           	psect	config
  4092                           
  4093                           ;Config register CONFIG1 @ 0x300000
  4094                           ;	External Oscillator Selection
  4095                           ;	FEXTOSC = OFF, Oscillator not enabled
  4096                           ;	Reset Oscillator Selection
  4097                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  4098  300000                     	org	3145728
  4099  300000  8C                 	db	140
  4100                           
  4101                           ;Config register CONFIG2 @ 0x300001
  4102                           ;	Clock out Enable bit
  4103                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4104                           ;	PRLOCKED One-Way Set Enable bit
  4105                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  4106                           ;	Clock Switch Enable bit
  4107                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4108                           ;	Fail-Safe Clock Monitor Enable bit
  4109                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4110                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
  4111                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
  4112                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
  4113                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
  4114  300001                     	org	3145729
  4115  300001  FF                 	db	255
  4116                           
  4117                           ;Config register CONFIG3 @ 0x300002
  4118                           ;	MCLR Enable bit
  4119                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4120                           ;	Power-up timer selection bits
  4121                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4122                           ;	Multi-vector enable bit
  4123                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  4124                           ;	IVTLOCK bit One-way set enable bit
  4125                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  4126                           ;	Low Power BOR Enable bit
  4127                           ;	LPBOREN = OFF, Low-Power BOR disabled
  4128                           ;	Brown-out Reset Enable bits
  4129                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  4130  300002                     	org	3145730
  4131  300002  F7                 	db	247
  4132                           
  4133                           ;Config register CONFIG4 @ 0x300003
  4134                           ;	Brown-out Reset Voltage Selection bits
  4135                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  4136                           ;	ZCD Disable bit
  4137                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  4138                           ;	PPSLOCK bit One-Way Set Enable bit
  4139                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  4140                           ;	Stack Full/Underflow Reset Enable bit
  4141                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4142                           ;	Low Voltage Programming Enable bit
  4143                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  4144                           ;	Extended Instruction Set Enable bit
  4145                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4146  300003                     	org	3145731
  4147  300003  FF                 	db	255
  4148                           
  4149                           ;Config register CONFIG5 @ 0x300004
  4150                           ;	WDT Period selection bits
  4151                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4152                           ;	WDT operating mode
  4153                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4154  300004                     	org	3145732
  4155  300004  9F                 	db	159
  4156                           
  4157                           ;Config register CONFIG6 @ 0x300005
  4158                           ;	WDT Window Select bits
  4159                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4160                           ;	WDT input clock selector
  4161                           ;	WDTCCS = SC, Software Control
  4162  300005                     	org	3145733
  4163  300005  FF                 	db	255
  4164                           
  4165                           ;Config register CONFIG7 @ 0x300006
  4166                           ;	Boot Block Size selection bits
  4167                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4168                           ;	Boot Block enable bit
  4169                           ;	BBEN = OFF, Boot block disabled
  4170                           ;	Storage Area Flash enable bit
  4171                           ;	SAFEN = OFF, SAF disabled
  4172                           ;	Background Debugger
  4173                           ;	DEBUG = OFF, Background Debugger disabled
  4174  300006                     	org	3145734
  4175  300006  FF                 	db	255
  4176                           
  4177                           ;Config register CONFIG8 @ 0x300007
  4178                           ;	Boot Block Write Protection bit
  4179                           ;	WRTB = OFF, Boot Block not Write protected
  4180                           ;	Configuration Register Write Protection bit
  4181                           ;	WRTC = OFF, Configuration registers not Write protected
  4182                           ;	Data EEPROM Write Protection bit
  4183                           ;	WRTD = OFF, Data EEPROM not Write protected
  4184                           ;	SAF Write protection bit
  4185                           ;	WRTSAF = OFF, SAF not Write Protected
  4186                           ;	Application Block write protection bit
  4187                           ;	WRTAPP = OFF, Application Block not write protected
  4188  300007                     	org	3145735
  4189  300007  FF                 	db	255
  4190                           
  4191                           ;Config register CONFIG9 @ 0x300008
  4192                           ;	PFM and Data EEPROM Code Protection bit
  4193                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4194  300008                     	org	3145736
  4195  300008  FF                 	db	255
  4196                           
  4197                           ; Padding undefined space
  4198  300009                     	org	3145737
  4199  300009  FF                 	db	255
  4200                           tosu	equ	0x4FF
  4201                           tosh	equ	0x4FE
  4202                           tosl	equ	0x4FD
  4203                           stkptr	equ	0x4FC
  4204                           pclatu	equ	0x4FB
  4205                           pclath	equ	0x4FA
  4206                           pcl	equ	0x4F9
  4207                           tblptru	equ	0x4F8
  4208                           tblptrh	equ	0x4F7
  4209                           tblptrl	equ	0x4F6
  4210                           tablat	equ	0x4F5
  4211                           prodh	equ	0x4F4
  4212                           prodl	equ	0x4F3
  4213                           indf0	equ	0x4EF
  4214                           postinc0	equ	0x4EE
  4215                           postdec0	equ	0x4ED
  4216                           preinc0	equ	0x4EC
  4217                           plusw0	equ	0x4EB
  4218                           fsr0h	equ	0x4EA
  4219                           fsr0l	equ	0x4E9
  4220                           wreg	equ	0x4E8
  4221                           indf1	equ	0x4E7
  4222                           postinc1	equ	0x4E6
  4223                           postdec1	equ	0x4E5
  4224                           preinc1	equ	0x4E4
  4225                           plusw1	equ	0x4E3
  4226                           fsr1h	equ	0x4E2
  4227                           fsr1l	equ	0x4E1
  4228                           bsr	equ	0x4E0
  4229                           indf2	equ	0x4DF
  4230                           postinc2	equ	0x4DE
  4231                           postdec2	equ	0x4DD
  4232                           preinc2	equ	0x4DC
  4233                           plusw2	equ	0x4DB
  4234                           fsr2h	equ	0x4DA
  4235                           fsr2l	equ	0x4D9
  4236                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    5
    Data        0
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      63
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          254      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LOOPDELAY_TimerISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LOOPDELAY_TimerISR(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_map
    _map->___aldiv
    ___aldiv->___lmul
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _LED_WriteFull->_WS2812B_Write
    _WS2812B_Write->_ws_send_byte
    _zeroPulse->_SPI1_ExchangeByte
    _onePulse->_SPI1_ExchangeByte

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   10025
                                             46 COMRAM    11    11      0
      _ADCC_DischargeSampleCapacitor
           _ADCC_GetSingleConversion
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                      _LED_WriteFull
                     _LOOPDELAY_Init
                     _LOOPDELAY_Wait
                          _SPI1_Open
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                 20     0     20    2496
                                             26 COMRAM    20     0     20
           _ADCC_GetSingleConversion (ARG)
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                    _ADCC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LOOPDELAY_Wait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LOOPDELAY_Init                                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_WriteFull                                       10     4      6    2728
                                              6 COMRAM    10     4      6
                      _WS2812B_Write
 ---------------------------------------------------------------------------------
 (2) _WS2812B_Write                                        4     1      3     466
                                              2 COMRAM     4     1      3
                       _ws_send_byte
 ---------------------------------------------------------------------------------
 (3) _ws_send_byte                                         1     1      0     150
                                              1 COMRAM     1     1      0
                           _onePulse
                          _zeroPulse
 ---------------------------------------------------------------------------------
 (4) _zeroPulse                                            0     0      0      15
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _onePulse                                             0     0      0      15
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _SPI1_ExchangeByte                                    1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3     393
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2    2856
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADCC_DischargeSampleCapacitor                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
                 _LOOPDELAY_TimerISR *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _LOOPDELAY_TimerISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_DischargeSampleCapacitor
   _ADCC_GetSingleConversion
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _LED_WriteFull
     _WS2812B_Write
       _ws_send_byte
         _onePulse
           _SPI1_ExchangeByte
         _zeroPulse
           _SPI1_ExchangeByte
   _LOOPDELAY_Init
   _LOOPDELAY_Wait
   _SPI1_Open
   _SYSTEM_Initialize
     _ADCC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _map
     _ADCC_GetSingleConversion (ARG)
     ___aldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _LOOPDELAY_TimerISR *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            FFF      0       0      40        0.0%
EEDATA             200      0       0       0        0.0%
BITBANK20          100      0       0      35        0.0%
BANK20             100      0       0      36        0.0%
BITBANK19          100      0       0      33        0.0%
BANK19             100      0       0      34        0.0%
BITBANK18          100      0       0      31        0.0%
BANK18             100      0       0      32        0.0%
BITBANK17          100      0       0      29        0.0%
BANK17             100      0       0      30        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BIGRAMh             FE      0       0      39        0.0%
BITBANK21           FE      0       0      37        0.0%
BANK21              FE      0       0      38        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      3F       1       66.3%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      28        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Mar 09 19:06:13 2022

                       _SPI1_ExchangeByte 230A          __end_of_TMR2_SetInterruptHandler 2458  
                                      l53 2182                                        u10 2326  
                                      u11 2322                                        u20 1F76  
                                      u21 1F72                                        u30 1F90  
                                      u31 1F8C                                        u40 1FAA  
                                      u41 1FA6                                        u50 1FC4  
                                      u51 1FC0                                        u60 1FDE  
                                      u61 1FDA                                        u70 1FF8  
                                      u71 1FF4                                        u80 2012  
                                      u81 200E                                        u90 202C  
                                      u91 2028                        ?_SPI1_ExchangeByte 0501  
                                     l300 2318                                       l150 22AE  
                                     l302 2326                                       l303 232A  
                                     l135 21DE                                       l402 244C  
                                     l147 228E                                       l260 23FC  
                                     l159 2478                                       l263 23E0  
                                     l416 2484                                       l257 238A  
                                     l290 2432                                       l506 2456  
                                     l460 22DC                                       l294 1F64  
                                     l624 227C                                       l641 2460  
                                     l618 2038                                       l723 1E8A  
                                     l571 1B92                                       l396 2212  
                                     l565 1A94                                       l398 2220  
                                     l590 2418                                       l638 236C  
                                     l399 2230                                       l655 210C  
                                     l656 211C                                       l576 1C66  
                                     l593 20B2                                       l569 1B64  
                                     l596 2470                                       l599 2468  
                                     u300 2364                                       u220 1E9E  
                                     u301 2360                                       u221 1E9A  
                                     _PR2 00031D                                       u710 20D2  
                                     u711 20CE                                       u800 2220  
                                     u720 210C                                       u801 221C  
                                     u721 2108                                       u730 1D92  
                                     u731 1D8E                                       u820 227C  
                                     u740 1DB4                                       u900 1820  
                                     u821 2278                                       u741 1DB0  
                                     u901 181C                                       u750 1DEE  
                                     u910 183C                                       u830 1658  
                                     u815 2228                                       u751 1DEA  
                                     u911 1838                                       u831 1654  
                                     u816 222A                                       u760 1E10  
                                     u920 1A46                                       u840 1676  
                                     u761 1E0C                                       u921 1A42  
                                     u841 1672                                       u770 1E38  
                                     u930 1A56                                       u850 1692  
                                     u771 1E34                                       u931 1A52  
                                     u851 168E                                       u780 1E6A  
                                     u940 1A72                                       u860 1704  
                                     u781 1E66                                       u941 1A6E  
                                     u861 1700                                       u790 229C  
                                     u950 1A82                                       u870 1720  
                                     u791 2298                                       u951 1A7E  
                                     u871 171C                                       u960 1AA2  
                                     u880 1792                                       u961 1A9E  
                                     u881 178E                                       u970 1AB2  
                                     u890 17AE                                       u971 1AAE  
                                     u891 17AA                                       u980 1ACE  
                                     u981 1ACA                                       u990 1ADE  
                                     u991 1ADA                            WS2812B_Write@B 0504  
                          WS2812B_Write@G 0503                            WS2812B_Write@R 0506  
                          WS2812B_Write@W 0505                                       _map 203A  
                 __size_of_PMD_Initialize 001C                       ??_SPI1_ExchangeByte 0501  
                         _TMR2_Initialize 22B0                                       tosl 0004FD  
                  __size_of_LED_WriteFull 004C                                      l2101 1E10  
                                    l2111 1E54                                      l2103 1E1A  
                                    l2121 2280                                      l1321 246A  
                                    l2105 1E38                                      l2113 1E5A  
                                    l2201 1620                                      l2123 2286  
                                    l1323 2462                                      l1331 1F7E  
                                    l1403 241A                                      l2115 1E6A  
                                    l2107 1E48                                      l2211 1632  
                                    l2203 1624                                      l2125 228A  
                                    l1317 230C                                      l1341 1FAA  
                                    l1333 1F82                                      l1501 1F08  
                                    l1405 2430                                      l2053 244E  
                                    l2061 22CA                                      l2141 237E  
                                    l2133 236E                                      l2117 1E7A  
                                    l2109 1E4A                                      l2301 1A64  
                                    l2221 1658                                      l2213 1634  
                                    l2205 1628                                      l2127 228C  
                                    l2151 21EE                                      l1319 2312  
                                    l1351 1FD0                                      l1343 1FB2  
                                    l1335 1F90                                      l1327 1F68  
                                    l1503 1F2C                                      l2063 22D6  
                                    l2055 22B0                                      l2143 2382  
                                    l2135 2372                                      l2071 20D2  
                                    l2311 1AA2                                      l2303 1A72  
                                    l2231 16E8                                      l2223 1666  
                                    l2215 1636                                      l2207 162C  
                                    l2129 229C                                      l2161 2208  
                                    l2153 21F2                                      l1361 2000  
                                    l1353 1FDE                                      l1345 1FB6  
                                    l1337 1F98                                      l1329 1F76  
                                    l2065 2400                                      l1505 1F62  
                                    l2057 22C6                                      l2145 2386  
                                    l2137 2376                                      l2081 1D92  
                                    l2073 20E2                                      l2321 1ACE  
                                    l2313 1AB2                                      l2305 1A82  
                                    l2241 1758                                      l2233 16EE  
                                    l2225 1676                                      l2217 1638  
                                    l2209 1630                                      l2171 243E  
                                    l2163 220C                                      l2155 21F8  
                                    l2147 21E0                                      l1371 202C  
                                    l1363 2004                                      l1355 1FE6  
                                    l1347 1FC4                                      l1339 1F9C  
                                    l1611 2364                                      l2059 22C8  
                                    l2139 237A                                      l2091 1DC8  
                                    l2083 1DA2                                      l2075 20EC  
                                    l2067 20B4                                      l2331 1B52  
                                    l2323 1ADE                                      l2315 1AB4  
                                    l2307 1A84                                      l2251 17AE  
                                    l2243 1776                                      l2227 1692  
                                    l2235 16F2                                      l2219 163C  
                                    l2173 2448                                      l2165 2210  
                                    l2157 21FE                                      l2149 21E8  
                                    l1373 2034                                      l1365 2012  
                                    l1357 1FEA                                      l1349 1FCC  
                                    l2181 2256                                      l1381 2164  
                                    l2093 1DD8                                      l2085 1DA6  
                                    l2077 1D80                                      l2069 20C4  
                                    l2341 1B86                                      l2333 1B54  
                                    l2325 1AFA                                      l2317 1AB8  
                                    l2309 1A88                                      l2261 1820  
                                    l2253 17E6                                      l2245 177C  
                                    l2237 1704                                      l2229 16CA  
                                    l2167 222A                                      l2159 2206  
                                    l1367 201A                                      l1359 1FF8  
                                    l2183 2262                                      l1607 234E  
                                    l1391 23E2                                      l1383 216E  
                                    l2095 1DEE                                      l2087 1DB4  
                                    l2079 1D84                                      l2351 1BCA  
                                    l2343 1BA0                                      l2327 1B32  
                                    l2335 1B58                                      l2319 1AC0  
                                    l2263 183C                                      l2255 1804  
                                    l2239 1720                                      l2247 1780  
                                    l2271 189C                                      l2191 1608  
                                    l2169 2434                                      l1369 201E  
                                    l2177 2234                                      l2185 2458  
                                    l1609 234E                                      l1385 2184  
                                    l2097 1DF6                                      l2089 1DC4  
                                    l2361 1C4E                                      l2353 1BDA  
                                    l2345 1BB0                                      l2337 1B72  
                                    l2329 1B50                                      l2281 18D4  
                                    l2273 18A8                                      l2265 1874  
                                    l2257 180A                                      l2249 1792  
                                    l2193 160C                                      l2179 2244  
                                    l1387 2482                                      l1379 211E  
                                    l2099 1E02                                      l2187 203A  
                                    l2419 1D4E                                      l2371 1C88  
                                    l2355 1BF6                                      l2363 1C56  
                                    l2347 1BB4                                      l2339 1B82  
                                    l2291 1A38                                      l2283 192A  
                                    l2275 18AC                                      l2267 1892  
                                    l2259 180E                                      l2195 1612  
         ??_ADCC_DischargeSampleCapacitor 0501                                      l1389 23C6  
                                    l2381 1D02                                      l2373 1C90  
                                    l2357 1C2E                                      l2365 1C5A  
                                    l2349 1BBC                                      l2293 1A46  
                                    l2285 1984                                      l2277 18BC  
                                    l2269 1898                                      l2197 1614  
                                    l1479 2472                                      l1495 1E8E  
                                    l2383 1D20                                      l2375 1C9E  
                                    l2367 1C74                                      l2359 1C4C  
                                    l2295 1A56                                      l2287 1988  
                                    l2279 18D0                                      l2199 1620  
                                    l1497 1E9E                                      l2385 1D22  
                                    l2377 1CAE                                      l2369 1C84  
                                    l2297 1A58                                      l2289 19E2  
                                    l2393 1D3A                                      l1499 1F04  
                                    l2379 1CCA                                      l2387 1D2A  
                                    l2299 1A5C                                      l2389 1D2E  
                                    ?_map 051B                                      u1000 1AFA  
                                    u1001 1AF6                                      u1010 1B72  
                                    u1011 1B6E                                      u1100 1C9E  
                                    u1020 1B82                                      u1101 1C9A  
                                    u1021 1B7E                                      u1110 1CAE  
                                    u1030 1BA0                                      u1111 1CAA  
                                    u1031 1B9C                                      u1120 1CCA  
                                    u1040 1BB0                                      u1121 1CC6  
                                    u1041 1BAC                                      u1050 1BCA  
                                    u1051 1BC6                                      u1060 1BDA  
                                    u1061 1BD6                                      u1070 1BF6  
                                    u1071 1BF2                                      u1080 1C74  
                                    u1081 1C70                                      u1090 1C84  
                                    u1091 1C80                                      _LATA 0004BE  
                                    _LATB 0004BF                                      _LATC 0004C0  
                                    _T2PR 00031D                                      _PMD0 000063  
                                    _PMD1 000064                                      _PMD2 000065  
                                    _PMD3 000066                                      _PMD4 000067  
                                    _PMD5 000068                                      _TMR2 00031C  
                                    _WPUA 000401                                      _WPUB 000409  
                                    _WPUC 000411                                      _main 1608  
                                    map@x 051B                                      prodh 0004F4  
                                    prodl 0004F3                                      start 001A  
               __end_of_SPI1_ExchangeByte 232C                              ___param_bank 000000  
                                   ??_map 052F                 __size_of_DATAEE_WriteByte 0052  
                          LED_WriteFull@i 050E            __size_of_OSCILLATOR_Initialize 001C  
           __end_of_OSCILLATOR_Initialize 23FE                     __size_of_ws_send_byte 00D4  
                         __end_of___aldiv 1E8C                                     _ADCAP 0003F0  
                                   _ADACT 0003F9                                     ?_main 0501  
                                   _ADCLK 0003FA                                     _ADCNT 0003E6  
                                   _ADPCH 0003EC                                     _ADREF 0003F8  
                                   _ADRPT 0003E7          SPI1_Open@spi1UniqueConfiguration 0502  
                                   _T2CON 00031E                                     _T2HLT 00031F  
                                   _T2TMR 00031C                                     _T2RST 000321  
                                   i2l503 2308                                     i2l423 234C  
                                   i2l509 2486                                     i2l632 23A8  
                                   i2l499 2480                                     _OSCEN 0000B3  
                                   _TRISA 0004C6                                     _TRISB 0004C7  
                                   _TRISC 0004C8               LOOPDELAY_Init@newLoopTimeMS 0501  
                      __size_of_SPI1_Open 00DA                       ___lmul@multiplicand 0505  
                        __end_of_TMR2_ISR 2482                           _DATAEE_ReadByte 2434  
                                   pclath 0004FA                                     tablat 0004F5  
                                   status 0004D8                  __size_of_SPI1_Initialize 001A  
                         __initialization 23AA                             _LED_WriteFull 2232  
                            _ws_send_byte 1F66                              __end_of_main 1D80  
                 __end_of_TMR2_Initialize 22DE               ?_INTERRUPT_InterruptManager 0501  
                _TMR2_SetInterruptHandler 244E                                    ??_main 052F  
                           __activetblptr 000003                                    _ADACCH 0003E4  
                                  _ADACCL 0003E3                                    _ADACCU 0003E5  
                                  _ADACQH 0003EF                                    _ADACQL 0003EE  
                                  _ADCON0 0003F3                                    _ADCON1 0003F4  
                                  _ADCON2 0003F5                                    _ADCON3 0003F6  
                                  _ADERRH 0003DE                                    _ADERRL 0003DD  
                                  _ADLTHH 0003DA                                    _ACTCON 0000AC  
                                  _ADLTHL 0003D9                                    _ADRESH 0003EB  
                                  _ADRESL 0003EA                                    _ADPREH 0003F2  
                                  _ADPREL 0003F1                                    _ADSTAT 0003F7  
                                  _ADUTHH 0003DC                                    _ADUTHL 0003DB  
                                  _ANSELA 000400                                    _ANSELB 000408  
                                  _ANSELC 000410                                    _RB4PPS 00020D  
                                  _RB6PPS 00020F                                    _ODCONA 000402  
                                  _ODCONB 00040A                                    _ODCONC 000412  
                                  i2l1407 22DE                                    i2l1409 22F0  
                                  i2l1375 238C                                    i2l1377 23A4  
                                  i2l1803 232C                                    i2l1581 247C  
                                  i2l1805 233A                                    i2l1807 2348  
                                  i2l1579 247A                                    _INLVLA 000404  
                                  _INLVLB 00040C                                    _INLVLC 000414  
                                  _TABLAT 0004F5                                    _OSCFRQ 0000B1  
   __end_of_ADCC_DischargeSampleCapacitor 247A    __size_of_ADCC_DischargeSampleCapacitor 0008  
           _ADCC_DischargeSampleCapacitor 2472                __size_of_SPI1_ExchangeByte 0022  
                          ?_LED_WriteFull 0507                         __end_of_SPI1_Open 1F66  
                                  ___lmul 20B4                                 ??___aldiv 0515  
              __end_of_LOOPDELAY_TimerISR 23AA                                    isa$std 000001  
                        __end_of_onePulse 2472                   __end_of_DATAEE_ReadByte 244E  
                         _ADCC_Initialize 2184                            _PMD_Initialize 23C6  
                            __mediumconst 0000                                    tblptrh 0004F7  
                                  tblptrl 0004F6                                    tblptru 0004F8  
       __size_of_ADCC_GetSingleConversion 0032                 ?_ADCC_GetSingleConversion 0501  
TMR2_SetInterruptHandler@InterruptHandler 0501                        LED_WriteFull@green 0507  
           __size_of_INTERRUPT_Initialize 0004                        LED_WriteFull@white 0509  
                       _SYSTEM_Initialize 236E                                __accesstop 0560  
                 __end_of__initialization 23C0                     __end_of_TMR2_CallBack 230A  
                      ?_SYSTEM_Initialize 0501                             ___rparam_used 000001  
                          __pcstackCOMRAM 0501                       ??_SYSTEM_Initialize 0503  
                  __size_of_WS2812B_Write 001C                                 ?_TMR2_ISR 0501  
                        _DATAEE_WriteByte 21E0                         ??_SPI1_Initialize 0501  
                        ?_TMR2_Initialize 0501                    __end_of_PMD_Initialize 23E2  
                   SPI1_ExchangeByte@data 0501                        _spi1_configuration 1601  
               __end_of_SYSTEM_Initialize 238C                          LED_WriteFull@red 050D  
                              __pnvCOMRAM 053E                           ??_LED_WriteFull 050D  
                                 IVTBASEH 00045E                                   IVTBASEL 00045D  
                                 IVTBASEU 00045F            ?_ADCC_DischargeSampleCapacitor 0501  
                                 ?___lmul 0501                                ??_TMR2_ISR 0501  
                 __end_of_ADCC_Initialize 21E0                                   _ADFLTRH 0003E2  
                                 _ADFLTRL 0003E1                            ___lmul@product 0509  
                                 _ADPREVH 0003E9                                   _ADPREVL 0003E8  
                                 _ADSTPTH 0003E0                                   _ADSTPTL 0003DF  
                         ?_PMD_Initialize 0501                     fp__LOOPDELAY_TimerISR 0000  
                        ?_DATAEE_ReadByte 0501                                   _OSCCON1 0000AD  
                                 _OSCCON3 0000AF                                   _TBLPTRH 0004F7  
                                 _TBLPTRL 0004F6                                   i2u10_40 23A4  
                                 i2u10_41 23A0                                   _SPI1CLK 00008C  
                                 _TBLPTRU 0004F8                                   i2u11_40 22F0  
                                 i2u11_41 22EC                                   i2u12_48 22F6  
                                 i2u12_49 2308                                   i2u40_40 2348  
                                 i2u40_41 2344                                   _SPI1RXB 000080  
                                 _NVMADRH 000044                                   _NVMADRL 000043  
                                 _SPI1TXB 000081                                   _NVMADRU 000045  
                                 _OSCTUNE 0000B0                                   _NVMDATL 000046  
                                 i2u39_40 233A                                   i2u39_41 2336  
                                 _NVMLOCK 000042                                   _SLRCONA 000403  
                                 _SLRCONB 00040B                                   _SLRCONC 000413  
                           _WS2812B_Write 23FE                        __size_of_zeroPulse 0008  
                    DATAEE_WriteByte@bAdd 0501                                 ?_onePulse 0501  
                 __size_of_LOOPDELAY_Init 000A                                   __Hparam 0000  
                 __size_of_LOOPDELAY_Wait 0020                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 0503                                   ___aldiv 1D80  
                         __size_of___lmul 006A                              __psmallconst 1600  
                                 __pcinit 23AA                                   __ramtop 1600  
                                 __ptext0 1608                                   __ptext1 203A  
                                 __ptext2 20B4                                   __ptext3 1D80  
                                 __ptext4 236E                                   __ptext5 22B0  
                                 __ptext6 244E                                   __ptext7 241A  
                                 __ptext8 23C6                                   __ptext9 211E  
                   _OSCILLATOR_Initialize 23E2                                 _T2CONbits 00031E  
                            __size_of_map 007A                          ___aldiv@dividend 050D  
                ??_PIN_MANAGER_Initialize 0501                                 _T2HLTbits 00031F  
                          ?_WS2812B_Write 0503                __size_of_SYSTEM_Initialize 001E  
                                 main@red 0535                      end_of_initialization 23C0  
                              _loopTimeMS 053A                                 _T2RSTbits 000321  
                              ??_onePulse 0502                                 _SPI1TCNTL 000082  
                        ___aldiv@quotient 0517                          ?_ADCC_Initialize 0501  
                               _SPI1_Open 1E8C          __end_of_ADCC_GetSingleConversion 22B0  
                       __end_of_zeroPulse 246A                                 _TRISBbits 0004C7  
                      _LOOPDELAY_TimerISR 238C                  __end_of_DATAEE_WriteByte 2232  
                              map@out_max 052B                                map@out_min 0527  
                     ?_LOOPDELAY_TimerISR 0501                           _SPI1_Initialize 241A  
            __end_of_INTERRUPT_Initialize 2486      __end_of_TMR2_DefaultInterruptHandler 2488  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 2486  
                              ?_SPI1_Open 0501                            __end_of___lmul 211E  
                       __size_of_TMR2_ISR 0008                      ??_LOOPDELAY_TimerISR 0501  
                  ?_OSCILLATOR_Initialize 0501                           ??_WS2812B_Write 0506  
                     start_initialization 23AA           __size_of_PIN_MANAGER_Initialize 0066  
                             __end_of_map 20B4                                ivt0x8_base 0008  
                     DATAEE_ReadByte@bAdd 0501                            _LOOPDELAY_Init 2458  
                          _LOOPDELAY_Wait 234E                          ??_PMD_Initialize 0501  
                                ??___lmul 0509           fp__TMR2_DefaultInterruptHandler 0000  
           ?_TMR2_DefaultInterruptHandler 0501                         LED_WriteFull@blue 0508  
                _ADCC_GetSingleConversion 227E                    __size_of_TMR2_CallBack 002C  
                             __pbssCOMRAM 053A                  __size_of_TMR2_Initialize 002E  
                 __end_of_SPI1_Initialize 2434                    __end_of_LOOPDELAY_Init 2462  
                  __end_of_LOOPDELAY_Wait 236E                     __end_of_LED_WriteFull 227E  
                  _PIN_MANAGER_Initialize 211E                             ?_ws_send_byte 0501  
                       __size_of_onePulse 0008                                  ?___aldiv 050D  
         ADCC_GetSingleConversion@channel 0505                               ??_SPI1_Open 0501  
                               _bufferRAM 001500              ??_INTERRUPT_InterruptManager 0501  
                             __smallconst 1600                                  _T2CLKCON 000320  
                __size_of_DATAEE_ReadByte 001A                      _INTERRUPT_Initialize 2482  
                         ___aldiv@divisor 0511                           ___aldiv@counter 0515  
                         ?_LOOPDELAY_Init 0501                           ?_LOOPDELAY_Wait 0501  
                                _LATAbits 0004BE                                  _LATBbits 0004BF  
                                _LATCbits 0004C0                             _TMR2_CallBack 22DE  
                                _PIE3bits 0004AB                              _SPI1CON0bits 000084  
                          ??_ws_send_byte 0502       __size_of_INTERRUPT_InterruptManager 0022  
                                _PIR0bits 0004B3                                  _SPI1BAUD 000089  
                                _PIR3bits 0004B6                                  _SPI1CON0 000084  
                                _SPI1CON1 000085                                  _SPI1CON2 000086  
                                _TMR2_ISR 247A                                 map@in_max 0523  
                               map@in_min 051F                                _ADCON0bits 0003F3  
                              _ADCON1bits 0003F4                                _ADCON2bits 0003F5  
                              _ADCON3bits 0003F6                                 main@green 0536  
          ??_TMR2_DefaultInterruptHandler 0501         __size_of_TMR2_SetInterruptHandler 000A  
                               _zeroPulse 2462                                 main@state 0539  
                               main@white 0538                 ?_TMR2_SetInterruptHandler 0501  
                   DATAEE_WriteByte@bData 0503                          ?_SPI1_Initialize 0501  
                             _INTCON0bits 0004D6                         ___lmul@multiplier 0501  
                   ?_INTERRUPT_Initialize 0501                         ?_DATAEE_WriteByte 0501  
                       ??_TMR2_Initialize 0503                            ?_TMR2_CallBack 0501  
                      ??_DATAEE_WriteByte 0504                                _ADSTATbits 0003F7  
                                __Hrparam 0000                                  __Lrparam 0000  
                           ws_send_byte@K 0502                   ??_OSCILLATOR_Initialize 0501  
                        __size_of___aldiv 010C                  __size_of_ADCC_Initialize 005C  
                              ?_zeroPulse 0501                                  __pivt0x8 0008  
                                __ptext10 23E2                                  __ptext11 2482  
                                __ptext20 246A                                  __ptext12 2184  
                                __ptext21 230A                                  __ptext13 1E8C  
                                __ptext30 2486                                  __ptext22 21E0  
                                __ptext14 234E                                  __ptext31 0000  
                                __ptext23 2434                                  __ptext15 2458  
                                __ptext24 227E                                  __ptext16 2232  
                                __ptext25 2472                                  __ptext17 23FE  
                                __ptext26 232C                                  __ptext18 1F66  
                                __ptext27 247A                                  __ptext19 2462  
                                __ptext28 22DE                                  __ptext29 238C  
             DATAEE_WriteByte@GIEBitValue 0504                             __size_of_main 0778  
                                _onePulse 246A                         ??_DATAEE_ReadByte 0503  
                         main@taster1Flag 0533                           main@taster2Flag 0534  
                         main@taster3Flag 0531                           main@taster4Flag 0532  
                                isa$xinst 000000                ??_ADCC_GetSingleConversion 0503  
      __end_of_INTERRUPT_InterruptManager 234E                _INTERRUPT_InterruptManager 232C  
                                main@blue 0537               __size_of_LOOPDELAY_TimerISR 001E  
                             _loopTimeCnt 053C                               _NVMCON0bits 000040  
                             _NVMCON1bits 000041                      __end_of_ws_send_byte 203A  
                   __end_of_WS2812B_Write 241A                    ??_INTERRUPT_Initialize 0501  
                                intlevel2 0000                           ??_TMR2_CallBack 0501  
                 ?_PIN_MANAGER_Initialize 0501                                _SPI1SCKPPS 00026A  
                              _SPI1SDIPPS 00026B                     LED_WriteFull@ledcount 050A  
                             ??_zeroPulse 0502                              ___aldiv@sign 0516  
                        ??_LOOPDELAY_Init 0503                          ??_LOOPDELAY_Wait 0501  
          __end_of_PIN_MANAGER_Initialize 2184                         ??_ADCC_Initialize 0501  
                   _TMR2_InterruptHandler 053E                __end_of_spi1_configuration 1606  
