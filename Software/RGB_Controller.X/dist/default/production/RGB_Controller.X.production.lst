

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jan 16 13:06:50 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F16Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.32
    32                           ; Generated 02/02/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F16Q40 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	smallconst
    68  001600                     __psmallconst:
    69                           	callstack 0
    70  001600  00                 	db	0
    71  001601                     _spi1_configuration:
    72                           	callstack 0
    73  001601  02                 	db	2
    74  001602  40                 	db	64
    75  001603  00                 	db	0
    76  001604  03                 	db	3
    77  001605  00                 	db	0
    78  001606                     __end_of_spi1_configuration:
    79                           	callstack 0
    80  0000                     _SPI1RXB	set	128
    81  0000                     _SPI1TXB	set	129
    82  0000                     _SPI1TCNTL	set	130
    83  0000                     _SPI1CON0bits	set	132
    84  0000                     _SPI1BAUD	set	137
    85  0000                     _SPI1CLK	set	140
    86  0000                     _SPI1CON2	set	134
    87  0000                     _SPI1CON1	set	133
    88  0000                     _SPI1CON0	set	132
    89  0000                     _PMD5	set	104
    90  0000                     _PMD4	set	103
    91  0000                     _PMD3	set	102
    92  0000                     _PMD2	set	101
    93  0000                     _PMD1	set	100
    94  0000                     _PMD0	set	99
    95  0000                     _ACTCON	set	172
    96  0000                     _OSCTUNE	set	176
    97  0000                     _OSCFRQ	set	177
    98  0000                     _OSCEN	set	179
    99  0000                     _OSCCON3	set	175
   100  0000                     _OSCCON1	set	173
   101  0000                     _SPI1SDIPPS	set	619
   102  0000                     _RB4PPS	set	525
   103  0000                     _RB6PPS	set	527
   104  0000                     _SPI1SCKPPS	set	618
   105  0000                     _ADCON1bits	set	1012
   106  0000                     _ADERRL	set	989
   107  0000                     _ADERRH	set	990
   108  0000                     _ADPREVL	set	1000
   109  0000                     _ADPREVH	set	1001
   110  0000                     _ADFLTRL	set	993
   111  0000                     _ADFLTRH	set	994
   112  0000                     _ADSTATbits	set	1015
   113  0000                     _ADACCL	set	995
   114  0000                     _ADACCH	set	996
   115  0000                     _ADCON2bits	set	1013
   116  0000                     _ADCNT	set	998
   117  0000                     _ADCON3bits	set	1014
   118  0000                     _ADRESL	set	1002
   119  0000                     _ADRESH	set	1003
   120  0000                     _ADCON0bits	set	1011
   121  0000                     _ADCON0	set	1011
   122  0000                     _ADCLK	set	1018
   123  0000                     _ADACT	set	1017
   124  0000                     _ADREF	set	1016
   125  0000                     _ADSTAT	set	1015
   126  0000                     _ADCON3	set	1014
   127  0000                     _ADCON2	set	1013
   128  0000                     _ADCON1	set	1012
   129  0000                     _ADPREH	set	1010
   130  0000                     _ADPREL	set	1009
   131  0000                     _ADCAP	set	1008
   132  0000                     _ADACQH	set	1007
   133  0000                     _ADACQL	set	1006
   134  0000                     _ADPCH	set	1004
   135  0000                     _ADRPT	set	999
   136  0000                     _ADACCU	set	997
   137  0000                     _ADSTPTH	set	992
   138  0000                     _ADSTPTL	set	991
   139  0000                     _ADUTHH	set	988
   140  0000                     _ADUTHL	set	987
   141  0000                     _ADLTHH	set	986
   142  0000                     _ADLTHL	set	985
   143  0000                     _INLVLC	set	1044
   144  0000                     _INLVLB	set	1036
   145  0000                     _INLVLA	set	1028
   146  0000                     _SLRCONC	set	1043
   147  0000                     _SLRCONB	set	1035
   148  0000                     _SLRCONA	set	1027
   149  0000                     _ODCONC	set	1042
   150  0000                     _ODCONB	set	1034
   151  0000                     _ODCONA	set	1026
   152  0000                     _WPUC	set	1041
   153  0000                     _WPUA	set	1025
   154  0000                     _WPUB	set	1033
   155  0000                     _ANSELA	set	1024
   156  0000                     _ANSELB	set	1032
   157  0000                     _ANSELC	set	1040
   158  0000                     _PIR3bits	set	1206
   159  0000                     _TRISBbits	set	1223
   160  0000                     _TRISC	set	1224
   161  0000                     _TRISB	set	1223
   162  0000                     _TRISA	set	1222
   163  0000                     _LATC	set	1216
   164  0000                     _LATB	set	1215
   165  0000                     _LATA	set	1214
   166  001606  00                 	db	0	; dummy byte at the end
   167  0000                     
   168                           ; #config settings
   169                           
   170                           	psect	cinit
   171  001CE0                     __pcinit:
   172                           	callstack 0
   173  001CE0                     start_initialization:
   174                           	callstack 0
   175  001CE0                     __initialization:
   176                           	callstack 0
   177  001CE0                     end_of_initialization:
   178                           	callstack 0
   179  001CE0                     __end_of__initialization:
   180                           	callstack 0
   181  001CE0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   182  001CE2  6EF8               	movwf	tblptru,c
   183  001CE4  0E16               	movlw	high __Lsmallconst
   184  001CE6  6EF7               	movwf	tblptrh,c
   185  001CE8  0100               	movlb	0
   186  001CEA  EF04  F00B         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMRAM
   189  000501                     __pcstackCOMRAM:
   190                           	callstack 0
   191  000501                     ??_SPI1_Open:
   192  000501                     ?_ADCC_GetSingleConversion:
   193                           	callstack 0
   194  000501                     ?___lmul:
   195                           	callstack 0
   196  000501                     SPI1_ExchangeByte@data:
   197                           	callstack 0
   198  000501                     ___lmul@multiplier:
   199                           	callstack 0
   200                           
   201                           ; 4 bytes @ 0x0
   202  000501                     	ds	1
   203  000502                     SPI1_Open@spi1UniqueConfiguration:
   204                           	callstack 0
   205  000502                     ws_send_byte@K:
   206                           	callstack 0
   207                           
   208                           ; 1 bytes @ 0x1
   209  000502                     	ds	1
   210  000503                     ??_ADCC_GetSingleConversion:
   211  000503                     c_WS2812B_Write@G:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x2
   215  000503                     	ds	1
   216  000504                     c_WS2812B_Write@B:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x3
   220  000504                     	ds	1
   221  000505                     ADCC_GetSingleConversion@channel:
   222                           	callstack 0
   223  000505                     c_WS2812B_Write@W:
   224                           	callstack 0
   225  000505                     ___lmul@multiplicand:
   226                           	callstack 0
   227                           
   228                           ; 4 bytes @ 0x4
   229  000505                     	ds	1
   230  000506                     c_WS2812B_Write@R:
   231                           	callstack 0
   232                           
   233                           ; 1 bytes @ 0x5
   234  000506                     	ds	3
   235  000509                     ___lmul@product:
   236                           	callstack 0
   237                           
   238                           ; 4 bytes @ 0x8
   239  000509                     	ds	4
   240  00050D                     ?___aldiv:
   241                           	callstack 0
   242  00050D                     ___aldiv@dividend:
   243                           	callstack 0
   244                           
   245                           ; 4 bytes @ 0xC
   246  00050D                     	ds	4
   247  000511                     ___aldiv@divisor:
   248                           	callstack 0
   249                           
   250                           ; 4 bytes @ 0x10
   251  000511                     	ds	4
   252  000515                     ___aldiv@counter:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x14
   256  000515                     	ds	1
   257  000516                     ___aldiv@sign:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x15
   261  000516                     	ds	1
   262  000517                     ___aldiv@quotient:
   263                           	callstack 0
   264                           
   265                           ; 4 bytes @ 0x16
   266  000517                     	ds	4
   267  00051B                     ?_map:
   268                           	callstack 0
   269  00051B                     map@x:
   270                           	callstack 0
   271                           
   272                           ; 4 bytes @ 0x1A
   273  00051B                     	ds	4
   274  00051F                     map@in_min:
   275                           	callstack 0
   276                           
   277                           ; 4 bytes @ 0x1E
   278  00051F                     	ds	4
   279  000523                     map@in_max:
   280                           	callstack 0
   281                           
   282                           ; 4 bytes @ 0x22
   283  000523                     	ds	4
   284  000527                     map@out_min:
   285                           	callstack 0
   286                           
   287                           ; 4 bytes @ 0x26
   288  000527                     	ds	4
   289  00052B                     map@out_max:
   290                           	callstack 0
   291                           
   292                           ; 4 bytes @ 0x2A
   293  00052B                     	ds	4
   294  00052F                     ??_main:
   295                           
   296                           ; 1 bytes @ 0x2E
   297  00052F                     	ds	1
   298  000530                     main@red:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x2F
   302  000530                     	ds	1
   303  000531                     main@green:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x30
   307  000531                     	ds	1
   308  000532                     main@blue:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x31
   312  000532                     	ds	1
   313  000533                     main@white:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x32
   317  000533                     	ds	1
   318  000534                     main@i:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x33
   322  000534                     	ds	1
   323                           
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 6 in file "main.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;  i               1   51[COMRAM] unsigned char 
   334 ;;  white           1   50[COMRAM] unsigned char 
   335 ;;  blue            1   49[COMRAM] unsigned char 
   336 ;;  green           1   48[COMRAM] unsigned char 
   337 ;;  red             1   47[COMRAM] unsigned char 
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   348 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   350 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   351 ;;Total ram usage:        6 bytes
   352 ;; Hardware stack levels required when called: 4
   353 ;; This function calls:
   354 ;;		_ADCC_DischargeSampleCapacitor
   355 ;;		_ADCC_GetSingleConversion
   356 ;;		_SPI1_Open
   357 ;;		_SYSTEM_Initialize
   358 ;;		_c_WS2812B_Write
   359 ;;		_map
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text0
   366  001608                     __ptext0:
   367                           	callstack 0
   368  001608                     _main:
   369                           	callstack 124
   370  001608                     
   371                           ;main.c: 9:     SYSTEM_Initialize();
   372  001608  EC65  F00E         	call	_SYSTEM_Initialize	;wreg free
   373  00160C                     
   374                           ;main.c: 10:     SPI1_Open(SPI1_DEFAULT);
   375  00160C  0E00               	movlw	0
   376  00160E  ECD5  F00C         	call	_SPI1_Open
   377  001612                     l1461:
   378                           
   379                           ;main.c: 24:     {;main.c: 25:         _delay((unsigned long)((1)*(64000000/4000.0)));
   380  001612  0E15               	movlw	21
   381  001614  6E2F               	movwf	??_main^(0+1280),c
   382  001616  0EC6               	movlw	198
   383  001618                     u357:
   384  001618  2EE8               	decfsz	wreg,f,c
   385  00161A  D7FE               	bra	u357
   386  00161C  2E2F               	decfsz	??_main^(0+1280),f,c
   387  00161E  D7FC               	bra	u357
   388  001620  D000               	nop2	
   389  001622                     
   390                           ;main.c: 27:         ADCC_DischargeSampleCapacitor();
   391  001622  EC7F  F00E         	call	_ADCC_DischargeSampleCapacitor	;wreg free
   392  001626                     
   393                           ;main.c: 28:         red = map(ADCC_GetSingleConversion(POT1),0,4095,0,255);
   394  001626  0E02               	movlw	2
   395  001628  EC04  F00E         	call	_ADCC_GetSingleConversion
   396  00162C  C501  F51B         	movff	?_ADCC_GetSingleConversion,map@x
   397  001630  C502  F51C         	movff	?_ADCC_GetSingleConversion+1,map@x+1
   398  001634  6A1D               	clrf	(map@x+2)^(0+1280),c
   399  001636  6A1E               	clrf	(map@x+3)^(0+1280),c
   400  001638  0E00               	movlw	0
   401  00163A  6E1F               	movwf	map@in_min^(0+1280),c
   402  00163C  0E00               	movlw	0
   403  00163E  6E20               	movwf	(map@in_min+1)^(0+1280),c
   404  001640  0E00               	movlw	0
   405  001642  6E21               	movwf	(map@in_min+2)^(0+1280),c
   406  001644  0E00               	movlw	0
   407  001646  6E22               	movwf	(map@in_min+3)^(0+1280),c
   408  001648  0EFF               	movlw	255
   409  00164A  6E23               	movwf	map@in_max^(0+1280),c
   410  00164C  0E0F               	movlw	15
   411  00164E  6E24               	movwf	(map@in_max+1)^(0+1280),c
   412  001650  0E00               	movlw	0
   413  001652  6E25               	movwf	(map@in_max+2)^(0+1280),c
   414  001654  0E00               	movlw	0
   415  001656  6E26               	movwf	(map@in_max+3)^(0+1280),c
   416  001658  0E00               	movlw	0
   417  00165A  6E27               	movwf	map@out_min^(0+1280),c
   418  00165C  0E00               	movlw	0
   419  00165E  6E28               	movwf	(map@out_min+1)^(0+1280),c
   420  001660  0E00               	movlw	0
   421  001662  6E29               	movwf	(map@out_min+2)^(0+1280),c
   422  001664  0E00               	movlw	0
   423  001666  6E2A               	movwf	(map@out_min+3)^(0+1280),c
   424  001668  0EFF               	movlw	255
   425  00166A  6E2B               	movwf	map@out_max^(0+1280),c
   426  00166C  0E00               	movlw	0
   427  00166E  6E2C               	movwf	(map@out_max+1)^(0+1280),c
   428  001670  0E00               	movlw	0
   429  001672  6E2D               	movwf	(map@out_max+2)^(0+1280),c
   430  001674  0E00               	movlw	0
   431  001676  6E2E               	movwf	(map@out_max+3)^(0+1280),c
   432  001678  EC33  F00D         	call	_map	;wreg free
   433  00167C  501B               	movf	?_map^(0+1280),w,c
   434  00167E  6E30               	movwf	main@red^(0+1280),c
   435  001680                     
   436                           ;main.c: 29:         ADCC_DischargeSampleCapacitor();
   437  001680  EC7F  F00E         	call	_ADCC_DischargeSampleCapacitor	;wreg free
   438  001684                     
   439                           ;main.c: 30:         green = map(ADCC_GetSingleConversion(POT2),0,4095,0,255);
   440  001684  0E10               	movlw	16
   441  001686  EC04  F00E         	call	_ADCC_GetSingleConversion
   442  00168A  C501  F51B         	movff	?_ADCC_GetSingleConversion,map@x
   443  00168E  C502  F51C         	movff	?_ADCC_GetSingleConversion+1,map@x+1
   444  001692  6A1D               	clrf	(map@x+2)^(0+1280),c
   445  001694  6A1E               	clrf	(map@x+3)^(0+1280),c
   446  001696  0E00               	movlw	0
   447  001698  6E1F               	movwf	map@in_min^(0+1280),c
   448  00169A  0E00               	movlw	0
   449  00169C  6E20               	movwf	(map@in_min+1)^(0+1280),c
   450  00169E  0E00               	movlw	0
   451  0016A0  6E21               	movwf	(map@in_min+2)^(0+1280),c
   452  0016A2  0E00               	movlw	0
   453  0016A4  6E22               	movwf	(map@in_min+3)^(0+1280),c
   454  0016A6  0EFF               	movlw	255
   455  0016A8  6E23               	movwf	map@in_max^(0+1280),c
   456  0016AA  0E0F               	movlw	15
   457  0016AC  6E24               	movwf	(map@in_max+1)^(0+1280),c
   458  0016AE  0E00               	movlw	0
   459  0016B0  6E25               	movwf	(map@in_max+2)^(0+1280),c
   460  0016B2  0E00               	movlw	0
   461  0016B4  6E26               	movwf	(map@in_max+3)^(0+1280),c
   462  0016B6  0E00               	movlw	0
   463  0016B8  6E27               	movwf	map@out_min^(0+1280),c
   464  0016BA  0E00               	movlw	0
   465  0016BC  6E28               	movwf	(map@out_min+1)^(0+1280),c
   466  0016BE  0E00               	movlw	0
   467  0016C0  6E29               	movwf	(map@out_min+2)^(0+1280),c
   468  0016C2  0E00               	movlw	0
   469  0016C4  6E2A               	movwf	(map@out_min+3)^(0+1280),c
   470  0016C6  0EFF               	movlw	255
   471  0016C8  6E2B               	movwf	map@out_max^(0+1280),c
   472  0016CA  0E00               	movlw	0
   473  0016CC  6E2C               	movwf	(map@out_max+1)^(0+1280),c
   474  0016CE  0E00               	movlw	0
   475  0016D0  6E2D               	movwf	(map@out_max+2)^(0+1280),c
   476  0016D2  0E00               	movlw	0
   477  0016D4  6E2E               	movwf	(map@out_max+3)^(0+1280),c
   478  0016D6  EC33  F00D         	call	_map	;wreg free
   479  0016DA  501B               	movf	?_map^(0+1280),w,c
   480  0016DC  6E31               	movwf	main@green^(0+1280),c
   481  0016DE                     
   482                           ;main.c: 31:         ADCC_DischargeSampleCapacitor();
   483  0016DE  EC7F  F00E         	call	_ADCC_DischargeSampleCapacitor	;wreg free
   484  0016E2                     
   485                           ;main.c: 32:         blue = map(ADCC_GetSingleConversion(POT3),0,4095,0,255);
   486  0016E2  0E11               	movlw	17
   487  0016E4  EC04  F00E         	call	_ADCC_GetSingleConversion
   488  0016E8  C501  F51B         	movff	?_ADCC_GetSingleConversion,map@x
   489  0016EC  C502  F51C         	movff	?_ADCC_GetSingleConversion+1,map@x+1
   490  0016F0  6A1D               	clrf	(map@x+2)^(0+1280),c
   491  0016F2  6A1E               	clrf	(map@x+3)^(0+1280),c
   492  0016F4  0E00               	movlw	0
   493  0016F6  6E1F               	movwf	map@in_min^(0+1280),c
   494  0016F8  0E00               	movlw	0
   495  0016FA  6E20               	movwf	(map@in_min+1)^(0+1280),c
   496  0016FC  0E00               	movlw	0
   497  0016FE  6E21               	movwf	(map@in_min+2)^(0+1280),c
   498  001700  0E00               	movlw	0
   499  001702  6E22               	movwf	(map@in_min+3)^(0+1280),c
   500  001704  0EFF               	movlw	255
   501  001706  6E23               	movwf	map@in_max^(0+1280),c
   502  001708  0E0F               	movlw	15
   503  00170A  6E24               	movwf	(map@in_max+1)^(0+1280),c
   504  00170C  0E00               	movlw	0
   505  00170E  6E25               	movwf	(map@in_max+2)^(0+1280),c
   506  001710  0E00               	movlw	0
   507  001712  6E26               	movwf	(map@in_max+3)^(0+1280),c
   508  001714  0E00               	movlw	0
   509  001716  6E27               	movwf	map@out_min^(0+1280),c
   510  001718  0E00               	movlw	0
   511  00171A  6E28               	movwf	(map@out_min+1)^(0+1280),c
   512  00171C  0E00               	movlw	0
   513  00171E  6E29               	movwf	(map@out_min+2)^(0+1280),c
   514  001720  0E00               	movlw	0
   515  001722  6E2A               	movwf	(map@out_min+3)^(0+1280),c
   516  001724  0EFF               	movlw	255
   517  001726  6E2B               	movwf	map@out_max^(0+1280),c
   518  001728  0E00               	movlw	0
   519  00172A  6E2C               	movwf	(map@out_max+1)^(0+1280),c
   520  00172C  0E00               	movlw	0
   521  00172E  6E2D               	movwf	(map@out_max+2)^(0+1280),c
   522  001730  0E00               	movlw	0
   523  001732  6E2E               	movwf	(map@out_max+3)^(0+1280),c
   524  001734  EC33  F00D         	call	_map	;wreg free
   525  001738  501B               	movf	?_map^(0+1280),w,c
   526  00173A  6E32               	movwf	main@blue^(0+1280),c
   527  00173C                     
   528                           ;main.c: 33:         ADCC_DischargeSampleCapacitor();
   529  00173C  EC7F  F00E         	call	_ADCC_DischargeSampleCapacitor	;wreg free
   530  001740                     
   531                           ;main.c: 34:         white = map(ADCC_GetSingleConversion(POT4),0,4095,0,255);
   532  001740  0E12               	movlw	18
   533  001742  EC04  F00E         	call	_ADCC_GetSingleConversion
   534  001746  C501  F51B         	movff	?_ADCC_GetSingleConversion,map@x
   535  00174A  C502  F51C         	movff	?_ADCC_GetSingleConversion+1,map@x+1
   536  00174E  6A1D               	clrf	(map@x+2)^(0+1280),c
   537  001750  6A1E               	clrf	(map@x+3)^(0+1280),c
   538  001752  0E00               	movlw	0
   539  001754  6E1F               	movwf	map@in_min^(0+1280),c
   540  001756  0E00               	movlw	0
   541  001758  6E20               	movwf	(map@in_min+1)^(0+1280),c
   542  00175A  0E00               	movlw	0
   543  00175C  6E21               	movwf	(map@in_min+2)^(0+1280),c
   544  00175E  0E00               	movlw	0
   545  001760  6E22               	movwf	(map@in_min+3)^(0+1280),c
   546  001762  0EFF               	movlw	255
   547  001764  6E23               	movwf	map@in_max^(0+1280),c
   548  001766  0E0F               	movlw	15
   549  001768  6E24               	movwf	(map@in_max+1)^(0+1280),c
   550  00176A  0E00               	movlw	0
   551  00176C  6E25               	movwf	(map@in_max+2)^(0+1280),c
   552  00176E  0E00               	movlw	0
   553  001770  6E26               	movwf	(map@in_max+3)^(0+1280),c
   554  001772  0E00               	movlw	0
   555  001774  6E27               	movwf	map@out_min^(0+1280),c
   556  001776  0E00               	movlw	0
   557  001778  6E28               	movwf	(map@out_min+1)^(0+1280),c
   558  00177A  0E00               	movlw	0
   559  00177C  6E29               	movwf	(map@out_min+2)^(0+1280),c
   560  00177E  0E00               	movlw	0
   561  001780  6E2A               	movwf	(map@out_min+3)^(0+1280),c
   562  001782  0EFF               	movlw	255
   563  001784  6E2B               	movwf	map@out_max^(0+1280),c
   564  001786  0E00               	movlw	0
   565  001788  6E2C               	movwf	(map@out_max+1)^(0+1280),c
   566  00178A  0E00               	movlw	0
   567  00178C  6E2D               	movwf	(map@out_max+2)^(0+1280),c
   568  00178E  0E00               	movlw	0
   569  001790  6E2E               	movwf	(map@out_max+3)^(0+1280),c
   570  001792  EC33  F00D         	call	_map	;wreg free
   571  001796  501B               	movf	?_map^(0+1280),w,c
   572  001798  6E33               	movwf	main@white^(0+1280),c
   573  00179A                     
   574                           ;main.c: 36:         for(uint8_t i = 0; i <= 3; i++)
   575  00179A  0E00               	movlw	0
   576  00179C  6E34               	movwf	main@i^(0+1280),c
   577  00179E                     l1485:
   578                           
   579                           ;main.c: 37:         {;main.c: 38:             c_WS2812B_Write(red, green, blue, white);
   580  00179E  C531  F503         	movff	main@green,c_WS2812B_Write@G
   581  0017A2  C532  F504         	movff	main@blue,c_WS2812B_Write@B
   582  0017A6  C533  F505         	movff	main@white,c_WS2812B_Write@W
   583  0017AA  5030               	movf	main@red^(0+1280),w,c
   584  0017AC  EC2E  F00E         	call	_c_WS2812B_Write
   585  0017B0                     
   586                           ;main.c: 39:         }
   587  0017B0  2A34               	incf	main@i^(0+1280),f,c
   588  0017B2  0E03               	movlw	3
   589  0017B4  6434               	cpfsgt	main@i^(0+1280),c
   590  0017B6  EFDF  F00B         	goto	u341
   591  0017BA  EFE1  F00B         	goto	u340
   592  0017BE                     u341:
   593  0017BE  EFCF  F00B         	goto	l1485
   594  0017C2                     u340:
   595  0017C2  EF09  F00B         	goto	l1461
   596  0017C6  EFFE  F07F         	goto	start
   597  0017CA                     __end_of_main:
   598                           	callstack 0
   599                           
   600 ;; *************** function _map *****************
   601 ;; Defined at:
   602 ;;		line 11 in file "DivFunctions.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  x               4   26[COMRAM] long 
   605 ;;  in_min          4   30[COMRAM] long 
   606 ;;  in_max          4   34[COMRAM] long 
   607 ;;  out_min         4   38[COMRAM] long 
   608 ;;  out_max         4   42[COMRAM] long 
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  4   26[COMRAM] long 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   620 ;;      Params:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   623 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   624 ;;Total ram usage:       20 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; Hardware stack levels required when called: 1
   627 ;; This function calls:
   628 ;;		___aldiv
   629 ;;		___lmul
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text1
   636  001A66                     __ptext1:
   637                           	callstack 0
   638  001A66                     _map:
   639                           	callstack 126
   640  001A66                     
   641                           ;DivFunctions.c: 12:   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + o
      +                          ut_min;
   642  001A66  501F               	movf	map@in_min^(0+1280),w,c
   643  001A68  5C1B               	subwf	map@x^(0+1280),w,c
   644  001A6A  6E01               	movwf	___lmul@multiplier^(0+1280),c
   645  001A6C  5020               	movf	(map@in_min+1)^(0+1280),w,c
   646  001A6E  581C               	subwfb	(map@x+1)^(0+1280),w,c
   647  001A70  6E02               	movwf	(___lmul@multiplier+1)^(0+1280),c
   648  001A72  5021               	movf	(map@in_min+2)^(0+1280),w,c
   649  001A74  581D               	subwfb	(map@x+2)^(0+1280),w,c
   650  001A76  6E03               	movwf	(___lmul@multiplier+2)^(0+1280),c
   651  001A78  5022               	movf	(map@in_min+3)^(0+1280),w,c
   652  001A7A  581E               	subwfb	(map@x+3)^(0+1280),w,c
   653  001A7C  6E04               	movwf	(___lmul@multiplier+3)^(0+1280),c
   654  001A7E  5027               	movf	map@out_min^(0+1280),w,c
   655  001A80  5C2B               	subwf	map@out_max^(0+1280),w,c
   656  001A82  6E05               	movwf	___lmul@multiplicand^(0+1280),c
   657  001A84  5028               	movf	(map@out_min+1)^(0+1280),w,c
   658  001A86  582C               	subwfb	(map@out_max+1)^(0+1280),w,c
   659  001A88  6E06               	movwf	(___lmul@multiplicand+1)^(0+1280),c
   660  001A8A  5029               	movf	(map@out_min+2)^(0+1280),w,c
   661  001A8C  582D               	subwfb	(map@out_max+2)^(0+1280),w,c
   662  001A8E  6E07               	movwf	(___lmul@multiplicand+2)^(0+1280),c
   663  001A90  502A               	movf	(map@out_min+3)^(0+1280),w,c
   664  001A92  582E               	subwfb	(map@out_max+3)^(0+1280),w,c
   665  001A94  6E08               	movwf	(___lmul@multiplicand+3)^(0+1280),c
   666  001A96  EC70  F00D         	call	___lmul	;wreg free
   667  001A9A  C501  F50D         	movff	?___lmul,___aldiv@dividend
   668  001A9E  C502  F50E         	movff	?___lmul+1,___aldiv@dividend+1
   669  001AA2  C503  F50F         	movff	?___lmul+2,___aldiv@dividend+2
   670  001AA6  C504  F510         	movff	?___lmul+3,___aldiv@dividend+3
   671  001AAA  501F               	movf	map@in_min^(0+1280),w,c
   672  001AAC  5C23               	subwf	map@in_max^(0+1280),w,c
   673  001AAE  6E11               	movwf	___aldiv@divisor^(0+1280),c
   674  001AB0  5020               	movf	(map@in_min+1)^(0+1280),w,c
   675  001AB2  5824               	subwfb	(map@in_max+1)^(0+1280),w,c
   676  001AB4  6E12               	movwf	(___aldiv@divisor+1)^(0+1280),c
   677  001AB6  5021               	movf	(map@in_min+2)^(0+1280),w,c
   678  001AB8  5825               	subwfb	(map@in_max+2)^(0+1280),w,c
   679  001ABA  6E13               	movwf	(___aldiv@divisor+2)^(0+1280),c
   680  001ABC  5022               	movf	(map@in_min+3)^(0+1280),w,c
   681  001ABE  5826               	subwfb	(map@in_max+3)^(0+1280),w,c
   682  001AC0  6E14               	movwf	(___aldiv@divisor+3)^(0+1280),c
   683  001AC2  ECE5  F00B         	call	___aldiv	;wreg free
   684  001AC6  5027               	movf	map@out_min^(0+1280),w,c
   685  001AC8  240D               	addwf	?___aldiv^(0+1280),w,c
   686  001ACA  6E1B               	movwf	?_map^(0+1280),c
   687  001ACC  5028               	movf	(map@out_min+1)^(0+1280),w,c
   688  001ACE  200E               	addwfc	(?___aldiv+1)^(0+1280),w,c
   689  001AD0  6E1C               	movwf	(?_map+1)^(0+1280),c
   690  001AD2  5029               	movf	(map@out_min+2)^(0+1280),w,c
   691  001AD4  200F               	addwfc	(?___aldiv+2)^(0+1280),w,c
   692  001AD6  6E1D               	movwf	(?_map+2)^(0+1280),c
   693  001AD8  502A               	movf	(map@out_min+3)^(0+1280),w,c
   694  001ADA  2010               	addwfc	(?___aldiv+3)^(0+1280),w,c
   695  001ADC  6E1E               	movwf	(?_map+3)^(0+1280),c
   696  001ADE  0012               	return		;funcret
   697  001AE0                     __end_of_map:
   698                           	callstack 0
   699                           
   700 ;; *************** function ___lmul *****************
   701 ;; Defined at:
   702 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  multiplier      4    0[COMRAM] unsigned long 
   705 ;;  multiplicand    4    4[COMRAM] unsigned long 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  product         4    8[COMRAM] unsigned long 
   708 ;; Return value:  Size  Location     Type
   709 ;;                  4    0[COMRAM] unsigned long 
   710 ;; Registers used:
   711 ;;		wreg, status,2, status,0
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   717 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   718 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   720 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   721 ;;Total ram usage:       12 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; This function calls:
   724 ;;		Nothing
   725 ;; This function is called by:
   726 ;;		_map
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text2
   731  001AE0                     __ptext2:
   732                           	callstack 0
   733  001AE0                     ___lmul:
   734                           	callstack 126
   735  001AE0  0E00               	movlw	0
   736  001AE2  6E09               	movwf	___lmul@product^(0+1280),c
   737  001AE4  0E00               	movlw	0
   738  001AE6  6E0A               	movwf	(___lmul@product+1)^(0+1280),c
   739  001AE8  0E00               	movlw	0
   740  001AEA  6E0B               	movwf	(___lmul@product+2)^(0+1280),c
   741  001AEC  0E00               	movlw	0
   742  001AEE  6E0C               	movwf	(___lmul@product+3)^(0+1280),c
   743  001AF0                     l1385:
   744  001AF0  A001               	btfss	___lmul@multiplier^(0+1280),0,c
   745  001AF2  EF7D  F00D         	goto	u251
   746  001AF6  EF7F  F00D         	goto	u250
   747  001AFA                     u251:
   748  001AFA  EF87  F00D         	goto	l1389
   749  001AFE                     u250:
   750  001AFE  5005               	movf	___lmul@multiplicand^(0+1280),w,c
   751  001B00  2609               	addwf	___lmul@product^(0+1280),f,c
   752  001B02  5006               	movf	(___lmul@multiplicand+1)^(0+1280),w,c
   753  001B04  220A               	addwfc	(___lmul@product+1)^(0+1280),f,c
   754  001B06  5007               	movf	(___lmul@multiplicand+2)^(0+1280),w,c
   755  001B08  220B               	addwfc	(___lmul@product+2)^(0+1280),f,c
   756  001B0A  5008               	movf	(___lmul@multiplicand+3)^(0+1280),w,c
   757  001B0C  220C               	addwfc	(___lmul@product+3)^(0+1280),f,c
   758  001B0E                     l1389:
   759  001B0E  90D8               	bcf	status,0,c
   760  001B10  3605               	rlcf	___lmul@multiplicand^(0+1280),f,c
   761  001B12  3606               	rlcf	(___lmul@multiplicand+1)^(0+1280),f,c
   762  001B14  3607               	rlcf	(___lmul@multiplicand+2)^(0+1280),f,c
   763  001B16  3608               	rlcf	(___lmul@multiplicand+3)^(0+1280),f,c
   764  001B18  90D8               	bcf	status,0,c
   765  001B1A  3204               	rrcf	(___lmul@multiplier+3)^(0+1280),f,c
   766  001B1C  3203               	rrcf	(___lmul@multiplier+2)^(0+1280),f,c
   767  001B1E  3202               	rrcf	(___lmul@multiplier+1)^(0+1280),f,c
   768  001B20  3201               	rrcf	___lmul@multiplier^(0+1280),f,c
   769  001B22  5001               	movf	___lmul@multiplier^(0+1280),w,c
   770  001B24  1002               	iorwf	(___lmul@multiplier+1)^(0+1280),w,c
   771  001B26  1003               	iorwf	(___lmul@multiplier+2)^(0+1280),w,c
   772  001B28  1004               	iorwf	(___lmul@multiplier+3)^(0+1280),w,c
   773  001B2A  A4D8               	btfss	status,2,c
   774  001B2C  EF9A  F00D         	goto	u261
   775  001B30  EF9C  F00D         	goto	u260
   776  001B34                     u261:
   777  001B34  EF78  F00D         	goto	l1385
   778  001B38                     u260:
   779  001B38  C509  F501         	movff	___lmul@product,?___lmul
   780  001B3C  C50A  F502         	movff	___lmul@product+1,?___lmul+1
   781  001B40  C50B  F503         	movff	___lmul@product+2,?___lmul+2
   782  001B44  C50C  F504         	movff	___lmul@product+3,?___lmul+3
   783  001B48  0012               	return		;funcret
   784  001B4A                     __end_of___lmul:
   785                           	callstack 0
   786                           
   787 ;; *************** function ___aldiv *****************
   788 ;; Defined at:
   789 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  dividend        4   12[COMRAM] long 
   792 ;;  divisor         4   16[COMRAM] long 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  quotient        4   22[COMRAM] long 
   795 ;;  sign            1   21[COMRAM] unsigned char 
   796 ;;  counter         1   20[COMRAM] unsigned char 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  4   12[COMRAM] long 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   806 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   807 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   809 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   810 ;;Total ram usage:       14 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_map
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text3
   820  0017CA                     __ptext3:
   821                           	callstack 0
   822  0017CA                     ___aldiv:
   823                           	callstack 126
   824  0017CA  0E00               	movlw	0
   825  0017CC  6E16               	movwf	___aldiv@sign^(0+1280),c
   826  0017CE  BE14               	btfsc	(___aldiv@divisor+3)^(0+1280),7,c
   827  0017D0  EFEE  F00B         	goto	u270
   828  0017D4  EFEC  F00B         	goto	u271
   829  0017D8                     u271:
   830  0017D8  EFF8  F00B         	goto	l1401
   831  0017DC                     u270:
   832  0017DC  1E14               	comf	(___aldiv@divisor+3)^(0+1280),f,c
   833  0017DE  1E13               	comf	(___aldiv@divisor+2)^(0+1280),f,c
   834  0017E0  1E12               	comf	(___aldiv@divisor+1)^(0+1280),f,c
   835  0017E2  6C11               	negf	___aldiv@divisor^(0+1280),c
   836  0017E4  0E00               	movlw	0
   837  0017E6  2212               	addwfc	(___aldiv@divisor+1)^(0+1280),f,c
   838  0017E8  2213               	addwfc	(___aldiv@divisor+2)^(0+1280),f,c
   839  0017EA  2214               	addwfc	(___aldiv@divisor+3)^(0+1280),f,c
   840  0017EC  0E01               	movlw	1
   841  0017EE  6E16               	movwf	___aldiv@sign^(0+1280),c
   842  0017F0                     l1401:
   843  0017F0  BE10               	btfsc	(___aldiv@dividend+3)^(0+1280),7,c
   844  0017F2  EFFF  F00B         	goto	u280
   845  0017F6  EFFD  F00B         	goto	u281
   846  0017FA                     u281:
   847  0017FA  EF09  F00C         	goto	l1407
   848  0017FE                     u280:
   849  0017FE  1E10               	comf	(___aldiv@dividend+3)^(0+1280),f,c
   850  001800  1E0F               	comf	(___aldiv@dividend+2)^(0+1280),f,c
   851  001802  1E0E               	comf	(___aldiv@dividend+1)^(0+1280),f,c
   852  001804  6C0D               	negf	___aldiv@dividend^(0+1280),c
   853  001806  0E00               	movlw	0
   854  001808  220E               	addwfc	(___aldiv@dividend+1)^(0+1280),f,c
   855  00180A  220F               	addwfc	(___aldiv@dividend+2)^(0+1280),f,c
   856  00180C  2210               	addwfc	(___aldiv@dividend+3)^(0+1280),f,c
   857  00180E  0E01               	movlw	1
   858  001810  1A16               	xorwf	___aldiv@sign^(0+1280),f,c
   859  001812                     l1407:
   860  001812  0E00               	movlw	0
   861  001814  6E17               	movwf	___aldiv@quotient^(0+1280),c
   862  001816  0E00               	movlw	0
   863  001818  6E18               	movwf	(___aldiv@quotient+1)^(0+1280),c
   864  00181A  0E00               	movlw	0
   865  00181C  6E19               	movwf	(___aldiv@quotient+2)^(0+1280),c
   866  00181E  0E00               	movlw	0
   867  001820  6E1A               	movwf	(___aldiv@quotient+3)^(0+1280),c
   868  001822  5011               	movf	___aldiv@divisor^(0+1280),w,c
   869  001824  1012               	iorwf	(___aldiv@divisor+1)^(0+1280),w,c
   870  001826  1013               	iorwf	(___aldiv@divisor+2)^(0+1280),w,c
   871  001828  1014               	iorwf	(___aldiv@divisor+3)^(0+1280),w,c
   872  00182A  B4D8               	btfsc	status,2,c
   873  00182C  EF1A  F00C         	goto	u291
   874  001830  EF1C  F00C         	goto	u290
   875  001834                     u291:
   876  001834  EF52  F00C         	goto	l1429
   877  001838                     u290:
   878  001838  0E01               	movlw	1
   879  00183A  6E15               	movwf	___aldiv@counter^(0+1280),c
   880  00183C  EF26  F00C         	goto	l1415
   881  001840                     l1413:
   882  001840  90D8               	bcf	status,0,c
   883  001842  3611               	rlcf	___aldiv@divisor^(0+1280),f,c
   884  001844  3612               	rlcf	(___aldiv@divisor+1)^(0+1280),f,c
   885  001846  3613               	rlcf	(___aldiv@divisor+2)^(0+1280),f,c
   886  001848  3614               	rlcf	(___aldiv@divisor+3)^(0+1280),f,c
   887  00184A  2A15               	incf	___aldiv@counter^(0+1280),f,c
   888  00184C                     l1415:
   889  00184C  AE14               	btfss	(___aldiv@divisor+3)^(0+1280),7,c
   890  00184E  EF2B  F00C         	goto	u301
   891  001852  EF2D  F00C         	goto	u300
   892  001856                     u301:
   893  001856  EF20  F00C         	goto	l1413
   894  00185A                     u300:
   895  00185A                     l1417:
   896  00185A  90D8               	bcf	status,0,c
   897  00185C  3617               	rlcf	___aldiv@quotient^(0+1280),f,c
   898  00185E  3618               	rlcf	(___aldiv@quotient+1)^(0+1280),f,c
   899  001860  3619               	rlcf	(___aldiv@quotient+2)^(0+1280),f,c
   900  001862  361A               	rlcf	(___aldiv@quotient+3)^(0+1280),f,c
   901  001864  5011               	movf	___aldiv@divisor^(0+1280),w,c
   902  001866  5C0D               	subwf	___aldiv@dividend^(0+1280),w,c
   903  001868  5012               	movf	(___aldiv@divisor+1)^(0+1280),w,c
   904  00186A  580E               	subwfb	(___aldiv@dividend+1)^(0+1280),w,c
   905  00186C  5013               	movf	(___aldiv@divisor+2)^(0+1280),w,c
   906  00186E  580F               	subwfb	(___aldiv@dividend+2)^(0+1280),w,c
   907  001870  5014               	movf	(___aldiv@divisor+3)^(0+1280),w,c
   908  001872  5810               	subwfb	(___aldiv@dividend+3)^(0+1280),w,c
   909  001874  A0D8               	btfss	status,0,c
   910  001876  EF3F  F00C         	goto	u311
   911  00187A  EF41  F00C         	goto	u310
   912  00187E                     u311:
   913  00187E  EF4A  F00C         	goto	l1425
   914  001882                     u310:
   915  001882  5011               	movf	___aldiv@divisor^(0+1280),w,c
   916  001884  5E0D               	subwf	___aldiv@dividend^(0+1280),f,c
   917  001886  5012               	movf	(___aldiv@divisor+1)^(0+1280),w,c
   918  001888  5A0E               	subwfb	(___aldiv@dividend+1)^(0+1280),f,c
   919  00188A  5013               	movf	(___aldiv@divisor+2)^(0+1280),w,c
   920  00188C  5A0F               	subwfb	(___aldiv@dividend+2)^(0+1280),f,c
   921  00188E  5014               	movf	(___aldiv@divisor+3)^(0+1280),w,c
   922  001890  5A10               	subwfb	(___aldiv@dividend+3)^(0+1280),f,c
   923  001892  8017               	bsf	___aldiv@quotient^(0+1280),0,c
   924  001894                     l1425:
   925  001894  90D8               	bcf	status,0,c
   926  001896  3214               	rrcf	(___aldiv@divisor+3)^(0+1280),f,c
   927  001898  3213               	rrcf	(___aldiv@divisor+2)^(0+1280),f,c
   928  00189A  3212               	rrcf	(___aldiv@divisor+1)^(0+1280),f,c
   929  00189C  3211               	rrcf	___aldiv@divisor^(0+1280),f,c
   930  00189E  2E15               	decfsz	___aldiv@counter^(0+1280),f,c
   931  0018A0  EF2D  F00C         	goto	l1417
   932  0018A4                     l1429:
   933  0018A4  5016               	movf	___aldiv@sign^(0+1280),w,c
   934  0018A6  B4D8               	btfsc	status,2,c
   935  0018A8  EF58  F00C         	goto	u321
   936  0018AC  EF5A  F00C         	goto	u320
   937  0018B0                     u321:
   938  0018B0  EF62  F00C         	goto	l1433
   939  0018B4                     u320:
   940  0018B4  1E1A               	comf	(___aldiv@quotient+3)^(0+1280),f,c
   941  0018B6  1E19               	comf	(___aldiv@quotient+2)^(0+1280),f,c
   942  0018B8  1E18               	comf	(___aldiv@quotient+1)^(0+1280),f,c
   943  0018BA  6C17               	negf	___aldiv@quotient^(0+1280),c
   944  0018BC  0E00               	movlw	0
   945  0018BE  2218               	addwfc	(___aldiv@quotient+1)^(0+1280),f,c
   946  0018C0  2219               	addwfc	(___aldiv@quotient+2)^(0+1280),f,c
   947  0018C2  221A               	addwfc	(___aldiv@quotient+3)^(0+1280),f,c
   948  0018C4                     l1433:
   949  0018C4  C517  F50D         	movff	___aldiv@quotient,?___aldiv
   950  0018C8  C518  F50E         	movff	___aldiv@quotient+1,?___aldiv+1
   951  0018CC  C519  F50F         	movff	___aldiv@quotient+2,?___aldiv+2
   952  0018D0  C51A  F510         	movff	___aldiv@quotient+3,?___aldiv+3
   953  0018D4  0012               	return		;funcret
   954  0018D6                     __end_of___aldiv:
   955                           	callstack 0
   956                           
   957 ;; *************** function _c_WS2812B_Write *****************
   958 ;; Defined at:
   959 ;;		line 3 in file "DivFunctions.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  R               1    wreg     unsigned char 
   962 ;;  G               1    2[COMRAM] unsigned char 
   963 ;;  B               1    3[COMRAM] unsigned char 
   964 ;;  W               1    4[COMRAM] unsigned char 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  R               1    5[COMRAM] unsigned char 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, status,2, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   976 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   980 ;;Total ram usage:        4 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; Hardware stack levels required when called: 3
   983 ;; This function calls:
   984 ;;		_ws_send_byte
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text4
   991  001C5C                     __ptext4:
   992                           	callstack 0
   993  001C5C                     _c_WS2812B_Write:
   994                           	callstack 124
   995                           
   996                           ;incstack = 0
   997                           ;c_WS2812B_Write@R stored from wreg
   998  001C5C  6E06               	movwf	c_WS2812B_Write@R^(0+1280),c
   999  001C5E                     
  1000                           ;DivFunctions.c: 3: void c_WS2812B_Write(uint8_t R, uint8_t G, uint8_t B, uint8_t W);Div
      +                          Functions.c: 4: {;DivFunctions.c: 5:     ws_send_byte(G);
  1001  001C5E  5003               	movf	c_WS2812B_Write@G^(0+1280),w,c
  1002  001C60  EC6B  F00C         	call	_ws_send_byte
  1003                           
  1004                           ;DivFunctions.c: 6:     ws_send_byte(R);
  1005  001C64  5006               	movf	c_WS2812B_Write@R^(0+1280),w,c
  1006  001C66  EC6B  F00C         	call	_ws_send_byte
  1007                           
  1008                           ;DivFunctions.c: 7:     ws_send_byte(B);
  1009  001C6A  5004               	movf	c_WS2812B_Write@B^(0+1280),w,c
  1010  001C6C  EC6B  F00C         	call	_ws_send_byte
  1011                           
  1012                           ;DivFunctions.c: 8:     ws_send_byte(W);
  1013  001C70  5005               	movf	c_WS2812B_Write@W^(0+1280),w,c
  1014  001C72  EC6B  F00C         	call	_ws_send_byte
  1015  001C76  0012               	return		;funcret
  1016  001C78                     __end_of_c_WS2812B_Write:
  1017                           	callstack 0
  1018                           
  1019 ;; *************** function _ws_send_byte *****************
  1020 ;; Defined at:
  1021 ;;		line 24 in file "DivFunctions.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  K               1    wreg     unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  K               1    1[COMRAM] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1039 ;;Total ram usage:        1 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 2
  1042 ;; This function calls:
  1043 ;;		_onePulse
  1044 ;;		_zeroPulse
  1045 ;; This function is called by:
  1046 ;;		_c_WS2812B_Write
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text5
  1051  0018D6                     __ptext5:
  1052                           	callstack 0
  1053  0018D6                     _ws_send_byte:
  1054                           	callstack 124
  1055                           
  1056                           ;incstack = 0
  1057                           ;ws_send_byte@K stored from wreg
  1058  0018D6  6E02               	movwf	ws_send_byte@K^(0+1280),c
  1059  0018D8                     
  1060                           ;DivFunctions.c: 24: void ws_send_byte(uint8_t K);DivFunctions.c: 25: {;DivFunctions.c: 
      +                          26:     if(K & 0b10000000) {onePulse();}
  1061  0018D8  AE02               	btfss	ws_send_byte@K^(0+1280),7,c
  1062  0018DA  EF71  F00C         	goto	u21
  1063  0018DE  EF73  F00C         	goto	u20
  1064  0018E2                     u21:
  1065  0018E2  EF77  F00C         	goto	l1093
  1066  0018E6                     u20:
  1067  0018E6  EC7B  F00E         	call	_onePulse	;wreg free
  1068  0018EA  EF79  F00C         	goto	l1095
  1069  0018EE                     l1093:
  1070  0018EE  EC77  F00E         	call	_zeroPulse	;wreg free
  1071  0018F2                     l1095:
  1072                           
  1073                           ;DivFunctions.c: 29:     if(K & 0b01000000) {onePulse();}
  1074  0018F2  AC02               	btfss	ws_send_byte@K^(0+1280),6,c
  1075  0018F4  EF7E  F00C         	goto	u31
  1076  0018F8  EF80  F00C         	goto	u30
  1077  0018FC                     u31:
  1078  0018FC  EF84  F00C         	goto	l1099
  1079  001900                     u30:
  1080  001900  EC7B  F00E         	call	_onePulse	;wreg free
  1081  001904  EF86  F00C         	goto	l1101
  1082  001908                     l1099:
  1083  001908  EC77  F00E         	call	_zeroPulse	;wreg free
  1084  00190C                     l1101:
  1085                           
  1086                           ;DivFunctions.c: 32:     if(K & 0b00100000) {onePulse();}
  1087  00190C  AA02               	btfss	ws_send_byte@K^(0+1280),5,c
  1088  00190E  EF8B  F00C         	goto	u41
  1089  001912  EF8D  F00C         	goto	u40
  1090  001916                     u41:
  1091  001916  EF91  F00C         	goto	l1105
  1092  00191A                     u40:
  1093  00191A  EC7B  F00E         	call	_onePulse	;wreg free
  1094  00191E  EF93  F00C         	goto	l1107
  1095  001922                     l1105:
  1096  001922  EC77  F00E         	call	_zeroPulse	;wreg free
  1097  001926                     l1107:
  1098                           
  1099                           ;DivFunctions.c: 35:     if(K & 0b00010000) {onePulse();}
  1100  001926  A802               	btfss	ws_send_byte@K^(0+1280),4,c
  1101  001928  EF98  F00C         	goto	u51
  1102  00192C  EF9A  F00C         	goto	u50
  1103  001930                     u51:
  1104  001930  EF9E  F00C         	goto	l1111
  1105  001934                     u50:
  1106  001934  EC7B  F00E         	call	_onePulse	;wreg free
  1107  001938  EFA0  F00C         	goto	l1113
  1108  00193C                     l1111:
  1109  00193C  EC77  F00E         	call	_zeroPulse	;wreg free
  1110  001940                     l1113:
  1111                           
  1112                           ;DivFunctions.c: 38:     if(K & 0b00001000) {onePulse();}
  1113  001940  A602               	btfss	ws_send_byte@K^(0+1280),3,c
  1114  001942  EFA5  F00C         	goto	u61
  1115  001946  EFA7  F00C         	goto	u60
  1116  00194A                     u61:
  1117  00194A  EFAB  F00C         	goto	l1117
  1118  00194E                     u60:
  1119  00194E  EC7B  F00E         	call	_onePulse	;wreg free
  1120  001952  EFAD  F00C         	goto	l1119
  1121  001956                     l1117:
  1122  001956  EC77  F00E         	call	_zeroPulse	;wreg free
  1123  00195A                     l1119:
  1124                           
  1125                           ;DivFunctions.c: 41:     if(K & 0b00000100) {onePulse();}
  1126  00195A  A402               	btfss	ws_send_byte@K^(0+1280),2,c
  1127  00195C  EFB2  F00C         	goto	u71
  1128  001960  EFB4  F00C         	goto	u70
  1129  001964                     u71:
  1130  001964  EFB8  F00C         	goto	l1123
  1131  001968                     u70:
  1132  001968  EC7B  F00E         	call	_onePulse	;wreg free
  1133  00196C  EFBA  F00C         	goto	l1125
  1134  001970                     l1123:
  1135  001970  EC77  F00E         	call	_zeroPulse	;wreg free
  1136  001974                     l1125:
  1137                           
  1138                           ;DivFunctions.c: 44:     if(K & 0b00000010) {onePulse();}
  1139  001974  A202               	btfss	ws_send_byte@K^(0+1280),1,c
  1140  001976  EFBF  F00C         	goto	u81
  1141  00197A  EFC1  F00C         	goto	u80
  1142  00197E                     u81:
  1143  00197E  EFC5  F00C         	goto	l1129
  1144  001982                     u80:
  1145  001982  EC7B  F00E         	call	_onePulse	;wreg free
  1146  001986  EFC7  F00C         	goto	l1131
  1147  00198A                     l1129:
  1148  00198A  EC77  F00E         	call	_zeroPulse	;wreg free
  1149  00198E                     l1131:
  1150                           
  1151                           ;DivFunctions.c: 47:     if(K & 0b00000001) {onePulse();}
  1152  00198E  A002               	btfss	ws_send_byte@K^(0+1280),0,c
  1153  001990  EFCC  F00C         	goto	u91
  1154  001994  EFCE  F00C         	goto	u90
  1155  001998                     u91:
  1156  001998  EFD2  F00C         	goto	l1135
  1157  00199C                     u90:
  1158  00199C  EC7B  F00E         	call	_onePulse	;wreg free
  1159  0019A0  EFD4  F00C         	goto	l385
  1160  0019A4                     l1135:
  1161  0019A4  EC77  F00E         	call	_zeroPulse	;wreg free
  1162  0019A8                     l385:
  1163  0019A8  0012               	return		;funcret
  1164  0019AA                     __end_of_ws_send_byte:
  1165                           	callstack 0
  1166                           
  1167 ;; *************** function _zeroPulse *****************
  1168 ;; Defined at:
  1169 ;;		line 20 in file "DivFunctions.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1187 ;;Total ram usage:        0 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; Hardware stack levels required when called: 1
  1190 ;; This function calls:
  1191 ;;		_SPI1_ExchangeByte
  1192 ;; This function is called by:
  1193 ;;		_ws_send_byte
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text6
  1198  001CEE                     __ptext6:
  1199                           	callstack 0
  1200  001CEE                     _zeroPulse:
  1201                           	callstack 124
  1202  001CEE                     
  1203                           ;DivFunctions.c: 22:     SPI1_ExchangeByte(0xC0);
  1204  001CEE  0EC0               	movlw	192
  1205  001CF0  EC1D  F00E         	call	_SPI1_ExchangeByte
  1206  001CF4  0012               	return		;funcret
  1207  001CF6                     __end_of_zeroPulse:
  1208                           	callstack 0
  1209                           
  1210 ;; *************** function _onePulse *****************
  1211 ;; Defined at:
  1212 ;;		line 15 in file "DivFunctions.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; Hardware stack levels required when called: 1
  1233 ;; This function calls:
  1234 ;;		_SPI1_ExchangeByte
  1235 ;; This function is called by:
  1236 ;;		_ws_send_byte
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text7
  1241  001CF6                     __ptext7:
  1242                           	callstack 0
  1243  001CF6                     _onePulse:
  1244                           	callstack 124
  1245  001CF6                     
  1246                           ;DivFunctions.c: 17:     SPI1_ExchangeByte(0xF0);
  1247  001CF6  0EF0               	movlw	240
  1248  001CF8  EC1D  F00E         	call	_SPI1_ExchangeByte
  1249  001CFC  0012               	return		;funcret
  1250  001CFE                     __end_of_onePulse:
  1251                           	callstack 0
  1252                           
  1253 ;; *************** function _SPI1_ExchangeByte *****************
  1254 ;; Defined at:
  1255 ;;		line 100 in file "mcc_generated_files/spi1.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  data            1    wreg     unsigned char 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  data            1    0[COMRAM] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      unsigned char 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1272 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1273 ;;Total ram usage:        1 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_onePulse
  1279 ;;		_zeroPulse
  1280 ;;		_SPI1_WriteBlock
  1281 ;;		_SPI1_ReadBlock
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text8
  1286  001C3A                     __ptext8:
  1287                           	callstack 0
  1288  001C3A                     _SPI1_ExchangeByte:
  1289                           	callstack 124
  1290                           
  1291                           ;incstack = 0
  1292                           ;SPI1_ExchangeByte@data stored from wreg
  1293  001C3A  6E01               	movwf	SPI1_ExchangeByte@data^(0+1280),c
  1294  001C3C                     
  1295                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
  1296  001C3C  0E01               	movlw	1
  1297  001C3E  0100               	movlb	0	; () banked
  1298  001C40  6F82               	movwf	130,b	;volatile
  1299  001C42                     
  1300                           ; BSR set to: 0
  1301                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
  1302  001C42  0061  F404  F081   	movff	SPI1_ExchangeByte@data,129	;volatile
  1303  001C48                     l296:
  1304  001C48  A0B6               	btfss	182,0,c	;volatile
  1305  001C4A  EF29  F00E         	goto	u11
  1306  001C4E  EF2B  F00E         	goto	u10
  1307  001C52                     u11:
  1308  001C52  EF24  F00E         	goto	l296
  1309  001C56                     u10:
  1310  001C56                     
  1311                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
  1312  001C56  0100               	movlb	0	; () banked
  1313  001C58  5180               	movf	128,w,b	;volatile
  1314  001C5A                     
  1315                           ; BSR set to: 0
  1316  001C5A  0012               	return		;funcret
  1317  001C5C                     __end_of_SPI1_ExchangeByte:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _SYSTEM_Initialize *****************
  1321 ;; Defined at:
  1322 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1340 ;;Total ram usage:        0 bytes
  1341 ;; Hardware stack levels used: 1
  1342 ;; Hardware stack levels required when called: 1
  1343 ;; This function calls:
  1344 ;;		_ADCC_Initialize
  1345 ;;		_OSCILLATOR_Initialize
  1346 ;;		_PIN_MANAGER_Initialize
  1347 ;;		_PMD_Initialize
  1348 ;;		_SPI1_Initialize
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text9
  1355  001CCA                     __ptext9:
  1356                           	callstack 0
  1357  001CCA                     _SYSTEM_Initialize:
  1358                           	callstack 126
  1359  001CCA                     
  1360                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  1361  001CCA  EC3C  F00E         	call	_PMD_Initialize	;wreg free
  1362                           
  1363                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1364  001CCE  ECA5  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  1365                           
  1366                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1367  001CD2  EC4A  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  1368                           
  1369                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
  1370  001CD6  ECD6  F00D         	call	_ADCC_Initialize	;wreg free
  1371                           
  1372                           ;mcc_generated_files/mcc.c: 56:     SPI1_Initialize();
  1373  001CDA  EC58  F00E         	call	_SPI1_Initialize	;wreg free
  1374  001CDE  0012               	return		;funcret
  1375  001CE0                     __end_of_SYSTEM_Initialize:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _SPI1_Initialize *****************
  1379 ;; Defined at:
  1380 ;;		line 64 in file "mcc_generated_files/spi1.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_SYSTEM_Initialize
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text10
  1408  001CB0                     __ptext10:
  1409                           	callstack 0
  1410  001CB0                     _SPI1_Initialize:
  1411                           	callstack 126
  1412  001CB0                     
  1413                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
  1414  001CB0  0E02               	movlw	2
  1415  001CB2  0100               	movlb	0	; () banked
  1416  001CB4  6F84               	movwf	132,b	;volatile
  1417                           
  1418                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
  1419  001CB6  0E40               	movlw	64
  1420  001CB8  6F85               	movwf	133,b	;volatile
  1421                           
  1422                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
  1423  001CBA  0E00               	movlw	0
  1424  001CBC  6F86               	movwf	134,b	;volatile
  1425                           
  1426                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
  1427  001CBE  0E00               	movlw	0
  1428  001CC0  6F8C               	movwf	140,b	;volatile
  1429                           
  1430                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x03;
  1431  001CC2  0E03               	movlw	3
  1432  001CC4  6F89               	movwf	137,b	;volatile
  1433  001CC6                     
  1434                           ; BSR set to: 0
  1435                           ;mcc_generated_files/spi1.c: 76:     TRISBbits.TRISB6 = 0;
  1436  001CC6  9CC7               	bcf	199,6,c	;volatile
  1437  001CC8                     
  1438                           ; BSR set to: 0
  1439  001CC8  0012               	return		;funcret
  1440  001CCA                     __end_of_SPI1_Initialize:
  1441                           	callstack 0
  1442                           
  1443 ;; *************** function _PMD_Initialize *****************
  1444 ;; Defined at:
  1445 ;;		line 75 in file "mcc_generated_files/mcc.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used: 1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_SYSTEM_Initialize
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text11
  1473  001C78                     __ptext11:
  1474                           	callstack 0
  1475  001C78                     _PMD_Initialize:
  1476                           	callstack 126
  1477  001C78                     
  1478                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  1479  001C78  0E00               	movlw	0
  1480  001C7A  0100               	movlb	0	; () banked
  1481  001C7C  6F63               	movwf	99,b	;volatile
  1482                           
  1483                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  1484  001C7E  0E00               	movlw	0
  1485  001C80  6F64               	movwf	100,b	;volatile
  1486                           
  1487                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  1488  001C82  0E00               	movlw	0
  1489  001C84  6F65               	movwf	101,b	;volatile
  1490                           
  1491                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  1492  001C86  0E00               	movlw	0
  1493  001C88  6F66               	movwf	102,b	;volatile
  1494                           
  1495                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  1496  001C8A  0E00               	movlw	0
  1497  001C8C  6F67               	movwf	103,b	;volatile
  1498                           
  1499                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  1500  001C8E  0E00               	movlw	0
  1501  001C90  6F68               	movwf	104,b	;volatile
  1502  001C92                     
  1503                           ; BSR set to: 0
  1504  001C92  0012               	return		;funcret
  1505  001C94                     __end_of_PMD_Initialize:
  1506                           	callstack 0
  1507                           
  1508 ;; *************** function _PIN_MANAGER_Initialize *****************
  1509 ;; Defined at:
  1510 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_SYSTEM_Initialize
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text12
  1538  001B4A                     __ptext12:
  1539                           	callstack 0
  1540  001B4A                     _PIN_MANAGER_Initialize:
  1541                           	callstack 126
  1542  001B4A                     
  1543                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1544  001B4A  0E00               	movlw	0
  1545  001B4C  6EBE               	movwf	190,c	;volatile
  1546                           
  1547                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1548  001B4E  0E00               	movlw	0
  1549  001B50  6EBF               	movwf	191,c	;volatile
  1550                           
  1551                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1552  001B52  0E00               	movlw	0
  1553  001B54  6EC0               	movwf	192,c	;volatile
  1554                           
  1555                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  1556  001B56  0E3F               	movlw	63
  1557  001B58  6EC6               	movwf	198,c	;volatile
  1558                           
  1559                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xA0;
  1560  001B5A  0EA0               	movlw	160
  1561  001B5C  6EC7               	movwf	199,c	;volatile
  1562  001B5E                     
  1563                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  1564  001B5E  68C8               	setf	200,c	;volatile
  1565  001B60                     
  1566                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  1567  001B60  0104               	movlb	4	; () banked
  1568  001B62  6910               	setf	16,b	;volatile
  1569                           
  1570                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xA0;
  1571  001B64  0EA0               	movlw	160
  1572  001B66  6F08               	movwf	8,b	;volatile
  1573                           
  1574                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  1575  001B68  0E17               	movlw	23
  1576  001B6A  6F00               	movwf	0,b	;volatile
  1577                           
  1578                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1579  001B6C  0E00               	movlw	0
  1580  001B6E  6F09               	movwf	9,b	;volatile
  1581                           
  1582                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  1583  001B70  0E00               	movlw	0
  1584  001B72  6F01               	movwf	1,b	;volatile
  1585                           
  1586                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  1587  001B74  0E00               	movlw	0
  1588  001B76  6F11               	movwf	17,b	;volatile
  1589                           
  1590                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  1591  001B78  0E00               	movlw	0
  1592  001B7A  6F02               	movwf	2,b	;volatile
  1593                           
  1594                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  1595  001B7C  0E00               	movlw	0
  1596  001B7E  6F0A               	movwf	10,b	;volatile
  1597                           
  1598                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  1599  001B80  0E00               	movlw	0
  1600  001B82  6F12               	movwf	18,b	;volatile
  1601                           
  1602                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  1603  001B84  0E37               	movlw	55
  1604  001B86  6F03               	movwf	3,b	;volatile
  1605                           
  1606                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  1607  001B88  0EF0               	movlw	240
  1608  001B8A  6F0B               	movwf	11,b	;volatile
  1609  001B8C                     
  1610                           ; BSR set to: 4
  1611                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  1612  001B8C  6913               	setf	19,b	;volatile
  1613                           
  1614                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  1615  001B8E  0E3F               	movlw	63
  1616  001B90  6F04               	movwf	4,b	;volatile
  1617                           
  1618                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  1619  001B92  0EF0               	movlw	240
  1620  001B94  6F0C               	movwf	12,b	;volatile
  1621  001B96                     
  1622                           ; BSR set to: 4
  1623                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  1624  001B96  6914               	setf	20,b	;volatile
  1625                           
  1626                           ;mcc_generated_files/pin_manager.c: 113:     SPI1SCKPPS = 0x0E;
  1627  001B98  0E0E               	movlw	14
  1628  001B9A  0102               	movlb	2	; () banked
  1629  001B9C  6F6A               	movwf	106,b	;volatile
  1630                           
  1631                           ;mcc_generated_files/pin_manager.c: 114:     RB6PPS = 0x1B;
  1632  001B9E  0E1B               	movlw	27
  1633  001BA0  6F0F               	movwf	15,b	;volatile
  1634                           
  1635                           ;mcc_generated_files/pin_manager.c: 115:     RB4PPS = 0x1C;
  1636  001BA2  0E1C               	movlw	28
  1637  001BA4  6F0D               	movwf	13,b	;volatile
  1638                           
  1639                           ;mcc_generated_files/pin_manager.c: 116:     SPI1SDIPPS = 0x05;
  1640  001BA6  0E05               	movlw	5
  1641  001BA8  6F6B               	movwf	107,b	;volatile
  1642  001BAA                     
  1643                           ; BSR set to: 2
  1644  001BAA  0012               	return		;funcret
  1645  001BAC                     __end_of_PIN_MANAGER_Initialize:
  1646                           	callstack 0
  1647                           
  1648 ;; *************** function _OSCILLATOR_Initialize *****************
  1649 ;; Defined at:
  1650 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_SYSTEM_Initialize
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text13
  1678  001C94                     __ptext13:
  1679                           	callstack 0
  1680  001C94                     _OSCILLATOR_Initialize:
  1681                           	callstack 126
  1682  001C94                     
  1683                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x60;
  1684  001C94  0E60               	movlw	96
  1685  001C96  0100               	movlb	0	; () banked
  1686  001C98  6FAD               	movwf	173,b	;volatile
  1687                           
  1688                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  1689  001C9A  0E00               	movlw	0
  1690  001C9C  6FAF               	movwf	175,b	;volatile
  1691                           
  1692                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  1693  001C9E  0E00               	movlw	0
  1694  001CA0  6FB3               	movwf	179,b	;volatile
  1695                           
  1696                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x08;
  1697  001CA2  0E08               	movlw	8
  1698  001CA4  6FB1               	movwf	177,b	;volatile
  1699                           
  1700                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  1701  001CA6  0E00               	movlw	0
  1702  001CA8  6FB0               	movwf	176,b	;volatile
  1703                           
  1704                           ;mcc_generated_files/mcc.c: 72:     ACTCON = 0x00;
  1705  001CAA  0E00               	movlw	0
  1706  001CAC  6FAC               	movwf	172,b	;volatile
  1707  001CAE                     
  1708                           ; BSR set to: 0
  1709  001CAE  0012               	return		;funcret
  1710  001CB0                     __end_of_OSCILLATOR_Initialize:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _ADCC_Initialize *****************
  1714 ;; Defined at:
  1715 ;;		line 62 in file "mcc_generated_files/adcc.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_SYSTEM_Initialize
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text14
  1743  001BAC                     __ptext14:
  1744                           	callstack 0
  1745  001BAC                     _ADCC_Initialize:
  1746                           	callstack 126
  1747  001BAC                     
  1748                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  1749  001BAC  0E00               	movlw	0
  1750  001BAE  0103               	movlb	3	; () banked
  1751  001BB0  6FD9               	movwf	217,b	;volatile
  1752                           
  1753                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  1754  001BB2  0E00               	movlw	0
  1755  001BB4  6FDA               	movwf	218,b	;volatile
  1756                           
  1757                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  1758  001BB6  0E00               	movlw	0
  1759  001BB8  6FDB               	movwf	219,b	;volatile
  1760                           
  1761                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  1762  001BBA  0E00               	movlw	0
  1763  001BBC  6FDC               	movwf	220,b	;volatile
  1764                           
  1765                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  1766  001BBE  0E00               	movlw	0
  1767  001BC0  6FDF               	movwf	223,b	;volatile
  1768                           
  1769                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  1770  001BC2  0E00               	movlw	0
  1771  001BC4  6FE0               	movwf	224,b	;volatile
  1772                           
  1773                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  1774  001BC6  0E00               	movlw	0
  1775  001BC8  6FE5               	movwf	229,b	;volatile
  1776                           
  1777                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  1778  001BCA  0E00               	movlw	0
  1779  001BCC  6FE7               	movwf	231,b	;volatile
  1780                           
  1781                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  1782  001BCE  0E00               	movlw	0
  1783  001BD0  6FEC               	movwf	236,b	;volatile
  1784                           
  1785                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  1786  001BD2  0E00               	movlw	0
  1787  001BD4  6FEE               	movwf	238,b	;volatile
  1788                           
  1789                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  1790  001BD6  0E00               	movlw	0
  1791  001BD8  6FEF               	movwf	239,b	;volatile
  1792                           
  1793                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  1794  001BDA  0E00               	movlw	0
  1795  001BDC  6FF0               	movwf	240,b	;volatile
  1796                           
  1797                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  1798  001BDE  0E00               	movlw	0
  1799  001BE0  6FF1               	movwf	241,b	;volatile
  1800                           
  1801                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  1802  001BE2  0E00               	movlw	0
  1803  001BE4  6FF2               	movwf	242,b	;volatile
  1804                           
  1805                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  1806  001BE6  0E00               	movlw	0
  1807  001BE8  6FF4               	movwf	244,b	;volatile
  1808                           
  1809                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x10;
  1810  001BEA  0E10               	movlw	16
  1811  001BEC  6FF5               	movwf	245,b	;volatile
  1812                           
  1813                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  1814  001BEE  0E00               	movlw	0
  1815  001BF0  6FF6               	movwf	246,b	;volatile
  1816                           
  1817                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  1818  001BF2  0E00               	movlw	0
  1819  001BF4  6FF7               	movwf	247,b	;volatile
  1820                           
  1821                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  1822  001BF6  0E00               	movlw	0
  1823  001BF8  6FF8               	movwf	248,b	;volatile
  1824                           
  1825                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  1826  001BFA  0E00               	movlw	0
  1827  001BFC  6FF9               	movwf	249,b	;volatile
  1828                           
  1829                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  1830  001BFE  0E1F               	movlw	31
  1831  001C00  6FFA               	movwf	250,b	;volatile
  1832                           
  1833                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  1834  001C02  0E84               	movlw	132
  1835  001C04  6FF3               	movwf	243,b	;volatile
  1836  001C06                     
  1837                           ; BSR set to: 3
  1838  001C06  0012               	return		;funcret
  1839  001C08                     __end_of_ADCC_Initialize:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _SPI1_Open *****************
  1843 ;; Defined at:
  1844 ;;		line 79 in file "mcc_generated_files/spi1.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  spi1UniqueCo    1    wreg     enum E355
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  spi1UniqueCo    1    1[COMRAM] enum E355
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      _Bool 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1862 ;;Total ram usage:        2 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text15
  1872  0019AA                     __ptext15:
  1873                           	callstack 0
  1874  0019AA                     _SPI1_Open:
  1875                           	callstack 127
  1876                           
  1877                           ; BSR set to: 3
  1878                           ;incstack = 0
  1879                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  1880  0019AA  6E02               	movwf	SPI1_Open@spi1UniqueConfiguration^(0+1280),c
  1881  0019AC                     
  1882                           ;mcc_generated_files/spi1.c: 79: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 80: {;mcc_generated_files/spi1.c: 81:     if(!SPI1CON0bits.EN
      +                          )
  1883  0019AC  0100               	movlb	0	; () banked
  1884  0019AE  BF84               	btfsc	132,7,b	;volatile
  1885  0019B0  EFDC  F00C         	goto	u191
  1886  0019B4  EFDE  F00C         	goto	u190
  1887  0019B8                     u191:
  1888  0019B8  EF32  F00D         	goto	l290
  1889  0019BC                     u190:
  1890  0019BC                     
  1891                           ; BSR set to: 0
  1892                           ;mcc_generated_files/spi1.c: 82:     {;mcc_generated_files/spi1.c: 83:         SPI1CON0 
      +                          = spi1_configuration[spi1UniqueConfiguration].con0;
  1893  0019BC  5002               	movf	SPI1_Open@spi1UniqueConfiguration^(0+1280),w,c
  1894  0019BE  0D05               	mullw	5
  1895  0019C0  0E01               	movlw	low _spi1_configuration
  1896  0019C2  24F3               	addwf	243,w,c
  1897  0019C4  6EF6               	movwf	tblptrl,c
  1898  0019C6  0E16               	movlw	high _spi1_configuration
  1899  0019C8  20F4               	addwfc	244,w,c
  1900  0019CA  6EF7               	movwf	tblptrh,c
  1901  0019CC                     	if	0	;There are less than 3 active tblptr bytes
  1902  0019CC                     	endif
  1903  0019CC  0008               	tblrd		*
  1904  0019CE  C4F5 F084          	movff	tablat,132	;volatile
  1905                           
  1906                           ;mcc_generated_files/spi1.c: 84:         SPI1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  1907  0019D2  5002               	movf	SPI1_Open@spi1UniqueConfiguration^(0+1280),w,c
  1908  0019D4  0D05               	mullw	5
  1909  0019D6  0E01               	movlw	1
  1910  0019D8  26F3               	addwf	243,f,c
  1911  0019DA  0E00               	movlw	0
  1912  0019DC  22F4               	addwfc	244,f,c
  1913  0019DE  0E01               	movlw	low _spi1_configuration
  1914  0019E0  24F3               	addwf	243,w,c
  1915  0019E2  6EF6               	movwf	tblptrl,c
  1916  0019E4  0E16               	movlw	high _spi1_configuration
  1917  0019E6  20F4               	addwfc	244,w,c
  1918  0019E8  6EF7               	movwf	tblptrh,c
  1919  0019EA                     	if	0	;There are less than 3 active tblptr bytes
  1920  0019EA                     	endif
  1921  0019EA  0008               	tblrd		*
  1922  0019EC  C4F5 F085          	movff	tablat,133	;volatile
  1923                           
  1924                           ;mcc_generated_files/spi1.c: 85:         SPI1CON2 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con2 | (0x1 | 0x2);
  1925  0019F0  5002               	movf	SPI1_Open@spi1UniqueConfiguration^(0+1280),w,c
  1926  0019F2  0D05               	mullw	5
  1927  0019F4  0E02               	movlw	2
  1928  0019F6  26F3               	addwf	243,f,c
  1929  0019F8  0E00               	movlw	0
  1930  0019FA  22F4               	addwfc	244,f,c
  1931  0019FC  0E01               	movlw	low _spi1_configuration
  1932  0019FE  24F3               	addwf	243,w,c
  1933  001A00  6EF6               	movwf	tblptrl,c
  1934  001A02  0E16               	movlw	high _spi1_configuration
  1935  001A04  20F4               	addwfc	244,w,c
  1936  001A06  6EF7               	movwf	tblptrh,c
  1937  001A08                     	if	0	;There are less than 3 active tblptr bytes
  1938  001A08                     	endif
  1939  001A08  0008               	tblrd		*
  1940  001A0A  50F5               	movf	tablat,w,c
  1941  001A0C  0903               	iorlw	3
  1942  001A0E  6F86               	movwf	134,b	;volatile
  1943  001A10                     
  1944                           ; BSR set to: 0
  1945                           ;mcc_generated_files/spi1.c: 86:         SPI1CLK = 0x00;
  1946  001A10  0E00               	movlw	0
  1947  001A12  6F8C               	movwf	140,b	;volatile
  1948  001A14                     
  1949                           ; BSR set to: 0
  1950                           ;mcc_generated_files/spi1.c: 87:         SPI1BAUD = spi1_configuration[spi1UniqueConfigu
      +                          ration].baud;
  1951  001A14  5002               	movf	SPI1_Open@spi1UniqueConfiguration^(0+1280),w,c
  1952  001A16  0D05               	mullw	5
  1953  001A18  0E03               	movlw	3
  1954  001A1A  26F3               	addwf	243,f,c
  1955  001A1C  0E00               	movlw	0
  1956  001A1E  22F4               	addwfc	244,f,c
  1957  001A20  0E01               	movlw	low _spi1_configuration
  1958  001A22  24F3               	addwf	243,w,c
  1959  001A24  6EF6               	movwf	tblptrl,c
  1960  001A26  0E16               	movlw	high _spi1_configuration
  1961  001A28  20F4               	addwfc	244,w,c
  1962  001A2A  6EF7               	movwf	tblptrh,c
  1963  001A2C                     	if	0	;There are less than 3 active tblptr bytes
  1964  001A2C                     	endif
  1965  001A2C  0008               	tblrd		*
  1966  001A2E  C4F5 F089          	movff	tablat,137	;volatile
  1967  001A32                     
  1968                           ; BSR set to: 0
  1969                           ;mcc_generated_files/spi1.c: 88:         TRISBbits.TRISB6 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  1970  001A32  5002               	movf	SPI1_Open@spi1UniqueConfiguration^(0+1280),w,c
  1971  001A34  0D05               	mullw	5
  1972  001A36  0E04               	movlw	4
  1973  001A38  26F3               	addwf	243,f,c
  1974  001A3A  0E00               	movlw	0
  1975  001A3C  22F4               	addwfc	244,f,c
  1976  001A3E  0E01               	movlw	low _spi1_configuration
  1977  001A40  24F3               	addwf	243,w,c
  1978  001A42  6EF6               	movwf	tblptrl,c
  1979  001A44  0E16               	movlw	high _spi1_configuration
  1980  001A46  20F4               	addwfc	244,w,c
  1981  001A48  6EF7               	movwf	tblptrh,c
  1982  001A4A                     	if	0	;There are less than 3 active tblptr bytes
  1983  001A4A                     	endif
  1984  001A4A  0008               	tblrd		*
  1985  001A4C  0061 F3D4  F501    	movff	tablat,??_SPI1_Open
  1986  001A52  3A01               	swapf	??_SPI1_Open^(0+1280),f,c
  1987  001A54  4601               	rlncf	??_SPI1_Open^(0+1280),f,c
  1988  001A56  4601               	rlncf	??_SPI1_Open^(0+1280),f,c
  1989  001A58  50C7               	movf	199,w,c	;volatile
  1990  001A5A  1801               	xorwf	??_SPI1_Open^(0+1280),w,c
  1991  001A5C  0BBF               	andlw	-65
  1992  001A5E  1801               	xorwf	??_SPI1_Open^(0+1280),w,c
  1993  001A60  6EC7               	movwf	199,c	;volatile
  1994  001A62                     
  1995                           ; BSR set to: 0
  1996                           ;mcc_generated_files/spi1.c: 89:         SPI1CON0bits.EN = 1;
  1997  001A62  8F84               	bsf	132,7,b	;volatile
  1998  001A64                     l290:
  1999                           
  2000                           ; BSR set to: 0
  2001  001A64  0012               	return		;funcret
  2002  001A66                     __end_of_SPI1_Open:
  2003                           	callstack 0
  2004                           
  2005 ;; *************** function _ADCC_GetSingleConversion *****************
  2006 ;; Defined at:
  2007 ;;		line 137 in file "mcc_generated_files/adcc.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  channel         1    wreg     enum E12909
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  channel         1    4[COMRAM] enum E12909
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2    0[COMRAM] unsigned short 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2021 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2024 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2025 ;;Total ram usage:        5 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text16
  2035  001C08                     __ptext16:
  2036                           	callstack 0
  2037  001C08                     _ADCC_GetSingleConversion:
  2038                           	callstack 127
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;incstack = 0
  2042                           ;ADCC_GetSingleConversion@channel stored from wreg
  2043  001C08  6E05               	movwf	ADCC_GetSingleConversion@channel^(0+1280),c
  2044  001C0A                     
  2045                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  2046  001C0A  0061  F414  F3EC   	movff	ADCC_GetSingleConversion@channel,1004	;volatile
  2047  001C10                     
  2048                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  2049  001C10  0103               	movlb	3	; () banked
  2050  001C12  8FF3               	bsf	243,7,b	;volatile
  2051  001C14                     
  2052                           ; BSR set to: 3
  2053                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  2054  001C14  9DF3               	bcf	243,6,b	;volatile
  2055  001C16                     
  2056                           ; BSR set to: 3
  2057                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  2058  001C16  81F3               	bsf	243,0,b	;volatile
  2059  001C18                     l147:
  2060                           
  2061                           ; BSR set to: 3
  2062                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  2063  001C18  B1F3               	btfsc	243,0,b	;volatile
  2064  001C1A  EF11  F00E         	goto	u331
  2065  001C1E  EF13  F00E         	goto	u330
  2066  001C22                     u331:
  2067  001C22  EF0C  F00E         	goto	l147
  2068  001C26                     u330:
  2069  001C26                     
  2070                           ; BSR set to: 3
  2071                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2072  001C26  51EB               	movf	235,w,b	;volatile
  2073  001C28  6E04               	movwf	(??_ADCC_GetSingleConversion+1)^(0+1280),c
  2074  001C2A  6A03               	clrf	??_ADCC_GetSingleConversion^(0+1280),c
  2075  001C2C  51EA               	movf	234,w,b	;volatile
  2076  001C2E  2403               	addwf	??_ADCC_GetSingleConversion^(0+1280),w,c
  2077  001C30  6E01               	movwf	?_ADCC_GetSingleConversion^(0+1280),c
  2078  001C32  0E00               	movlw	0
  2079  001C34  2004               	addwfc	(??_ADCC_GetSingleConversion+1)^(0+1280),w,c
  2080  001C36  6E02               	movwf	(?_ADCC_GetSingleConversion+1)^(0+1280),c
  2081  001C38                     
  2082                           ; BSR set to: 3
  2083  001C38  0012               	return		;funcret
  2084  001C3A                     __end_of_ADCC_GetSingleConversion:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2088 ;; Defined at:
  2089 ;;		line 174 in file "mcc_generated_files/adcc.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  2103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2107 ;;Total ram usage:        0 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_main
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text17
  2117  001CFE                     __ptext17:
  2118                           	callstack 0
  2119  001CFE                     _ADCC_DischargeSampleCapacitor:
  2120                           	callstack 127
  2121  001CFE                     
  2122                           ;mcc_generated_files/adcc.c: 177:     ADPCH = 0x3b;
  2123  001CFE  0E3B               	movlw	59
  2124  001D00  0103               	movlb	3	; () banked
  2125  001D02  6FEC               	movwf	236,b	;volatile
  2126  001D04                     
  2127                           ; BSR set to: 3
  2128  001D04  0012               	return		;funcret
  2129  001D06                     __end_of_ADCC_DischargeSampleCapacitor:
  2130                           	callstack 0
  2131                           
  2132                           	psect	rparam
  2133  0000                     
  2134                           	psect	idloc
  2135                           
  2136                           ;Config register IDLOC0 @ 0x200000
  2137                           ;	unspecified, using default values
  2138  200000                     	org	2097152
  2139  200000  0FFF               	dw	4095
  2140                           
  2141                           ;Config register IDLOC1 @ 0x200002
  2142                           ;	unspecified, using default values
  2143  200002                     	org	2097154
  2144  200002  0FFF               	dw	4095
  2145                           
  2146                           ;Config register IDLOC2 @ 0x200004
  2147                           ;	unspecified, using default values
  2148  200004                     	org	2097156
  2149  200004  0FFF               	dw	4095
  2150                           
  2151                           ;Config register IDLOC3 @ 0x200006
  2152                           ;	unspecified, using default values
  2153  200006                     	org	2097158
  2154  200006  0FFF               	dw	4095
  2155                           
  2156                           ;Config register IDLOC4 @ 0x200008
  2157                           ;	unspecified, using default values
  2158  200008                     	org	2097160
  2159  200008  0FFF               	dw	4095
  2160                           
  2161                           ;Config register IDLOC5 @ 0x20000A
  2162                           ;	unspecified, using default values
  2163  20000A                     	org	2097162
  2164  20000A  0FFF               	dw	4095
  2165                           
  2166                           ;Config register IDLOC6 @ 0x20000C
  2167                           ;	unspecified, using default values
  2168  20000C                     	org	2097164
  2169  20000C  0FFF               	dw	4095
  2170                           
  2171                           ;Config register IDLOC7 @ 0x20000E
  2172                           ;	unspecified, using default values
  2173  20000E                     	org	2097166
  2174  20000E  0FFF               	dw	4095
  2175                           
  2176                           ;Config register IDLOC8 @ 0x200010
  2177                           ;	unspecified, using default values
  2178  200010                     	org	2097168
  2179  200010  0FFF               	dw	4095
  2180                           
  2181                           ;Config register IDLOC9 @ 0x200012
  2182                           ;	unspecified, using default values
  2183  200012                     	org	2097170
  2184  200012  0FFF               	dw	4095
  2185                           
  2186                           ;Config register IDLOC10 @ 0x200014
  2187                           ;	unspecified, using default values
  2188  200014                     	org	2097172
  2189  200014  0FFF               	dw	4095
  2190                           
  2191                           ;Config register IDLOC11 @ 0x200016
  2192                           ;	unspecified, using default values
  2193  200016                     	org	2097174
  2194  200016  0FFF               	dw	4095
  2195                           
  2196                           ;Config register IDLOC12 @ 0x200018
  2197                           ;	unspecified, using default values
  2198  200018                     	org	2097176
  2199  200018  0FFF               	dw	4095
  2200                           
  2201                           ;Config register IDLOC13 @ 0x20001A
  2202                           ;	unspecified, using default values
  2203  20001A                     	org	2097178
  2204  20001A  0FFF               	dw	4095
  2205                           
  2206                           ;Config register IDLOC14 @ 0x20001C
  2207                           ;	unspecified, using default values
  2208  20001C                     	org	2097180
  2209  20001C  0FFF               	dw	4095
  2210                           
  2211                           ;Config register IDLOC15 @ 0x20001E
  2212                           ;	unspecified, using default values
  2213  20001E                     	org	2097182
  2214  20001E  0FFF               	dw	4095
  2215                           
  2216                           	psect	config
  2217                           
  2218                           ;Config register CONFIG1 @ 0x300000
  2219                           ;	External Oscillator Selection
  2220                           ;	FEXTOSC = OFF, Oscillator not enabled
  2221                           ;	Reset Oscillator Selection
  2222                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  2223  300000                     	org	3145728
  2224  300000  8C                 	db	140
  2225                           
  2226                           ;Config register CONFIG2 @ 0x300001
  2227                           ;	Clock out Enable bit
  2228                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2229                           ;	PRLOCKED One-Way Set Enable bit
  2230                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2231                           ;	Clock Switch Enable bit
  2232                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2233                           ;	Fail-Safe Clock Monitor Enable bit
  2234                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2235                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
  2236                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
  2237                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
  2238                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
  2239  300001                     	org	3145729
  2240  300001  FF                 	db	255
  2241                           
  2242                           ;Config register CONFIG3 @ 0x300002
  2243                           ;	MCLR Enable bit
  2244                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2245                           ;	Power-up timer selection bits
  2246                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2247                           ;	Multi-vector enable bit
  2248                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  2249                           ;	IVTLOCK bit One-way set enable bit
  2250                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2251                           ;	Low Power BOR Enable bit
  2252                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2253                           ;	Brown-out Reset Enable bits
  2254                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2255  300002                     	org	3145730
  2256  300002  F7                 	db	247
  2257                           
  2258                           ;Config register CONFIG4 @ 0x300003
  2259                           ;	Brown-out Reset Voltage Selection bits
  2260                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2261                           ;	ZCD Disable bit
  2262                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2263                           ;	PPSLOCK bit One-Way Set Enable bit
  2264                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2265                           ;	Stack Full/Underflow Reset Enable bit
  2266                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2267                           ;	Low Voltage Programming Enable bit
  2268                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2269                           ;	Extended Instruction Set Enable bit
  2270                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2271  300003                     	org	3145731
  2272  300003  FF                 	db	255
  2273                           
  2274                           ;Config register CONFIG5 @ 0x300004
  2275                           ;	WDT Period selection bits
  2276                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2277                           ;	WDT operating mode
  2278                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2279  300004                     	org	3145732
  2280  300004  9F                 	db	159
  2281                           
  2282                           ;Config register CONFIG6 @ 0x300005
  2283                           ;	WDT Window Select bits
  2284                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2285                           ;	WDT input clock selector
  2286                           ;	WDTCCS = SC, Software Control
  2287  300005                     	org	3145733
  2288  300005  FF                 	db	255
  2289                           
  2290                           ;Config register CONFIG7 @ 0x300006
  2291                           ;	Boot Block Size selection bits
  2292                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2293                           ;	Boot Block enable bit
  2294                           ;	BBEN = OFF, Boot block disabled
  2295                           ;	Storage Area Flash enable bit
  2296                           ;	SAFEN = OFF, SAF disabled
  2297                           ;	Background Debugger
  2298                           ;	DEBUG = OFF, Background Debugger disabled
  2299  300006                     	org	3145734
  2300  300006  FF                 	db	255
  2301                           
  2302                           ;Config register CONFIG8 @ 0x300007
  2303                           ;	Boot Block Write Protection bit
  2304                           ;	WRTB = OFF, Boot Block not Write protected
  2305                           ;	Configuration Register Write Protection bit
  2306                           ;	WRTC = OFF, Configuration registers not Write protected
  2307                           ;	Data EEPROM Write Protection bit
  2308                           ;	WRTD = OFF, Data EEPROM not Write protected
  2309                           ;	SAF Write protection bit
  2310                           ;	WRTSAF = OFF, SAF not Write Protected
  2311                           ;	Application Block write protection bit
  2312                           ;	WRTAPP = OFF, Application Block not write protected
  2313  300007                     	org	3145735
  2314  300007  FF                 	db	255
  2315                           
  2316                           ;Config register CONFIG9 @ 0x300008
  2317                           ;	PFM and Data EEPROM Code Protection bit
  2318                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2319  300008                     	org	3145736
  2320  300008  FF                 	db	255
  2321                           
  2322                           ; Padding undefined space
  2323  300009                     	org	3145737
  2324  300009  FF                 	db	255
  2325                           tosu	equ	0x4FF
  2326                           tosh	equ	0x4FE
  2327                           tosl	equ	0x4FD
  2328                           stkptr	equ	0x4FC
  2329                           pclatu	equ	0x4FB
  2330                           pclath	equ	0x4FA
  2331                           pcl	equ	0x4F9
  2332                           tblptru	equ	0x4F8
  2333                           tblptrh	equ	0x4F7
  2334                           tblptrl	equ	0x4F6
  2335                           tablat	equ	0x4F5
  2336                           prodh	equ	0x4F4
  2337                           prodl	equ	0x4F3
  2338                           indf0	equ	0x4EF
  2339                           postinc0	equ	0x4EE
  2340                           postdec0	equ	0x4ED
  2341                           preinc0	equ	0x4EC
  2342                           plusw0	equ	0x4EB
  2343                           fsr0h	equ	0x4EA
  2344                           fsr0l	equ	0x4E9
  2345                           wreg	equ	0x4E8
  2346                           indf1	equ	0x4E7
  2347                           postinc1	equ	0x4E6
  2348                           postdec1	equ	0x4E5
  2349                           preinc1	equ	0x4E4
  2350                           plusw1	equ	0x4E3
  2351                           fsr1h	equ	0x4E2
  2352                           fsr1l	equ	0x4E1
  2353                           bsr	equ	0x4E0
  2354                           indf2	equ	0x4DF
  2355                           postinc2	equ	0x4DE
  2356                           postdec2	equ	0x4DD
  2357                           preinc2	equ	0x4DC
  2358                           plusw2	equ	0x4DB
  2359                           fsr2h	equ	0x4DA
  2360                           fsr2l	equ	0x4D9
  2361                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    5
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      52
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_map
    _map->___aldiv
    ___aldiv->___lmul
    _c_WS2812B_Write->_ws_send_byte
    _zeroPulse->_SPI1_ExchangeByte
    _onePulse->_SPI1_ExchangeByte

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3198
                                             46 COMRAM     6     6      0
      _ADCC_DischargeSampleCapacitor
           _ADCC_GetSingleConversion
                          _SPI1_Open
                  _SYSTEM_Initialize
                    _c_WS2812B_Write
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                 20     0     20    2496
                                             26 COMRAM    20     0     20
           _ADCC_GetSingleConversion (ARG)
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _c_WS2812B_Write                                      4     1      3     466
                                              2 COMRAM     4     1      3
                       _ws_send_byte
 ---------------------------------------------------------------------------------
 (2) _ws_send_byte                                         1     1      0     150
                                              1 COMRAM     1     1      0
                           _onePulse
                          _zeroPulse
 ---------------------------------------------------------------------------------
 (3) _zeroPulse                                            0     0      0      15
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _onePulse                                             0     0      0      15
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _SPI1_ExchangeByte                                    1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADCC_DischargeSampleCapacitor                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_DischargeSampleCapacitor
   _ADCC_GetSingleConversion
   _SPI1_Open
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
   _c_WS2812B_Write
     _ws_send_byte
       _onePulse
         _SPI1_ExchangeByte
       _zeroPulse
         _SPI1_ExchangeByte
   _map
     _ADCC_GetSingleConversion (ARG)
     ___aldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             200      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     34      34       1       54.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BANK20             100      0       0      34        0.0%
BANK21             100      0       0      35        0.0%
ABS                  0      0       0      36        0.0%
BITBANK20          100      0       0      37        0.0%
BITBANK21          100      0       0      38        0.0%
BIGRAM            10FF      0       0      39        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jan 16 13:06:50 2022

                     _SPI1_ExchangeByte 1C3A                                      l53 1BAA  
                                    u10 1C56                                      u11 1C52  
                                    u20 18E6                                      u21 18E2  
                                    u30 1900                                      u31 18FC  
                                    u40 191A                                      u41 1916  
                                    u50 1934                                      u51 1930  
                                    u60 194E                                      u61 194A  
                                    u70 1968                                      u71 1964  
                                    u80 1982                                      u81 197E  
                                    u90 199C                                      u91 1998  
                    ?_SPI1_ExchangeByte 0501                                     l150 1C38  
                                   l135 1C06                                     l400 1B48  
                                   l147 1C18                                     l253 1CDE  
                                   l159 1D04                                     l256 1CAE  
                                   l360 1ADE                                     l290 1A64  
                                   l259 1C92                                     l363 1CFC  
                                   l357 1C76                                     l286 1CC8  
                                   l366 1CF4                                     l296 1C48  
                                   l385 19A8                                     l298 1C56  
                                   l299 1C5A                                     l467 18D4  
                                   l399 1B38                                     u300 185A  
                                   u301 1856                                     u310 1882  
                                   u311 187E                                     u320 18B4  
                                   u321 18B0                                     u330 1C26  
                                   u250 1AFE                                     u331 1C22  
                                   u251 1AFA                                     u260 1B38  
                                   u340 17C2                                     u261 1B34  
                                   u341 17BE                                     u190 19BC  
                                   u270 17DC                                     u191 19B8  
                                   u271 17D8                                     u280 17FE  
                                   u281 17FA                                     u290 1838  
                                   u291 1834                                     u357 1618  
                                   _map 1A66                 __size_of_PMD_Initialize 001C  
                   ??_SPI1_ExchangeByte 0501                                     wreg 0004E8  
                                  l1101 190C                                    l1111 193C  
                                  l1103 191A                                    l1121 1968  
                                  l1113 1940                                    l1105 1922  
                                  l1203 1CFE                                    l1211 1A10  
                                  l1131 198E                                    l1123 1970  
                                  l1115 194E                                    l1107 1926  
                                  l1213 1A14                                    l1205 1CCA  
                                  l1061 1C3C                                    l1133 199C  
                                  l1125 1974                                    l1117 1956  
                                  l1109 1934                                    l1215 1A32  
                                  l1207 19AC                                    l1071 1B5E  
                                  l1063 1C42                                    l1135 19A4  
                                  l1127 1982                                    l1119 195A  
                                  l1217 1A62                                    l1209 19BC  
                                  l1073 1B60                                    l1081 1C78  
                                  l1065 1CF6                                    l1129 198A  
                                  l1401 17F0                                    l1083 1C94  
                                  l1075 1B8C                                    l1067 1CEE  
                                  l1091 18E6                                    l1411 1838  
                                  l1403 17FE                                    l1077 1B96  
                                  l1069 1B4A                                    l1085 1CB0  
                                  l1093 18EE                                    l1421 1882  
                                  l1413 1840                                    l1405 180E  
                                  l1079 1BAC                                    l1087 1CC6  
                                  l1095 18F2                                    l1431 18B4  
                                  l1423 1892                                    l1415 184C  
                                  l1407 1812                                    l1441 1C14  
                                  l1097 1900                                    l1089 18D8  
                                  l1433 18C4                                    l1425 1894  
                                  l1417 185A                                    l1409 1822  
                                  l1443 1C16                                    l1099 1908  
                                  l1427 189E                                    l1419 1864  
                                  l1445 1C26                                    l1437 1C0A  
                                  l1453 1C5E                                    l1429 18A4  
                                  l1461 1612                                    l1439 1C10  
                                  l1391 1B18                                    l1383 1AE0  
                                  l1471 16DE                                    l1463 1622  
                                  l1455 1608                                    l1393 17CA  
                                  l1385 1AF0                                    l1449 1A66  
                                  l1473 16E2                                    l1465 1626  
                                  l1457 160C                                    l1395 17CE  
                                  l1387 1AFE                                    l1475 173C  
                                  l1467 1680                                    l1459 1612  
       ??_ADCC_DischargeSampleCapacitor 0501                                    l1397 17DC  
                                  l1389 1B0E                                    l1485 179E  
                                  l1477 1740                                    l1469 1684  
                                  l1399 17EC                                    l1487 17B0  
                                  l1479 179A                                    l1489 17B2  
                                  ?_map 051B                                    _LATA 0004BE  
                                  _LATB 0004BF                                    _LATC 0004C0  
                                  _PMD0 000063                                    _PMD1 000064  
                                  _PMD2 000065                                    _PMD3 000066  
                                  _PMD4 000067                                    _PMD5 000068  
                                  _WPUA 000401                                    _WPUB 000409  
                                  _WPUC 000411                                    _main 1608  
                                  map@x 051B                                    prodh 0004F4  
                                  prodl 0004F3                                    start FFFC  
             __end_of_SPI1_ExchangeByte 1C5C                            ___param_bank 000000  
                                 ??_map 052F          __size_of_OSCILLATOR_Initialize 001C  
         __end_of_OSCILLATOR_Initialize 1CB0                   __size_of_ws_send_byte 00D4  
                       __end_of___aldiv 18D6                                   _ADCAP 0003F0  
                                 _ADACT 0003F9                                   ?_main 0501  
                                 _ADCLK 0003FA                                   _ADCNT 0003E6  
                                 _ADPCH 0003EC                                   _ADREF 0003F8  
                                 _ADRPT 0003E7        SPI1_Open@spi1UniqueConfiguration 0502  
                                 _OSCEN 0000B3                                   _TRISA 0004C6  
                                 _TRISB 0004C7                                   _TRISC 0004C8  
                    __size_of_SPI1_Open 00BC                     ___lmul@multiplicand 0505  
                                 main@i 0534                                   tablat 0004F5  
                                 status 0004D8                __size_of_SPI1_Initialize 001A  
                       __initialization 1CE0                            _ws_send_byte 18D6  
                          __end_of_main 17CA                                  ??_main 052F  
                         __activetblptr 000001                                  _ADACCH 0003E4  
                                _ADACCL 0003E3                                  _ADACCU 0003E5  
                                _ADACQH 0003EF                                  _ADACQL 0003EE  
                                _ADCON0 0003F3                                  _ADCON1 0003F4  
                                _ADCON2 0003F5                                  _ADCON3 0003F6  
                                _ADERRH 0003DE                                  _ADERRL 0003DD  
                                _ADLTHH 0003DA                                  _ACTCON 0000AC  
                                _ADLTHL 0003D9                                  _ADRESH 0003EB  
                                _ADRESL 0003EA                                  _ADPREH 0003F2  
                                _ADPREL 0003F1                                  _ADSTAT 0003F7  
                                _ADUTHH 0003DC                                  _ADUTHL 0003DB  
                                _ANSELA 000400                                  _ANSELB 000408  
                                _ANSELC 000410                                  _RB4PPS 00020D  
                                _RB6PPS 00020F                                  _ODCONA 000402  
                                _ODCONB 00040A                                  _ODCONC 000412  
                                _INLVLA 000404                                  _INLVLB 00040C  
                                _INLVLC 000414                                  _OSCFRQ 0000B1  
 __end_of_ADCC_DischargeSampleCapacitor 1D06  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 1CFE              __size_of_SPI1_ExchangeByte 0022  
                     __end_of_SPI1_Open 1A66                                  ___lmul 1AE0  
                             ??___aldiv 0515                                  isa$std 000001  
                      __end_of_onePulse 1CFE                         _ADCC_Initialize 1BAC  
                        _PMD_Initialize 1C78                            __mediumconst 0000  
                                tblptrh 0004F7                                  tblptrl 0004F6  
                                tblptru 0004F8       __size_of_ADCC_GetSingleConversion 0032  
             ?_ADCC_GetSingleConversion 0501                       _SYSTEM_Initialize 1CCA  
              __size_of_c_WS2812B_Write 001C                              __accesstop 0560  
               __end_of__initialization 1CE0                      ?_SYSTEM_Initialize 0501  
                         ___rparam_used 000001                          __pcstackCOMRAM 0501  
                   ??_SYSTEM_Initialize 0501                       ??_SPI1_Initialize 0501  
                __end_of_PMD_Initialize 1C94                   SPI1_ExchangeByte@data 0501  
                    _spi1_configuration 1601               __end_of_SYSTEM_Initialize 1CE0  
        ?_ADCC_DischargeSampleCapacitor 0501                                 ?___lmul 0501  
               __end_of_ADCC_Initialize 1C08                                 _ADFLTRH 0003E2  
                               _ADFLTRL 0003E1                          ___lmul@product 0509  
                               _ADPREVH 0003E9                                 _ADPREVL 0003E8  
                               _ADSTPTH 0003E0                                 _ADSTPTL 0003DF  
                       ?_PMD_Initialize 0501                                 _OSCCON1 0000AD  
                               _OSCCON3 0000AF                                 _SPI1CLK 00008C  
                               _SPI1RXB 000080                                 _SPI1TXB 000081  
                               _OSCTUNE 0000B0                                 _SLRCONA 000403  
                               _SLRCONB 00040B                                 _SLRCONC 000413  
                    __size_of_zeroPulse 0008                               ?_onePulse 0501  
                               __Hparam 0000                                 __Lparam 0000  
                     ??_c_WS2812B_Write 0506                                 ___aldiv 17CA  
                       __size_of___lmul 006A                            __psmallconst 1600  
                               __pcinit 1CE0                                 __ramtop 1600  
                               __ptext0 1608                                 __ptext1 1A66  
                               __ptext2 1AE0                                 __ptext3 17CA  
                               __ptext4 1C5C                                 __ptext5 18D6  
                               __ptext6 1CEE                                 __ptext7 1CF6  
                               __ptext8 1C3A                                 __ptext9 1CCA  
                 _OSCILLATOR_Initialize 1C94                            __size_of_map 007A  
                      ___aldiv@dividend 050D                ??_PIN_MANAGER_Initialize 0501  
            __size_of_SYSTEM_Initialize 0016                                 main@red 0530  
                  end_of_initialization 1CE0                              ??_onePulse 0502  
                             _SPI1TCNTL 000082                        ___aldiv@quotient 0517  
                      ?_ADCC_Initialize 0501                               _SPI1_Open 19AA  
      __end_of_ADCC_GetSingleConversion 1C3A                       __end_of_zeroPulse 1CF6  
                             _TRISBbits 0004C7                              map@out_max 052B  
                            map@out_min 0527                         _SPI1_Initialize 1CB0  
                            ?_SPI1_Open 0501                          __end_of___lmul 1B4A  
                ?_OSCILLATOR_Initialize 0501                     start_initialization 1CE0  
       __size_of_PIN_MANAGER_Initialize 0062                             __end_of_map 1AE0  
                      ??_PMD_Initialize 0501                                ??___lmul 0509  
              _ADCC_GetSingleConversion 1C08                 __end_of_SPI1_Initialize 1CCA  
                       _c_WS2812B_Write 1C5C                  _PIN_MANAGER_Initialize 1B4A  
                         ?_ws_send_byte 0501                       __size_of_onePulse 0008  
                              ?___aldiv 050D         ADCC_GetSingleConversion@channel 0505  
                           ??_SPI1_Open 0501                             __smallconst 1600  
                       ___aldiv@divisor 0511                         ___aldiv@counter 0515  
                          _SPI1CON0bits 000084                          ??_ws_send_byte 0502  
                              _SPI1BAUD 000089                                _PIR3bits 0004B6  
                              _SPI1CON0 000084                                _SPI1CON1 000085  
                              _SPI1CON2 000086                        c_WS2812B_Write@B 0504  
                      c_WS2812B_Write@G 0503                        c_WS2812B_Write@R 0506  
                      c_WS2812B_Write@W 0505                               map@in_max 0523  
                             map@in_min 051F                              _ADCON0bits 0003F3  
                            _ADCON1bits 0003F4                              _ADCON2bits 0003F5  
                            _ADCON3bits 0003F6                               main@green 0531  
               __end_of_c_WS2812B_Write 1C78                               _zeroPulse 1CEE  
                             main@white 0533                        ?_SPI1_Initialize 0501  
                     ___lmul@multiplier 0501                              _ADSTATbits 0003F7  
                              __Hrparam 0000                                __Lrparam 0000  
                          __Lsmallconst 1600                           ws_send_byte@K 0502  
               ??_OSCILLATOR_Initialize 0501                        __size_of___aldiv 010C  
              __size_of_ADCC_Initialize 005C                              ?_zeroPulse 0501  
                              __ptext10 1CB0                                __ptext11 1C78  
                              __ptext12 1B4A                                __ptext13 1C94  
                              __ptext14 1BAC                                __ptext15 19AA  
                              __ptext16 1C08                                __ptext17 1CFE  
                         __size_of_main 01C2                                _onePulse 1CF6  
                              isa$xinst 000000              ??_ADCC_GetSingleConversion 0503  
                              main@blue 0532                        ?_c_WS2812B_Write 0503  
                  __end_of_ws_send_byte 19AA                 ?_PIN_MANAGER_Initialize 0501  
                            _SPI1SCKPPS 00026A                              _SPI1SDIPPS 00026B  
                           ??_zeroPulse 0502                            ___aldiv@sign 0516  
        __end_of_PIN_MANAGER_Initialize 1BAC                       ??_ADCC_Initialize 0501  
            __end_of_spi1_configuration 1606  
